openapi: 3.0.2
info:
  contact:
    email: entwicklung.finanzbuchhaltung@hamburger-software.de
    name: HS Entwicklung Finanzbuchhaltung
  description: |
    Anwendungsschnittstelle (Webservice) zur HS Finanzbuchhaltung.
    <br>Copyright HS - Hamburger Software GmbH & Co. KG, 2023 <br>
    <br>
    <a href="/fb-api/appinfo/changelog">Changelog anzeigen</a>
  license:
    name: HS - Hamburger Software GmbH & Co. KG
    url: http://www.hamburger-software.de
  termsOfService: https://www.hamburger-software.de
  title: HS API (Finanzbuchhaltung)
  version: 3.50.01.00
servers:
- url: "https://{hostname}:{port}/fb-api"
  variables:
    hostname:
      default: localhost
      description: Name des Rechners auf dem der WebService gestartet ist
    port:
      default: "9001"
      description: Port wie in der Konfiguration des WebService festgelegt
tags:
- description: Allgemeine Informationen zum Server
  name: AppInfo
- description: "Benutzerverwaltung, Passwort ändern"
  name: Administration
- description: Stammdaten Konten
  name: Konten
- description: "Weitere Stammdaten, wie Zahlungsbedingungen"
  name: WeitereStammdaten
- description: Abfrage der Offenen Posten
  name: OffenePosten
- description: Belege importieren
  name: Belege
paths:
  /v1/token:
    post:
      description: |
        Neues Access-Token zur OAuth2-Authentifizierung unter Angabe von UserName und Password oder eines RefreshTokens generieren.
      operationId: createToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createToken_request'
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: Token erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
      security:
      - BasicAuth: []
      - OAuth2: []
      summary: Erzeugung eines Bearer Tokens zur OAuth2-Authentifizierung
      tags:
      - Authentification
  /appinfo:
    get:
      description: |
        Prüfen, ob der Webservice erreichbar ist.

        Liefert Informationen zum laufenden Webservice: Bezeichnung, Version der Anwendung und verbundene Datenbank.
      operationId: getAppInfo
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/AppInfoResponse'
          description: Erfolgreicher Abruf der Ressource.
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
      summary: Allgemeine Informationen abrufen
      tags:
      - AppInfo
  /appinfo/authenticated:
    get:
      description: |
        Prüfen, ob der Webservice erreichbar ist (mit Authentifizierung).

        Liefert Informationen zum laufenden Webservice: Bezeichnung, Version der Anwendung und verbundene Datenbank.
      operationId: getAppInfoAuthenticated
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/AppInfoResponse'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
      security:
      - BasicAuth: []
      - OAuth2: []
      summary: Allgemeine Informationen abrufen
      tags:
      - AppInfo
  /appinfo/authenticated/api-key:
    get:
      description: |
        Prüfen, ob der Webservice erreichbar ist (mit Authentifizierung und API-Key).

        Liefert Informationen zum laufenden Webservice: Bezeichnung, Version der Anwendung und verbundene Datenbank.
      operationId: getAppInfoAuthenticatedApiKey
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/AppInfoResponse'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Allgemeine Informationen abrufen
      tags:
      - AppInfo
  /definition:
    get:
      operationId: getDefinition
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                type: string
          description: Erfolgreicher Abruf der Ressource.
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
      summary: "JSON-Datei abrufen, die den HS Webservice beschreibt"
      tags:
      - AppInfo
  /definition/yaml:
    get:
      operationId: getDefinitionYaml
      responses:
        "200":
          content:
            application/yaml;charset=utf-8:
              schema:
                type: string
          description: Erfolgreicher Abruf der Ressource.
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
      summary: "Yaml-Datei abrufen, die den HS Webservice beschreibt"
      tags:
      - AppInfo
  /definition/swagger:
    get:
      description: |
        Endpunkt zum Öffnen der SwaggerUI im Browser.
      operationId: getDefinitionSwagger
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
          description: Erfolgreicher Abruf der Ressource.
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
      summary: Anzeige der Schnittstellendefinition mithilfe der SwaggerUI.
      tags:
      - AppInfo
  /changelog.txt:
    get:
      description: |
        Endpunkt zum Abrufen des Changelogs zur API-Schnittstelle als Text-Datei.
      operationId: getChangelog
      responses:
        "200":
          content:
            application/text:
              schema:
                type: string
          description: Erfolgreicher Abruf der Ressource.
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
      summary: Abrufen des Changelogs zur API-Schnittstelle
      tags:
      - AppInfo
  /is-running:
    get:
      description: |
        Prüfen, ob der Webservice erreichbar ist, ohne dabei diesen Request zu protokollieren.
        Liefert Statuscode 200, wenn der Webservice erreichbar ist.
      operationId: getIsRunning
      responses:
        "200":
          description: Erfolgreiche Anfrage.
      summary: "Prüfen, ob der Webservice erreichbar ist."
      tags:
      - AppInfo
  /v1/accounts:
    get:
      description: "Konten auslesen. \n\nLiefert eine Liste von Konten (Personenkonten\
        \ und Sachkonten). \n\nZur Steigerung der Performance werden die Datensätze\
        \ standardmäßig in 100er-Blöcke paginiert. Der Request-Header liefert dann\
        \ die Location für den nächsten Block. Wenn die Performance es zulässt, kö\
        nnen auch größere Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben\
        \ werden.\n"
      operationId: getAccounts
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Konten auslesen.
      tags:
      - Konten
  /v1/accounts/{accountId}:
    get:
      description: Ein Konto auslesen.
      operationId: getAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Account'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Ein Konto auslesen.
      tags:
      - Konten
  /v1/balance-sheet-accounts:
    get:
      description: "Sonstige Bilanzkonten auslesen. \n\nLiefert eine Liste von Sonstigen\
        \ Bilanzkonten. \n\nZur Steigerung der Performance werden die Datensätze standardmä\
        ßig in 100er-Blöcke paginiert. Der Request-Header liefert dann die Location\
        \ für den nächsten Block. Wenn die Performance es zulässt, können auch grö\
        ßere Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.\n\
        Bei **expand=all** werden standardmäßig nur 20 Datensätze pro Block geliefert.\n"
      operationId: getBalanceSheetAccounts
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: "Parameter, der das Lesen einer Ressource mit untergeordneten\
          \ Ressourcen ermöglicht. \nBei der Angabe von **all** werden alle untergeordneten\
          \ Ressourcen mitgeladen. (Keine Angabe entspricht **none**)\n"
        in: query
        name: expand
        required: false
        schema:
          default: none
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/BalanceSheetAccount'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Sonstige Bilanzkonten auslesen.
      tags:
      - Konten
    post:
      description: |-
        Sonstiges Bilanzkonto anlegen.
        Neues sonstiges Bilanzkonto anlegen.
      operationId: postBalanceSheetAccount
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/BalanceSheetAccount'
        description: Sonstiges Bilanzkonto
        required: true
      responses:
        "201":
          description: Sonstiges Bilanzkonto erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Sonstiges Bilanzkonto anlegen.
      tags:
      - Konten
  /v1/balance-sheet-accounts/{accountId}:
    delete:
      description: "Ein sonstiges Bilanzkonto löschen. \n"
      operationId: deleteBalanceSheetAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Ein sonstiges Bilanzkonto löschen. \n"
      tags:
      - Konten
    get:
      description: Ein Sonstiges Bilanzkonto auslesen.
      operationId: getBalanceSheetAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/BalanceSheetAccount'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Ein Sonstiges Bilanzkonto auslesen.
      tags:
      - Konten
    put:
      description: |-
        Sonstiges Bilanzkonto ändern.
        Daten eines vorhandenen sonstigen Bilanzkontos ändern.
      operationId: putBalanceSheetAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/BalanceSheetAccount'
        description: Sonstiges Bilanzkonto
        required: true
      responses:
        "205":
          description: "Sonstiges Bilanzkonto erfolgreich gespeichert. Der Datensatz\
            \ muss neu gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Sonstiges Bilanzkonto ändern.
      tags:
      - Konten
  /v1/bank-accounts:
    get:
      description: "Bankkonten auslesen. \n\nLiefert eine Liste von Bankkonten. \n\
        \nZur Steigerung der Performance werden die Datensätze standardmäßig in 100er-Blö\
        cke paginiert. Der Request-Header liefert dann die Location für den nächsten\
        \ Block. Wenn die Performance es zulässt, können auch größere Blöcke abgerufen\
        \ werden. Dazu kann z.B. **top=1000** angegeben werden.\nBei **expand=all**\
        \ werden standardmäßig nur 20 Datensätze pro Block geliefert.\n"
      operationId: getBankAccounts
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: "Parameter, der das Lesen einer Ressource mit untergeordneten\
          \ Ressourcen ermöglicht. \nBei der Angabe von **all** werden alle untergeordneten\
          \ Ressourcen mitgeladen. (Keine Angabe entspricht **none**)\n"
        in: query
        name: expand
        required: false
        schema:
          default: none
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/BankAccount'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Bankkonten auslesen.
      tags:
      - Konten
    post:
      description: |-
        Bankkonto anlegen.
        Neues Bankkonto anlegen.
      operationId: postBankAccount
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/BankAccount'
        description: Bankkonto
        required: true
      responses:
        "201":
          description: Bankkonto erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Bankkonto anlegen.
      tags:
      - Konten
  /v1/bank-accounts/{accountId}:
    delete:
      description: "Ein Bankkonto löschen. \n"
      operationId: deleteBankAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Ein Bankkonto löschen. \n"
      tags:
      - Konten
    get:
      description: Ein Bankkonto auslesen.
      operationId: getBankAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/BankAccount'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Ein Bankkonto auslesen.
      tags:
      - Konten
    put:
      description: |-
        Bankkonto ändern.
        Daten eines vorhandenen Bankkontos ändern.
      operationId: putBankAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/BankAccount'
        description: Bankkonto
        required: true
      responses:
        "205":
          description: "Bankkonto erfolgreich gespeichert. Der Datensatz muss neu\
            \ gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Bankkonto ändern.
      tags:
      - Konten
  /v1/cash-accounts:
    get:
      description: "Kassenkonten auslesen. \n\nLiefert eine Liste von Kassenkonten.\
        \ \n\nZur Steigerung der Performance werden die Datensätze standardmäßig in\
        \ 100er-Blöcke paginiert. Der Request-Header liefert dann die Location fü\
        r den nächsten Block. Wenn die Performance es zulässt, können auch größere\
        \ Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.\n\
        Bei **expand=all** werden standardmäßig nur 20 Datensätze pro Block geliefert.\n"
      operationId: getCashAccounts
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: "Parameter, der das Lesen einer Ressource mit untergeordneten\
          \ Ressourcen ermöglicht. \nBei der Angabe von **all** werden alle untergeordneten\
          \ Ressourcen mitgeladen. (Keine Angabe entspricht **none**)\n"
        in: query
        name: expand
        required: false
        schema:
          default: none
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/CashAccount'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Kassenkonten auslesen.
      tags:
      - Konten
    post:
      description: |-
        Kassenkonto anlegen.
        Neues Kassenkonto anlegen.
      operationId: postCashAccount
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CashAccount'
        description: Kassenkonto
        required: true
      responses:
        "201":
          description: Kassenkonto erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Kassenkonto anlegen.
      tags:
      - Konten
  /v1/cash-accounts/{accountId}:
    delete:
      description: "Ein Kassenkonto löschen. \n"
      operationId: deleteCashAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Ein Kassenkonto löschen. \n"
      tags:
      - Konten
    get:
      description: Ein Kassenkonto auslesen.
      operationId: getCashAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CashAccount'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Ein Kassenkonto auslesen.
      tags:
      - Konten
    put:
      description: |-
        Kassenkonto ändern.
        Daten eines vorhandenen Kassenkontos ändern.
      operationId: putCashAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CashAccount'
        description: Kassenkonto
        required: true
      responses:
        "205":
          description: "Kassenkonto erfolgreich gespeichert. Der Datensatz muss neu\
            \ gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Kassenkonto ändern.
      tags:
      - Konten
  /v1/closing-balance-accounts:
    get:
      description: "Abschlusskonten auslesen. \n\nLiefert eine Liste von Abschlusskonten.\
        \ \n\nZur Steigerung der Performance werden die Datensätze standardmäßig in\
        \ 100er-Blöcke paginiert. Der Request-Header liefert dann die Location fü\
        r den nächsten Block. Wenn die Performance es zulässt, können auch größere\
        \ Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.\n\
        Bei **expand=all** werden standardmäßig nur 20 Datensätze pro Block geliefert.\n"
      operationId: getClosingBalanceAccounts
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: "Parameter, der das Lesen einer Ressource mit untergeordneten\
          \ Ressourcen ermöglicht. \nBei der Angabe von **all** werden alle untergeordneten\
          \ Ressourcen mitgeladen. (Keine Angabe entspricht **none**)\n"
        in: query
        name: expand
        required: false
        schema:
          default: none
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/ClosingBalanceAccount'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Abschlusskonten auslesen.
      tags:
      - Konten
    post:
      description: |-
        Abschlusskonto anlegen.
        Neues Abschlusskonto anlegen.
      operationId: postClosingBalanceAccount
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ClosingBalanceAccount'
        description: Abschlusskonto
        required: true
      responses:
        "201":
          description: Abschlusskonto erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Abschlusskonto anlegen.
      tags:
      - Konten
  /v1/closing-balance-accounts/{accountId}:
    delete:
      description: "Ein Abschlusskonto löschen. \n"
      operationId: deleteClosingBalanceAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Ein Abschlusskonto löschen. \n"
      tags:
      - Konten
    get:
      description: Ein Abschlusskonto auslesen.
      operationId: getClosingBalanceAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ClosingBalanceAccount'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Ein Abschlusskonto auslesen.
      tags:
      - Konten
    put:
      description: |-
        Abschlusskonto ändern.
        Daten eines vorhandenen Abschlusskontos ändern.
      operationId: putClosingBalanceAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ClosingBalanceAccount'
        description: Abschlusskonto
        required: true
      responses:
        "205":
          description: "Abschlusskonto erfolgreich gespeichert. Der Datensatz muss\
            \ neu gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Abschlusskonto ändern.
      tags:
      - Konten
  /v1/collective-accounts:
    get:
      description: "Sammelkonten auslesen. \n\nLiefert eine Liste von Sammelkonten.\
        \ \n\nZur Steigerung der Performance werden die Datensätze standardmäßig in\
        \ 100er-Blöcke paginiert. Der Request-Header liefert dann die Location fü\
        r den nächsten Block. Wenn die Performance es zulässt, können auch größere\
        \ Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.\n\
        Bei **expand=all** werden standardmäßig nur 20 Datensätze pro Block geliefert.\n"
      operationId: getCollectiveAccounts
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: "Parameter, der das Lesen einer Ressource mit untergeordneten\
          \ Ressourcen ermöglicht. \nBei der Angabe von **all** werden alle untergeordneten\
          \ Ressourcen mitgeladen. (Keine Angabe entspricht **none**)\n"
        in: query
        name: expand
        required: false
        schema:
          default: none
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/CollectiveAccount'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Sammelkonten auslesen.
      tags:
      - Konten
    post:
      description: |-
        Sammelkonto anlegen.
        Neues Sammelkonto anlegen.
      operationId: postCollectiveAccount
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CollectiveAccount'
        description: Sammelkonto
        required: true
      responses:
        "201":
          description: Sammelkonto erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Sammelkonto anlegen.
      tags:
      - Konten
  /v1/collective-accounts/{accountId}:
    delete:
      description: "Ein Sammelkonto löschen. \n"
      operationId: deleteCollectiveAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Ein Sammelkonto löschen. \n"
      tags:
      - Konten
    get:
      description: Ein Sammelkonto auslesen.
      operationId: getCollectiveAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CollectiveAccount'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Ein Sammelkonto auslesen.
      tags:
      - Konten
    put:
      description: |-
        Sammelkonto ändern.
        Daten eines vorhandenen Sammelkontos ändern.
      operationId: putCollectiveAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CollectiveAccount'
        description: Sammelkonto
        required: true
      responses:
        "205":
          description: "Sammelkonto erfolgreich gespeichert. Der Datensatz muss neu\
            \ gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Sammelkonto ändern.
      tags:
      - Konten
  /v1/creditors:
    get:
      description: "Lieferantenkonten auslesen. \n\nLiefert eine Liste von Lieferantenkonten.\
        \ \n\nZur Steigerung der Performance werden die Datensätze standardmäßig in\
        \ 100er-Blöcke paginiert. Der Request-Header liefert dann die Location fü\
        r den nächsten Block. Wenn die Performance es zulässt, können auch größere\
        \ Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.\n\
        Bei **expand=all** werden standardmäßig nur 20 Datensätze pro Block geliefert.\n"
      operationId: getCreditors
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: "Parameter, der das Lesen einer Ressource mit untergeordneten\
          \ Ressourcen ermöglicht. \nBei der Angabe von **all** werden alle untergeordneten\
          \ Ressourcen mitgeladen. (Keine Angabe entspricht **none**)\n"
        in: query
        name: expand
        required: false
        schema:
          default: none
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/CreditorGet'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Lieferantenkonten auslesen.
      tags:
      - Konten
    post:
      description: |-
        Lieferantenkonto anlegen.
        Neues Lieferantenkonto anlegen.
      operationId: postCreditor
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreditorPost'
        description: Lieferantenkonto
        required: true
      responses:
        "201":
          description: Lieferantenkonto erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Lieferantenkonto anlegen.
      tags:
      - Konten
  /v1/creditors/{accountId}:
    delete:
      description: "Ein Lieferantenkonto löschen. \n"
      operationId: deleteCreditor
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Ein Lieferantenkonto löschen. \n"
      tags:
      - Konten
    get:
      description: Ein Lieferantenkonto auslesen.
      operationId: getCreditor
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CreditorGet'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Ein Lieferantenkonto auslesen.
      tags:
      - Konten
    put:
      description: Daten eines vorhandenen Lieferantenkontos ändern.
      operationId: putCreditor
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreditorPut'
        description: Lieferantenkonto
        required: true
      responses:
        "205":
          description: "Lieferantenkonto erfolgreich gespeichert. Der Datensatz muss\
            \ neu gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Lieferantenkonto ändern.
      tags:
      - Konten
  /v1/creditors/{accountId}/addresses:
    get:
      description: "Adressen eines Lieferantenkontos auslesen. \n\nLiefert eine Liste\
        \ der Adressen eines Lieferantenkontos. \n\nZur Steigerung der Performance\
        \ werden die Datensätze standardmäßig in 100er-Blöcke paginiert. Der Request-Header\
        \ liefert dann die Location für den nächsten Block. Wenn die Performance es\
        \ zulässt, können auch größere Blöcke abgerufen werden. Dazu kann z.B. **top=1000**\
        \ angegeben werden.\n"
      operationId: getCreditorAddresses
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/CreditorAddressGet'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Adressen eines Lieferantenkontos auslesen.
      tags:
      - Konten
    post:
      description: |-
        Adresse bei einem Lieferantenkonto anlegen.
        Neue Adresse bei einem Lieferantenkonto anlegen.
      operationId: postCreditorAddress
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreditorAddressPutPost'
        description: Adresse
        required: true
      responses:
        "201":
          description: Adresse erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Adresse bei einem Lieferantenkonto anlegen.
      tags:
      - Konten
  /v1/creditors/{accountId}/addresses/{addressId}:
    delete:
      description: "Eine Adresse von einem Lieferantenkonto löschen. \n"
      operationId: deleteCreditorAddresses
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: Id einer Lieferantenadresse (technischer Schlüssel)
        in: path
        name: addressId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Eine Adresse von einem Lieferantenkonto löschen. \n"
      tags:
      - Konten
    get:
      description: Eine Adresse von einem Lieferantenkonto auslesen.
      operationId: getCreditorAddress
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: Id einer Lieferantenadresse (technischer Schlüssel)
        in: path
        name: addressId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CreditorAddressGet'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Eine Adresse von einem Lieferantenkonto auslesen.
      tags:
      - Konten
    put:
      description: |-
        Adresse von einem Lieferantenkonto ändern.
        Daten einer vorhandenen Adresse ändern.
      operationId: putCreditorAddresses
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: Id einer Lieferantenadresse (technischer Schlüssel)
        in: path
        name: addressId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreditorAddressPutPost'
        description: Adresse
        required: true
      responses:
        "205":
          description: "Adresse erfolgreich gespeichert. Der Datensatz muss neu gelesen\
            \ werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Adresse von einem Lieferantenkonto ändern.
      tags:
      - Konten
  /v1/currency-difference-accounts:
    get:
      description: "Währungsdifferenzkonten auslesen. \n\nLiefert eine Liste von Wä\
        hrungsdifferenzkonten. \n\nZur Steigerung der Performance werden die Datensä\
        tze standardmäßig in 100er-Blöcke paginiert. Der Request-Header liefert dann\
        \ die Location für den nächsten Block. Wenn die Performance es zulässt, kö\
        nnen auch größere Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben\
        \ werden.\nBei **expand=all** werden standardmäßig nur 20 Datensätze pro Block\
        \ geliefert.\n"
      operationId: getCurrencyDifferenceAccounts
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: "Parameter, der das Lesen einer Ressource mit untergeordneten\
          \ Ressourcen ermöglicht. \nBei der Angabe von **all** werden alle untergeordneten\
          \ Ressourcen mitgeladen. (Keine Angabe entspricht **none**)\n"
        in: query
        name: expand
        required: false
        schema:
          default: none
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/CurrencyDifferenceAccount'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Währungsdifferenzkonten auslesen.
      tags:
      - Konten
    post:
      description: |-
        Währungsdifferenzkonto anlegen.
        Neues Währungsdifferenzkonto anlegen.
      operationId: postCurrencyDifferenceAccount
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CurrencyDifferenceAccount'
        description: Währungsdifferenzkonto
        required: true
      responses:
        "201":
          description: Währungsdifferenzkonto erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Währungsdifferenzkonto anlegen.
      tags:
      - Konten
  /v1/currency-difference-accounts/{accountId}:
    delete:
      description: "Ein Währungsdifferenzkonto löschen. \n"
      operationId: deleteCurrencyDifferenceAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Ein Währungsdifferenzkonto löschen. \n"
      tags:
      - Konten
    get:
      description: Ein Währungsdifferenzkonto auslesen.
      operationId: getCurrencyDifferenceAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CurrencyDifferenceAccount'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Ein Währungsdifferenzkonto auslesen.
      tags:
      - Konten
    put:
      description: |-
        Währungsdifferenzkonto ändern.
        Daten eines vorhandenen Währungsdifferenzkontos ändern.
      operationId: putCurrencyDifferenceAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CurrencyDifferenceAccount'
        description: Währungsdifferenzkonto
        required: true
      responses:
        "205":
          description: "Währungsdifferenzkonto erfolgreich gespeichert. Der Datensatz\
            \ muss neu gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Währungsdifferenzkonto ändern.
      tags:
      - Konten
  /v1/debtors:
    get:
      description: "Kundenkonten auslesen. \n\nLiefert eine Liste von Kundenkonten.\
        \ \n\nZur Steigerung der Performance werden die Datensätze standardmäßig in\
        \ 100er-Blöcke paginiert. Der Request-Header liefert dann die Location fü\
        r den nächsten Block. Wenn die Performance es zulässt, können auch größere\
        \ Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.\n\
        Bei **expand=all** werden standardmäßig nur 20 Datensätze pro Block geliefert.\n"
      operationId: getDebtors
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: "Parameter, der das Lesen einer Ressource mit untergeordneten\
          \ Ressourcen ermöglicht. \nBei der Angabe von **all** werden alle untergeordneten\
          \ Ressourcen mitgeladen. (Keine Angabe entspricht **none**)\n"
        in: query
        name: expand
        required: false
        schema:
          default: none
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/DebtorGet'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Kundenkonten auslesen.
      tags:
      - Konten
    post:
      description: |-
        Kundenkonto anlegen.
        Neues Kundenkonto anlegen.
      operationId: postDebtor
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DebtorPost'
        description: Kundenkonto
        required: true
      responses:
        "201":
          description: Kundenkonto erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Kundenkonto anlegen.
      tags:
      - Konten
  /v1/debtors/{accountId}:
    delete:
      description: "Ein Kundenkonto löschen. \n"
      operationId: deleteDebtor
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Ein Kundenkonto löschen. \n"
      tags:
      - Konten
    get:
      description: Ein Kundenkonto auslesen.
      operationId: getDebtor
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/DebtorGet'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Ein Kundenkonto auslesen.
      tags:
      - Konten
    put:
      description: |-
        Kundenkonto ändern.
        Daten eines vorhandenen Kundenkontos ändern.
      operationId: putDebtor
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DebtorPut'
        description: Kundenkonto
        required: true
      responses:
        "205":
          description: "Kundenkonto erfolgreich gespeichert. Der Datensatz muss neu\
            \ gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Kundenkonto ändern.
      tags:
      - Konten
  /v1/debtors/{accountId}/sepa-mandates:
    get:
      description: "SEPA-Mandate eines Kundenkontos auslesen. \n\nLiefert eine Liste\
        \ der SEPA-Mandate eines Kundenkontos. \n\nZur Steigerung der Performance\
        \ werden die Datensätze standardmäßig in 100er-Blöcke paginiert. Der Request-Header\
        \ liefert dann die Location für den nächsten Block. Wenn die Performance es\
        \ zulässt, können auch größere Blöcke abgerufen werden. Dazu kann z.B. **top=1000**\
        \ angegeben werden.\n"
      operationId: getSepaMandates
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SepaMandateGet'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: SEPA-Mandate eines Kundenkontos auslesen.
      tags:
      - Konten
    post:
      description: |-
        SEPA-Mandat bei einem Kundenkonto anlegen.
        Neues SEPA-Mandat bei einem Kundenkonto anlegen.
      operationId: postSepaMandate
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/SepaMandatePutPost'
        description: SEPA-Mandat
        required: true
      responses:
        "201":
          description: SEPA-Mandat erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: SEPA-Mandat bei einem Kundenkonto anlegen.
      tags:
      - Konten
  /v1/debtors/{accountId}/sepa-mandates/{sepaMandateId}:
    delete:
      description: "Ein SEPA-Mandat von einem Kundenkonto löschen. \n"
      operationId: deleteSepaMandate
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: Id eines SEPA-Mandats (technischer Schlüssel)
        in: path
        name: sepaMandateId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Ein SEPA-Mandat von einem Kundenkonto löschen. \n"
      tags:
      - Konten
    get:
      description: Ein SEPA-Mandat von einem Kundenkonto auslesen.
      operationId: getSepaMandate
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: Id eines SEPA-Mandats (technischer Schlüssel)
        in: path
        name: sepaMandateId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/SepaMandateGet'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Ein SEPA-Mandat von einem Kundenkonto auslesen.
      tags:
      - Konten
    put:
      description: |-
        SEPA-Mandat von einem Kundenkonto ändern.
        Daten eines vorhandenen SEPA-Mandats ändern.
      operationId: putSepaMandate
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: Id eines SEPA-Mandats (technischer Schlüssel)
        in: path
        name: sepaMandateId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/SepaMandatePutPost'
        description: SEPA-Mandat
        required: true
      responses:
        "205":
          description: "SEPA-Mandat erfolgreich gespeichert. Der Datensatz muss neu\
            \ gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: SEPA-Mandat von einem Kundenkonto ändern.
      tags:
      - Konten
  /v1/debtors/{accountId}/addresses:
    get:
      description: "Adressen eines Kundenkontos auslesen. \n\nLiefert eine Liste der\
        \ Adressen eines Kundenkontos. \n\nZur Steigerung der Performance werden die\
        \ Datensätze standardmäßig in 100er-Blöcke paginiert. Der Request-Header liefert\
        \ dann die Location für den nächsten Block. Wenn die Performance es zulässt,\
        \ können auch größere Blöcke abgerufen werden. Dazu kann z.B. **top=1000**\
        \ angegeben werden.\n"
      operationId: getDebtorAddresses
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/DebtorAddressGet'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Adressen eines Kundenkontos auslesen.
      tags:
      - Konten
    post:
      description: |-
        Adresse bei einem Kundenkonto anlegen.
        Neue Adresse bei einem Kundenkonto anlegen.
      operationId: postDebtorAddress
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DebtorAddressPutPost'
        description: Adresse
        required: true
      responses:
        "201":
          description: Adresse erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Adresse bei einem Kundenkonto anlegen.
      tags:
      - Konten
  /v1/debtors/{accountId}/addresses/{addressId}:
    delete:
      description: "Eine Adresse von einem Kundenkonto löschen. \n"
      operationId: deleteDebtorAddresses
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: Id einer Adresse (technischer Schlüssel)
        in: path
        name: addressId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Eine Adresse von einem Kundenkonto löschen. \n"
      tags:
      - Konten
    get:
      description: Eine Adresse von einem Kundenkonto auslesen.
      operationId: getDebtorAddress
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: Id einer Adresse (technischer Schlüssel)
        in: path
        name: addressId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/DebtorAddressGet'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Eine Adresse von einem Kundenkonto auslesen.
      tags:
      - Konten
    put:
      description: |-
        Adresse von einem Kundenkonto ändern.
        Daten einer vorhandenen Adresse ändern.
      operationId: putDebtorAddresses
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: Id einer Adresse (technischer Schlüssel)
        in: path
        name: addressId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DebtorAddressPutPost'
        description: Adresse
        required: true
      responses:
        "205":
          description: "Adresse erfolgreich gespeichert. Der Datensatz muss neu gelesen\
            \ werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Adresse von einem Kundenkonto ändern.
      tags:
      - Konten
  /v1/investment-accounts:
    get:
      description: "Anlagekonten auslesen. \n\nLiefert eine Liste von Anlagekonten.\
        \ \n\nZur Steigerung der Performance werden die Datensätze standardmäßig in\
        \ 100er-Blöcke paginiert. Der Request-Header liefert dann die Location fü\
        r den nächsten Block. Wenn die Performance es zulässt, können auch größere\
        \ Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.\n\
        Bei **expand=all** werden standardmäßig nur 20 Datensätze pro Block geliefert.\n"
      operationId: getInvestmentAccounts
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: "Parameter, der das Lesen einer Ressource mit untergeordneten\
          \ Ressourcen ermöglicht. \nBei der Angabe von **all** werden alle untergeordneten\
          \ Ressourcen mitgeladen. (Keine Angabe entspricht **none**)\n"
        in: query
        name: expand
        required: false
        schema:
          default: none
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/InvestmentAccount'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Anlagekonten auslesen.
      tags:
      - Konten
    post:
      description: |-
        Anlagekonto anlegen.
        Neues Anlagekonto anlegen.
      operationId: postInvestmentAccount
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/InvestmentAccount'
        description: Anlagekonto
        required: true
      responses:
        "201":
          description: Anlagekonto erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Anlagekonto anlegen.
      tags:
      - Konten
  /v1/investment-accounts/{accountId}:
    delete:
      description: "Ein Anlagekonto löschen. \n"
      operationId: deleteInvestmentAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Ein Anlagekonto löschen. \n"
      tags:
      - Konten
    get:
      description: Ein Anlagekonto auslesen.
      operationId: getInvestmentAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/InvestmentAccount'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Ein Anlagekonto auslesen.
      tags:
      - Konten
    put:
      description: |-
        Anlagekonto ändern.
        Daten eines vorhandenen Anlagekontos ändern.
      operationId: putInvestmentAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/InvestmentAccount'
        description: Anlagekonto
        required: true
      responses:
        "205":
          description: "Anlagekonto erfolgreich gespeichert. Der Datensatz muss neu\
            \ gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Anlagekonto ändern.
      tags:
      - Konten
  /v1/opening-balance-accounts:
    get:
      description: "Eröffnungskonten auslesen. \n\nLiefert eine Liste von Eröffnungskonten.\
        \ \n\nZur Steigerung der Performance werden die Datensätze standardmäßig in\
        \ 100er-Blöcke paginiert. Der Request-Header liefert dann die Location fü\
        r den nächsten Block. Wenn die Performance es zulässt, können auch größere\
        \ Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.\n\
        Bei **expand=all** werden standardmäßig nur 20 Datensätze pro Block geliefert.\n"
      operationId: getOpeningBalanceAccounts
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: "Parameter, der das Lesen einer Ressource mit untergeordneten\
          \ Ressourcen ermöglicht. \nBei der Angabe von **all** werden alle untergeordneten\
          \ Ressourcen mitgeladen. (Keine Angabe entspricht **none**)\n"
        in: query
        name: expand
        required: false
        schema:
          default: none
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/OpeningBalanceAccount'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Eröffnungskonten auslesen.
      tags:
      - Konten
    post:
      description: |-
        Eröffnungskonto anlegen.
        Neues Eröffnungskonto anlegen.
      operationId: postOpeningBalanceAccount
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/OpeningBalanceAccount'
        description: Eröffnungskonto
        required: true
      responses:
        "201":
          description: Eröffnungskonto erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Eröffnungskonto anlegen.
      tags:
      - Konten
  /v1/opening-balance-accounts/{accountId}:
    delete:
      description: "Ein Eröffnungskonto löschen. \n"
      operationId: deleteOpeningBalanceAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Ein Eröffnungskonto löschen. \n"
      tags:
      - Konten
    get:
      description: Ein Eröffnungskonto auslesen.
      operationId: getOpeningBalanceAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OpeningBalanceAccount'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Ein Eröffnungskonto auslesen.
      tags:
      - Konten
    put:
      description: |-
        Eröffnungskonto ändern.
        Daten eines vorhandenen Eröffnungskontos ändern.
      operationId: putOpeningBalanceAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/OpeningBalanceAccount'
        description: Eröffnungskonto
        required: true
      responses:
        "205":
          description: "Eröffnungskonto erfolgreich gespeichert. Der Datensatz muss\
            \ neu gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Eröffnungskonto ändern.
      tags:
      - Konten
  /v1/profit-loss-accounts:
    get:
      description: "GuV-Konten auslesen. \n\nLiefert eine Liste von GuV-Konten. \n\
        \nZur Steigerung der Performance werden die Datensätze standardmäßig in 100er-Blö\
        cke paginiert. Der Request-Header liefert dann die Location für den nächsten\
        \ Block. Wenn die Performance es zulässt, können auch größere Blöcke abgerufen\
        \ werden. Dazu kann z.B. **top=1000** angegeben werden.\nBei **expand=all**\
        \ werden standardmäßig nur 20 Datensätze pro Block geliefert.\n"
      operationId: getProfitLossAccounts
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: "Parameter, der das Lesen einer Ressource mit untergeordneten\
          \ Ressourcen ermöglicht. \nBei der Angabe von **all** werden alle untergeordneten\
          \ Ressourcen mitgeladen. (Keine Angabe entspricht **none**)\n"
        in: query
        name: expand
        required: false
        schema:
          default: none
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/ProfitLossAccount'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: GuV-Konten auslesen.
      tags:
      - Konten
    post:
      description: |-
        GuV-Konto anlegen.
        Neues GuV-Konto anlegen.
      operationId: postProfitLossAccount
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ProfitLossAccount'
        description: GuV-Konto
        required: true
      responses:
        "201":
          description: GuV-Konto erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: GuV-Konto anlegen.
      tags:
      - Konten
  /v1/profit-loss-accounts/{accountId}:
    delete:
      description: "Ein GuV-Konto löschen. \n"
      operationId: deleteProfitLossAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Ein GuV-Konto löschen. \n"
      tags:
      - Konten
    get:
      description: Ein GuV-Konto auslesen.
      operationId: getProfitLossAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProfitLossAccount'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Ein GuV-Konto auslesen.
      tags:
      - Konten
    put:
      description: |-
        GuV-Konto ändern.
        Daten eines vorhandenen GuV-Kontos ändern.
      operationId: putProfitLossAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ProfitLossAccount'
        description: GuV-Konto
        required: true
      responses:
        "205":
          description: "GuV-Konto erfolgreich gespeichert. Der Datensatz muss neu\
            \ gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: GuV-Konto ändern.
      tags:
      - Konten
  /v1/quantity-accounts:
    get:
      description: "Mengenkonten auslesen. \n\nLiefert eine Liste von Mengenkonto.\
        \ \n\nZur Steigerung der Performance werden die Datensätze standardmäßig in\
        \ 100er-Blöcke paginiert. Der Request-Header liefert dann die Location fü\
        r den nächsten Block. Wenn die Performance es zulässt, können auch größere\
        \ Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.\n\
        Bei **expand=all** werden standardmäßig nur 20 Datensätze pro Block geliefert.\n"
      operationId: getQuantityAccounts
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: "Parameter, der das Lesen einer Ressource mit untergeordneten\
          \ Ressourcen ermöglicht. \nBei der Angabe von **all** werden alle untergeordneten\
          \ Ressourcen mitgeladen. (Keine Angabe entspricht **none**)\n"
        in: query
        name: expand
        required: false
        schema:
          default: none
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/QuantityAccount'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Mengenkonten auslesen.
      tags:
      - Konten
    post:
      description: |-
        Mengenkonto anlegen.
        Neues Mengenkonto anlegen.
      operationId: postQuantityAccount
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/QuantityAccount'
        description: Mengenkonto
        required: true
      responses:
        "201":
          description: Mengenkonto erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Mengenkonto anlegen.
      tags:
      - Konten
  /v1/quantity-accounts/{accountId}:
    delete:
      description: "Ein Mengenkonto löschen. \n"
      operationId: deleteQuantityAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Ein Mengenkonto löschen. \n"
      tags:
      - Konten
    get:
      description: Ein Mengenkonto auslesen.
      operationId: getQuantityAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/QuantityAccount'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Ein Mengenkonto auslesen.
      tags:
      - Konten
    put:
      description: |-
        Mengenkonto ändern.
        Daten eines vorhandenen Mengenkontos ändern.
      operationId: putQuantityAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/QuantityAccount'
        description: Mengenkonto
        required: true
      responses:
        "205":
          description: "Mengenkonto erfolgreich gespeichert. Der Datensatz muss neu\
            \ gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Mengenkonto ändern.
      tags:
      - Konten
  /v1/tax-accounts:
    get:
      description: "Steuerkonten auslesen. \n\nLiefert eine Liste von Steuerkonten.\
        \ \n\nZur Steigerung der Performance werden die Datensätze standardmäßig in\
        \ 100er-Blöcke paginiert. Der Request-Header liefert dann die Location fü\
        r den nächsten Block. Wenn die Performance es zulässt, können auch größere\
        \ Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.\n\
        Bei **expand=all** werden standardmäßig nur 20 Datensätze pro Block geliefert.\n"
      operationId: getTaxAccounts
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: "Parameter, der das Lesen einer Ressource mit untergeordneten\
          \ Ressourcen ermöglicht. \nBei der Angabe von **all** werden alle untergeordneten\
          \ Ressourcen mitgeladen. (Keine Angabe entspricht **none**)\n"
        in: query
        name: expand
        required: false
        schema:
          default: none
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/TaxAccount'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Steuerkonten auslesen.
      tags:
      - Konten
    post:
      description: |-
        Steuerkonto anlegen.
        Neues Steuerkonto anlegen.
      operationId: postTaxAccount
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TaxAccount'
        description: Steuerkonto
        required: true
      responses:
        "201":
          description: Steuerkonto erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Steuerkonto anlegen.
      tags:
      - Konten
  /v1/tax-accounts/{accountId}:
    delete:
      description: "Ein Steuerkonto löschen. \n"
      operationId: deleteTaxAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Ein Steuerkonto löschen. \n"
      tags:
      - Konten
    get:
      description: Ein Steuerkonto auslesen.
      operationId: getTaxAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TaxAccount'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Ein Steuerkonto auslesen.
      tags:
      - Konten
    put:
      description: |-
        Steuerkonto ändern.
        Daten eines vorhandenen Steuerkontos ändern.
      operationId: putTaxAccount
      parameters:
      - description: Id eines Kontos (technischer Schlüssel)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TaxAccount'
        description: Steuerkonto
        required: true
      responses:
        "205":
          description: "Steuerkonto erfolgreich gespeichert. Der Datensatz muss neu\
            \ gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Steuerkonto ändern.
      tags:
      - Konten
  /v1/open-items:
    get:
      description: "Offene Posten auslesen. \n\nLiefert eine Liste von Offenen Posten.\n\
        \nZur Steigerung der Performance werden die Datensätze standardmäßig in 100er-Blö\
        cke paginiert. Der Request-Header liefert dann die Location für den nächsten\
        \ Block. Wenn die Performance es zulässt, können auch größere Blöcke abgerufen\
        \ werden. Dazu kann z.B. **top=1000** angegeben werden.\nBei **expand=all**\
        \ werden standardmäßig nur 20 Datensätze pro Block geliefert.\n"
      operationId: getOpenItems
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: "Parameter, der das Lesen einer Ressource mit untergeordneten\
          \ Ressourcen ermöglicht. \nBei der Angabe von **all** werden alle untergeordneten\
          \ Ressourcen mitgeladen. (Keine Angabe entspricht **none**)\n"
        in: query
        name: expand
        required: false
        schema:
          default: none
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/OpenItem'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Offene Posten auslesen.
      tags:
      - OffenePosten
  /v1/open-items/{openItemId}:
    get:
      description: Einen Offenen Posten auslesen.
      operationId: getOpenItem
      parameters:
      - description: Id eines Offenen Postens (technischer Schlüssel)
        in: path
        name: openItemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OpenItem'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Einen Offenen Posten auslesen.
      tags:
      - OffenePosten
    put:
      description: |-
        Offenen Posten ändern.
        Daten eines vorhandenen Offenen Postens ändern.
      operationId: putOpenItem
      parameters:
      - description: Id eines Offenen Postens (technischer Schlüssel)
        in: path
        name: openItemId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/OpenItem'
        description: Offener Posten
        required: true
      responses:
        "205":
          description: "Offenen Posten erfolgreich gespeichert. Der Datensatz muss\
            \ neu gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Offenen Posten ändern.
      tags:
      - OffenePosten
  /v1/open-items/{openItemId}/instalments:
    get:
      description: Liste von Raten des OPs zurückgeben.
      operationId: getInstalments
      parameters:
      - description: Id eines Offenen Postens (technischer Schlüssel)
        in: path
        name: openItemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Instalment'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      summary: Liste von Raten des OPs zurückgeben.
      tags:
      - OffenePosten
  /v1/open-items/{openItemId}/patchInstalmentAgreement:
    patch:
      description: "Ratenvereinbarung des OPs bearbeiten. Falls der OP keine Ratenvereinbarung\
        \ hat, wird diese aktiviert."
      operationId: patchInstalmentAgreement
      parameters:
      - description: Id eines Offenen Postens (technischer Schlüssel)
        in: path
        name: openItemId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/InstalmentAgreement'
        description: Ratenvereinbarung
        required: true
      responses:
        "200":
          description: Erfolgreicher Abruf der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      summary: Ratenvereinbarung bearbeiten.
      tags:
      - OffenePosten
  /v1/open-items/{openItemId}/deactivateInstalmentAgreement:
    patch:
      description: |-
        Ratenvereinbarung deaktivieren.
        Daten eines vorhandenen Offenen Postens ändern.
      operationId: deactivateInstalments
      parameters:
      - description: Id eines Offenen Postens (technischer Schlüssel)
        in: path
        name: openItemId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/NetDueDate'
        description: Ratenvereinbarung
        required: true
      responses:
        "200":
          description: Raten erfolgreich deaktiviert.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      summary: Ratenvereinbarung deaktivieren.
      tags:
      - OffenePosten
  /v1/terms-of-payment:
    get:
      description: "Zahlungsbedingungen auslesen. \n\nLiefert eine Liste von Zahlungsbedingungen.\n\
        \nZur Steigerung der Performance werden die Datensätze standardmäßig in 100er-Blö\
        cke paginiert. Der Request-Header liefert dann die Location für den nächsten\
        \ Block. Wenn die Performance es zulässt, können auch größere Blöcke abgerufen\
        \ werden. Dazu kann z.B. **top=1000** angegeben werden.\n"
      operationId: getTermsOfPayment
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/TermOfPaymentGet'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Zahlungsbedingungen auslesen.
      tags:
      - WeitereStammdaten
    post:
      description: |-
        Zahlungsbedingung anlegen.
        Neue Zahlungsbedingung anlegen.
      operationId: postTermOfPayment
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TermOfPaymentPost'
        description: Steuerkonto
        required: true
      responses:
        "201":
          description: Zahlungsbedingung erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Zahlungsbedingung anlegen.
      tags:
      - WeitereStammdaten
  /v1/terms-of-payment/{termOfPaymentId}:
    delete:
      description: "Eine Zahlungsbedingung löschen. \n"
      operationId: deleteTermOfPayment
      parameters:
      - description: Id einer Zahlungsbedingung (technischer Schlüssel)
        in: path
        name: termOfPaymentId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Eine Zahlungsbedingung löschen. \n"
      tags:
      - WeitereStammdaten
    get:
      description: Eine Zahlungsbedingung auslesen.
      operationId: getTermOfPayment
      parameters:
      - description: Id einer Zahlungsbedingung (technischer Schlüssel)
        in: path
        name: termOfPaymentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TermOfPaymentGet'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Eine Zahlungsbedingung auslesen.
      tags:
      - WeitereStammdaten
    put:
      description: |-
        Zahlungsbedingung ändern.
        Daten einer vorhandenen Zahlungsbedingung ändern.
      operationId: putTermOfPayment
      parameters:
      - description: Id einer Zahlungsbedingung (technischer Schlüssel)
        in: path
        name: termOfPaymentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TermOfPaymentPut'
        description: Zahlungsbedingung
        required: true
      responses:
        "205":
          description: "Zahlungsbedingung erfolgreich gespeichert. Der Datensatz muss\
            \ neu gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Zahlungsbedingung ändern.
      tags:
      - WeitereStammdaten
  /v1/cost-centers:
    get:
      description: "Kostenstellen auslesen. \n\nLiefert eine Liste von Kostenstellen.\n\
        \nZur Steigerung der Performance werden die Datensätze standardmäßig in 100er-Blö\
        cke paginiert. Der Request-Header liefert dann die Location für den nächsten\
        \ Block. Wenn die Performance es zulässt, können auch größere Blöcke abgerufen\
        \ werden. Dazu kann z.B. **top=1000** angegeben werden.\n"
      operationId: getCostCenters
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/CostCenterGet'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Kostenstellen auslesen.
      tags:
      - WeitereStammdaten
    post:
      description: Neue Kostenstelle anlegen.
      operationId: postCostCenter
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CostCenterPost'
        description: Kostenstelle
        required: true
      responses:
        "201":
          description: Kostenstelle erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Kostenstelle anlegen.
      tags:
      - WeitereStammdaten
  /v1/cost-centers/{costCenterId}:
    delete:
      description: "Kostenstelle löschen. \n"
      operationId: deleteCostCenter
      parameters:
      - description: Id einer Kostenstelle (technischer Schlüssel)
        in: path
        name: costCenterId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Kostenstelle löschen. \n"
      tags:
      - WeitereStammdaten
    get:
      description: Eine Kostenstelle auslesen.
      operationId: getCostCenter
      parameters:
      - description: Id einer Kostenstelle (technischer Schlüssel)
        in: path
        name: costCenterId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CostCenterGet'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Eine Kostenstelle auslesen.
      tags:
      - WeitereStammdaten
    put:
      description: Daten einer vorhandenen Kostenstelle ändern.
      operationId: PutCostCenter
      parameters:
      - description: Id einer Kostenstelle (technischer Schlüssel)
        in: path
        name: costCenterId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CostCenterPut'
        description: Kostenstelle
        required: true
      responses:
        "205":
          description: "Kostenstelle erfolgreich gespeichert. Der Datensatz muss neu\
            \ gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Kostenstelle ändern.
      tags:
      - WeitereStammdaten
  /v1/cost-units:
    get:
      description: "Kostenträger auslesen. \n\nLiefert eine Liste von Kostenträgern.\n\
        \nZur Steigerung der Performance werden die Datensätze standardmäßig in 100er-Blö\
        cke paginiert. Der Request-Header liefert dann die Location für den nächsten\
        \ Block. Wenn die Performance es zulässt, können auch größere Blöcke abgerufen\
        \ werden. Dazu kann z.B. **top=1000** angegeben werden.\n"
      operationId: getCostUnits
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/CostUnitGet'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Kostenträger auslesen.
      tags:
      - WeitereStammdaten
    post:
      description: |-
        Kostenträger anlegen.
        Neuen Kostenträger anlegen.
      operationId: postCostUnit
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CostUnitPost'
        description: Kostenträger
        required: true
      responses:
        "201":
          description: Kostenträger erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Kostenträger anlegen.
      tags:
      - WeitereStammdaten
  /v1/cost-units/{costUnitId}:
    delete:
      description: "Kostenträger löschen. \n"
      operationId: deleteCostUnit
      parameters:
      - description: Id eines Kostenträgers (technischer Schlüssel)
        in: path
        name: costUnitId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Kostenträger löschen. \n"
      tags:
      - WeitereStammdaten
    get:
      description: Einen Kostenträger auslesen.
      operationId: getCostUnit
      parameters:
      - description: Id eines Kostenträgers (technischer Schlüssel)
        in: path
        name: costUnitId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CostUnitGet'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Einen Kostenträger auslesen.
      tags:
      - WeitereStammdaten
    put:
      description: |-
        Kostenträger ändern.
        Daten eines vorhandenen Kostenträger ändern.
      operationId: PutCostUnit
      parameters:
      - description: Id eines Kostenträgers (technischer Schlüssel)
        in: path
        name: costUnitId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CostUnitPut'
        description: Kostenträger
        required: true
      responses:
        "205":
          description: "Kostenträger erfolgreich gespeichert. Der Datensatz muss neu\
            \ gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Kostenträger ändern.
      tags:
      - WeitereStammdaten
  /v1/dunning-types:
    get:
      description: "Mahntypen auslesen. \n\nLiefert eine Liste von Mahntypen.\n\n\
        Zur Steigerung der Performance werden die Datensätze standardmäßig in 100er-Blö\
        cke paginiert. Der Request-Header liefert dann die Location für den nächsten\
        \ Block. Wenn die Performance es zulässt, können auch größere Blöcke abgerufen\
        \ werden. Dazu kann z.B. **top=1000** angegeben werden.\n"
      operationId: getDunningTypes
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/DunningTypeGet'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Mahntypen auslesen.
      tags:
      - WeitereStammdaten
    post:
      description: |-
        Mahntyp anlegen.
        Neuen Mahntyp anlegen.
      operationId: postDunningType
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DunningTypePost'
        description: Mahntyp
        required: true
      responses:
        "201":
          description: Mahntyp erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Mahntyp anlegen.
      tags:
      - WeitereStammdaten
  /v1/dunning-types/{dunningTypeId}:
    delete:
      description: "Mahntyp löschen. \n"
      operationId: deleteDunningType
      parameters:
      - description: Id eines Mahntyps (technischer Schlüssel)
        in: path
        name: dunningTypeId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Mahntyp löschen. \n"
      tags:
      - WeitereStammdaten
    get:
      description: Einen Mahntyp auslesen.
      operationId: getDunningType
      parameters:
      - description: Id eines Mahntyps (technischer Schlüssel)
        in: path
        name: dunningTypeId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/DunningTypeGet'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Einen Mahntyp auslesen.
      tags:
      - WeitereStammdaten
    put:
      description: |-
        Mahntyp ändern.
        Daten eines vorhandenen Mahntyps ändern.
      operationId: PutDunningType
      parameters:
      - description: Id eines Mahntyps (technischer Schlüssel)
        in: path
        name: dunningTypeId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DunningTypePut'
        description: Mahntyp
        required: true
      responses:
        "205":
          description: "Mahntyp erfolgreich gespeichert. Der Datensatz muss neu gelesen\
            \ werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Mahntyp ändern.
      tags:
      - WeitereStammdaten
  /v1/dunning-types/{dunningTypeId}/dunning-levels:
    get:
      description: "Mahnstufen eines Mahntyps auslesen.\n\nLiefert eine Liste der\
        \ Mahnstufen eines Mahntyps. \n\nZur Steigerung der Performance werden die\
        \ Datensätze standardmäßig in 100er-Blöcke paginiert. Der Request-Header liefert\
        \ dann die Location für den nächsten Block. Wenn die Performance es zulässt,\
        \ können auch größere Blöcke abgerufen werden. Dazu kann z.B. **top=1000**\
        \ angegeben werden.\n"
      operationId: getDunningLevelsFromDunningType
      parameters:
      - description: Id eines Mahntyps (technischer Schlüssel)
        in: path
        name: dunningTypeId
        required: true
        schema:
          type: string
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/DunningLevelGet'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Mahnstufen eines Mahntyps auslesen.
      tags:
      - WeitereStammdaten
    post:
      description: |-
        Mahnstufe anlegen.
        Neue Mahnstufe anlegen.
      operationId: postDunningLevelFromDunningType
      parameters:
      - description: Id eines Mahntyps (technischer Schlüssel)
        in: path
        name: dunningTypeId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DunningLevelPostPut'
        description: Mahnstufe
        required: true
      responses:
        "201":
          description: Mahnstufe erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Mahnstufe anlegen.
      tags:
      - WeitereStammdaten
  /v1/dunning-types/{dunningTypeId}/dunning-levels/{dunningLevelId}:
    delete:
      description: "Mahnstufe löschen. \n"
      operationId: DeleteDunningLevel
      parameters:
      - description: Id eines Mahntyps (technischer Schlüssel)
        in: path
        name: dunningTypeId
        required: true
        schema:
          type: string
      - description: Id einer Mahnstufe (technischer Schlüssel)
        in: path
        name: dunningLevelId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Mahnstufe löschen. \n"
      tags:
      - WeitereStammdaten
    get:
      description: Eine Mahnstufe von einem Mahntypen auslesen.
      operationId: getDunningLevelFromDunningType
      parameters:
      - description: Id eines Mahntyps (technischer Schlüssel)
        in: path
        name: dunningTypeId
        required: true
        schema:
          type: string
      - description: Id einer Mahnstufe (technischer Schlüssel)
        in: path
        name: dunningLevelId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/DunningLevelGet'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Eine Mahnstufe von einem Mahntypen auslesen.
      tags:
      - WeitereStammdaten
    put:
      description: |-
        Mahnstufe ändern.
        Daten einer vorhandenen Mahnstufe ändern.
      operationId: PutDunningLevel
      parameters:
      - description: Id eines Mahntyps (technischer Schlüssel)
        in: path
        name: dunningTypeId
        required: true
        schema:
          type: string
      - description: Id einer Mahnstufe (technischer Schlüssel)
        in: path
        name: dunningLevelId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DunningLevelPostPut'
        description: Mahnstufe
        required: true
      responses:
        "205":
          description: "Mahnstufe erfolgreich gespeichert. Der Datensatz muss neu\
            \ gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Mahnstufe ändern.
      tags:
      - WeitereStammdaten
  /v1/tax-codes:
    get:
      description: "Steuerkennzeichen auslesen. \n\nLiefert eine Liste von Steuerkennzeichen.\n\
        \nZur Steigerung der Performance werden die Datensätze standardmäßig in 100er-Blö\
        cke paginiert. Der Request-Header liefert dann die Location für den nächsten\
        \ Block. Wenn die Performance es zulässt, können auch größere Blöcke abgerufen\
        \ werden. Dazu kann z.B. **top=1000** angegeben werden.\n"
      operationId: getTaxCodes
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/TaxCode'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Steuerkennzeichen auslesen.
      tags:
      - WeitereStammdaten
  /v1/tax-codes/{taxCodeId}:
    get:
      description: Ein Steuerkennzeichen auslesen.
      operationId: getTaxCode
      parameters:
      - description: Id eines Steuerkennzeichens (technischer Schlüssel)
        in: path
        name: taxCodeId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TaxCode'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Ein Steuerkennzeichen auslesen.
      tags:
      - WeitereStammdaten
  /v1/tax-codes/{taxCodeId}/tax-keys:
    get:
      description: "Steuerschlüssel eines Steuerkennzeichens auslesen.\n\nLiefert\
        \ eine Liste der Steuerschlüssel eines Steuerkennzeichens. \n\nZur Steigerung\
        \ der Performance werden die Datensätze standardmäßig in 100er-Blöcke paginiert.\
        \ Der Request-Header liefert dann die Location für den nächsten Block. Wenn\
        \ die Performance es zulässt, können auch größere Blöcke abgerufen werden.\
        \ Dazu kann z.B. **top=1000** angegeben werden.\n"
      operationId: getTaxKeysFromTaxCode
      parameters:
      - description: Id eines Steuerkennzeichens (technischer Schlüssel)
        in: path
        name: taxCodeId
        required: true
        schema:
          type: string
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/TaxKey'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Steuerschlüssel eines Steuerkennzeichens auslesen.
      tags:
      - WeitereStammdaten
  /v1/tax-codes/{taxCodeId}/tax-keys/{taxKeyId}:
    get:
      description: Einen Steuerschlüssel von einem Steuerkennzeichen auslesen.
      operationId: getTaxKeyFromTaxCode
      parameters:
      - description: Id eines Steuerkennzeichens (technischer Schlüssel)
        in: path
        name: taxCodeId
        required: true
        schema:
          type: string
      - description: Id eines Steuerschlüssels (technischer Schlüssel)
        in: path
        name: taxKeyId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TaxKey'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Einen Steuerschlüssel von einem Steuerkennzeichen auslesen.
      tags:
      - WeitereStammdaten
  /v1/tax-keys:
    get:
      description: "Steuerschlüssel auslesen. \n\nLiefert eine Liste von Steuerschlü\
        sseln.\n\nZur Steigerung der Performance werden die Datensätze standardmäß\
        ig in 100er-Blöcke paginiert. Der Request-Header liefert dann die Location\
        \ für den nächsten Block. Wenn die Performance es zulässt, können auch grö\
        ßere Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.\n"
      operationId: getTaxKeys
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/TaxKey'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Steuerschlüssel auslesen.
      tags:
      - WeitereStammdaten
  /v1/tax-keys/{taxKeyId}:
    get:
      description: Einen Steuerschlüssel auslesen.
      operationId: getTaxKey
      parameters:
      - description: Id eines Steuerschlüssels (technischer Schlüssel)
        in: path
        name: taxKeyId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TaxKey'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Einen Steuerschlüssel auslesen.
      tags:
      - WeitereStammdaten
  /v1/tax-keys/date/{date}:
    get:
      description: "Die am angegebenen Datum gültigen Steuerschlüssel werden zurü\
        ckgegeben\nFormat: JJJJ-MM-TT  \nBeispiel: ...date=2021-01-20...\n"
      operationId: getTaxKeysFromDate
      parameters:
      - description: Die am angegebenen Datum gültigen Steuerschlüssel werden zurückgegeben
        in: path
        name: date
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/TaxKey'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: An Datum gültige Steuerschlüssel auslesen.
      tags:
      - WeitereStammdaten
  /v1/text-blocks:
    get:
      description: |
        Textbausteinliste auslesen.

        Zur Steigerung der Performance werden die Datensätze standardmäßig in
        100er-Blöcke paginiert. Der Request-Header liefert dann die Location für
        den nächsten Block. Wenn die Performance es zulässt, können auch größere
        Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.
      operationId: getTextBlocks
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/TextBlock'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Textbausteine auslesen.
      tags:
      - WeitereStammdaten
    post:
      description: |-
        Textbaustein anlegen.
        Neuen Textbaustein anlegen.
      operationId: postTextBlock
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TextBlock'
        description: Textbaustein
        required: true
      responses:
        "201":
          description: Textbaustein erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Textbaustein anlegen.
      tags:
      - WeitereStammdaten
  /v1/text-blocks/{textBlockId}:
    delete:
      description: Textbaustein löschen.
      operationId: deleteTextBlock
      parameters:
      - description: Id eines Textbausteins (technischer Schlüssel)
        in: path
        name: textBlockId
        required: true
        schema:
          example: "235000000000006"
          maxLength: 15
          minLength: 15
          nullable: false
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Textbaustein löschen.
      tags:
      - WeitereStammdaten
    get:
      description: Einen Textbaustein auslesen.
      operationId: getTextBlock
      parameters:
      - description: Id eines Textbausteins (technischer Schlüssel)
        in: path
        name: textBlockId
        required: true
        schema:
          example: "235000000000006"
          maxLength: 15
          minLength: 15
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TextBlockAllValues'
          description: Erfolgreicher Abruf der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Einen Textbaustein auslesen.
      tags:
      - WeitereStammdaten
    put:
      description: |-
        Textbaustein ändern.
        Daten eines vorhandenen Textbausteins ändern.
      operationId: PutTextBlock
      parameters:
      - description: Id eines Textbausteins (technischer Schlüssel)
        in: path
        name: textBlockId
        required: true
        schema:
          example: "235000000000006"
          maxLength: 15
          minLength: 15
          nullable: false
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TextBlock'
        description: Textbaustein
        required: true
      responses:
        "205":
          description: "Textbaustein erfolgreich gespeichert. Der Datensatz muss neu\
            \ gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Textbaustein ändern.
      tags:
      - WeitereStammdaten
  /v1/text-blocks/placeholder:
    get:
      description: |
        Platzhalter für Textbaustein auslesen.

        Liefert eine Liste von Platzhaltern.
      operationId: getTextBlocksPlaceholder
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                description: |
                  Enthält eine Liste von Platzhaltern
                items:
                  type: string
                title: Placeholder
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Platzhalter für Textbaustein auslesen.
      tags:
      - WeitereStammdaten
  /v1/afa-methods:
    get:
      description: |
        AfA-Methode auslesen.

        Liefert eine Liste von AfA-Methoden.

        Zur Steigerung der Performance werden die Datensätze standardmäßig in 100er-Blöcke paginiert. Der Request-Header liefert dann die Location für den nächsten Block. Wenn die Performance es zulässt, können auch größere Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.
      operationId: getAfaMethods
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/AfaMethod'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: AfA-Methode auslesen.
      tags:
      - WeitereStammdaten
    post:
      description: |-
        AfA-Methode anlegen.
        Neue AfA-Methode anlegen.
      operationId: postAfaMethod
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AfaMethod'
        description: AfA-Methode
        required: true
      responses:
        "201":
          description: AfA-Methode erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: AfA-Methode anlegen.
      tags:
      - WeitereStammdaten
  /v1/afa-methods/{afaMethodId}:
    delete:
      description: "AfA-Methode löschen. \n"
      operationId: deleteAfaMethod
      parameters:
      - description: Id einer AfA-Methode (technischer Schlüssel)
        in: path
        name: afaMethodId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "AfA-Methode löschen. \n"
      tags:
      - WeitereStammdaten
    get:
      description: Eine AfA-Methode auslesen.
      operationId: getAfaMethod
      parameters:
      - description: Id einer AfA-Methode (technischer Schlüssel)
        in: path
        name: afaMethodId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/AfaMethod'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Eine AfA-Methode auslesen.
      tags:
      - WeitereStammdaten
    put:
      description: |-
        AfA-Methode ändern.
        Daten einer vorhandenen AfA-Methode ändern.
      operationId: PutAfaMethod
      parameters:
      - description: Id einer AfA-Methode (technischer Schlüssel)
        in: path
        name: afaMethodId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AfaMethod'
        description: AfA-Methode
        required: true
      responses:
        "205":
          description: "AfA-Methode erfolgreich gespeichert. Der Datensatz muss neu\
            \ gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: AfA-Methode ändern.
      tags:
      - WeitereStammdaten
  /v1/afa-methods/{afaMethodId}/staggered-rates:
    get:
      description: Die Staffelsätze einer AfA-Methode auslesen.
      operationId: getAfaMethodStaggeredRates
      parameters:
      - description: Id einer AfA-Methode (technischer Schlüssel)
        in: path
        name: afaMethodId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/StaggeredRate'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Die Staffelsätze einer AfA-Methode auslesen.
      tags:
      - WeitereStammdaten
    post:
      description: |-
        Staffelsatz anlegen.
        Neuen Staffelsatz anlegen.
      operationId: postAfaMethodStaggeredRate
      parameters:
      - description: Id einer AfA-Methode (technischer Schlüssel)
        in: path
        name: afaMethodId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/StaggeredRate'
        description: Staffelsatz
        required: true
      responses:
        "201":
          description: Staffelsatz erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Staffelsatz anlegen.
      tags:
      - WeitereStammdaten
  /v1/afa-methods/{afaMethodId}/staggered-rates/{staggeredRateId}:
    delete:
      description: "Staffelsatz löschen. \n"
      operationId: DeleteStaggeredRate
      parameters:
      - description: Id einer AfA-Methode (technischer Schlüssel)
        in: path
        name: afaMethodId
        required: true
        schema:
          type: string
      - description: Id eines Staffelsatzes (technischer Schlüssel)
        in: path
        name: staggeredRateId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Staffelsatz löschen. \n"
      tags:
      - WeitereStammdaten
    get:
      description: Einen Staffelsatz auslesen.
      operationId: getStaggeredRate
      parameters:
      - description: Id einer AfA-Methode (technischer Schlüssel)
        in: path
        name: afaMethodId
        required: true
        schema:
          type: string
      - description: Id eines Staffelsatzes (technischer Schlüssel)
        in: path
        name: staggeredRateId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/StaggeredRate'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Einen Staffelsatz auslesen.
      tags:
      - WeitereStammdaten
    put:
      description: |-
        Staffelsatz ändern.
        Daten eines vorhandenen Staffelsatzes ändern.
      operationId: PutStaggeredRate
      parameters:
      - description: Id einer AfA-Methode (technischer Schlüssel)
        in: path
        name: afaMethodId
        required: true
        schema:
          type: string
      - description: Id eines Staffelsatzes (technischer Schlüssel)
        in: path
        name: staggeredRateId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/StaggeredRate'
        description: Staffelsatz
        required: true
      responses:
        "205":
          description: "Staffelsatz erfolgreich gespeichert. Der Datensatz muss neu\
            \ gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Staffelsatz ändern.
      tags:
      - WeitereStammdaten
  /v1/locations:
    get:
      description: |
        Standort auslesen.

        Liefert eine Liste von Standorten.

        Zur Steigerung der Performance werden die Datensätze standardmäßig in 100er-Blöcke paginiert. Der Request-Header liefert dann die Location für den nächsten Block. Wenn die Performance es zulässt, können auch größere Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.
      operationId: getLocations
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Location'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Standort auslesen.
      tags:
      - WeitereStammdaten
    post:
      description: |-
        Standort anlegen.
        Neuen Standort anlegen.
      operationId: postLocation
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/Location'
        description: Standort
        required: true
      responses:
        "201":
          description: Standort erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Standort anlegen.
      tags:
      - WeitereStammdaten
  /v1/locations/{locationId}:
    delete:
      description: "Standort löschen. \n"
      operationId: deleteLocation
      parameters:
      - description: Id eines Standorts (technischer Schlüssel)
        in: path
        name: locationId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Standort löschen. \n"
      tags:
      - WeitereStammdaten
    get:
      description: Einen Standort auslesen.
      operationId: getLocation
      parameters:
      - description: Id eines Standorts (technischer Schlüssel)
        in: path
        name: locationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Location'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Einen Standort auslesen.
      tags:
      - WeitereStammdaten
    put:
      description: |-
        Standort ändern.
        Daten eines vorhandenen Standorts ändern.
      operationId: PutLocation
      parameters:
      - description: Id eines Standorts (technischer Schlüssel)
        in: path
        name: locationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/Location'
        description: Standort
        required: true
      responses:
        "205":
          description: "Standort erfolgreich gespeichert. Der Datensatz muss neu gelesen\
            \ werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Standort ändern.
      tags:
      - WeitereStammdaten
  /v1/accounting-documents:
    post:
      description: |-
        Einen neuen Beleg anlegen. Der Beleg wird nicht sofort angelegt, sondern die Anfrage zu Beleganlage wird in eine Warteschlange gestellt.
        Der Status kann über /v1/accounting-documents/queue/{workOrderId} abgefragt werden.
      operationId: postAccountingDocuments
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AccountingDocument'
        description: Beleg
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrderId'
          description: |
            Anfrage wurde akzeptiert und in die Warteschlange gestellt. Der Status kann über den Endpunkt GET /v1/accounting-documents/queue/{workOrderId} abgerufen werden.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Beleg anlegen
      tags:
      - Belege
  /v1/accounting-document-groups/{accountingDocumentGroupId}/accounting-documents:
    post:
      description: |-
        Einen neuen Beleg in der Erfassungsgruppe mit der übergebenen Id anlegen. Der Beleg wird nicht sofort angelegt, sondern die Anfrage zu Beleganlage wird in eine Warteschlange gestellt.
        Der Status kann über /v1/accounting-documents/queue/{workOrderId} abgefragt werden.
      operationId: postAccountingDocumentInAccountingDocumentGroup
      parameters:
      - description: "Id der Erfassungsgruppe, in der der Beleg angelegt werden soll"
        in: path
        name: accountingDocumentGroupId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AccountingDocument'
        description: Beleg
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrderId'
          description: |
            Anfrage wurde akzeptiert und in die Warteschlange gestellt. Der Status kann über den Endpunkt /v1/accounting-documents/queue/{workOrderId} abgerufen werden.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Beleg in Erfassungsgruppe anlegen
      tags:
      - Belege
  /v1/accounting-documents/queue/{workOrderId}:
    get:
      description: |
        Gibt u.a. den Status des über die API übergebenen Belegs zurück.
        Mögliche Werte sind
          - Pending (Wartend)
          - Processing (In Arbeit)
          - Finished (Fertig)
          - Error (Fehlerhaft)
          - NotFound (Nicht gefunden)
      operationId: getAccountingDocumentWorkOrderStatus
      parameters:
      - description: Identifizierer eines an die API übergebenen Objekts zum Abfragen
          des Status
        in: path
        name: workOrderId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          description: "Belegstatus abgerufen, Beleg befindet sich in Warteschlange"
        "201":
          description: Beleg zum Einlesen in HS Finanzwesen/HS Finanzbuchhaltung bereit
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Status der Belegübergabe abrufen
      tags:
      - Belege
  /v1/accounting-document-groups:
    post:
      description: |-
        Eine neue Erfassungsgruppe anlegen. Die Erfassungsgruppe wird nicht sofort angelegt, sondern die Anfrage wird in eine Warteschlange gestellt.
        Der Status kann über /v1/accounting-document-groups/queue/{workOrderId} abgefragt werden.
      operationId: postAccountingDocumentGroups
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AccountingDocumentGroup'
        description: Erfassungsgruppe
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkOrderId'
          description: |
            Anfrage wurde akzeptiert und in die Warteschlange gestellt. Der Status kann über den Endpunkt /v1/accounting-document-groups/queue/{workOrderId} abgerufen werden.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten.
            Typischerweise liegt das an invaliden Daten.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Erfassungsgruppe anlegen
      tags:
      - Belege
  /v1/accounting-document-groups/queue/{workOrderId}:
    get:
      description: |
        Gibt u.a. den Status der über die API übergebenen Erfassungsgruppe zurück.
        Mögliche Werte sind
          - Pending (Wartend)
          - Processing (In Arbeit)
          - Finished (Fertig)
          - Error (Fehlerhaft)
          - NotFound (Nicht gefunden)
      operationId: getAccountingDocumentGroupWorkOrderStatus
      parameters:
      - description: Identifizierer eines an die API übergebenen Objekts zum Abfragen
          des Status
        in: path
        name: workOrderId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          description: "Status abgerufen, Erfassungsgruppe befindet sich in Warteschlange."
        "201":
          description: Erfassungsgruppe erfolgreich angelegt
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Status der Anlage der Erfassungsgruppe abrufen
      tags:
      - Belege
  /v1/accounting-document-folders/{folderUuid}:
    get:
      description: Gibt die Einstellungen des Belegordners der Erfassungsart "Zentrale
        Belegübernahme" mit der angegebenen UUID zurück.
      operationId: getAccountingDocumentFolder
      parameters:
      - description: Uuid eines Belegordners
        in: path
        name: folderUuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/AccountingDocumentFolder'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Die Einstellungen eines Belegordners auslesen.
      tags:
      - Belege
  /v1/users:
    get:
      description: "Benutzer auslesen. \n\nLiefert eine Liste von Benutzern. \n\n\
        Zur Steigerung der Performance werden die Datensätze standardmäßig in 100er-Blö\
        cke paginiert. Der Request-Header liefert dann die Location für den nächsten\
        \ Block. Wenn die Performance es zulässt, können auch größere Blöcke abgerufen\
        \ werden. Dazu kann z.B. **top=1000** angegeben werden.\n"
      operationId: getUsers
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      - description: |
          Parameter, der bei GET einer Liste zusätzlich die Gesamtanzahl der Datensätze mit rausgibt, unabhängig davon, wie top und skip angegeben sind. filter bleibt berücksichtigt!
          Der Wert steht im Response-Header im Feld "X-total-count" zur Verfügung, wenn der request mit with_total_count=true abgesetzt wird (keine Angabe entspricht false).
        in: query
        name: with_total_count
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Benutzer auslesen.
      tags:
      - Administration
    post:
      description: |-
        Benutzer anlegen.
        Neuen Benutzer anlegen.
      operationId: postUser
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UserWithPassword'
        description: Benutzer
        required: true
      responses:
        "201":
          description: Benutzer erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Benutzer anlegen.
      tags:
      - Administration
  /v1/users/{userId}:
    delete:
      description: "Einen Benutzer löschen. \n"
      operationId: deleteUser
      parameters:
      - description: Id eines Benutzers (technischer Schlüssel)
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Einen Benutzer löschen. \n"
      tags:
      - Administration
    get:
      description: Einen Benutzer auslesen.
      operationId: getUser
      parameters:
      - description: Id eines Benutzers (technischer Schlüssel)
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/User'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Einen Benutzer auslesen.
      tags:
      - Administration
    put:
      description: |-
        Einen Benutzer ändern.
        Daten eines vorhandenen Benutzers ändern.
      operationId: putUser
      parameters:
      - description: Id eines Benutzers (technischer Schlüssel)
        in: path
        name: userId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/User'
        description: Benutzer
        required: true
      responses:
        "205":
          description: "Benutzer erfolgreich gespeichert. Der Datensatz muss neu gelesen\
            \ werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Einen Benutzer ändern.
      tags:
      - Administration
  /v1/users/{userId}/change-password:
    post:
      description: |
        Ändert das Passwort eines Benutzers.
      operationId: changePassword
      parameters:
      - description: Id eines Benutzers (technischer Schlüssel)
        in: path
        name: userId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ChangeUserPassword'
        description: Benutzer
        required: true
      responses:
        "202":
          description: |
            Passwort erfolgreich geändert.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: |
        Ändert das Passwort eines Benutzers.
      tags:
      - Administration
  /v1/authorization-profiles:
    get:
      description: "Berechtigungsprofile auslesen. \n\nLiefert eine Liste von Berechtigungsprofilen.\
        \ \n\nZur Steigerung der Performance werden die Datensätze standardmäßig in\
        \ 100er-Blöcke paginiert. Der Request-Header liefert dann die Location fü\
        r den nächsten Block. Wenn die Performance es zulässt, können auch größere\
        \ Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.\n"
      operationId: getAuthorizationProfiles
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      - description: |
          Parameter, der bei GET einer Liste zusätzlich die Gesamtanzahl der Datensätze mit rausgibt, unabhängig davon, wie top und skip angegeben sind. filter bleibt berücksichtigt!
          Der Wert steht im Response-Header im Feld "X-total-count" zur Verfügung, wenn der request mit with_total_count=true abgesetzt wird (keine Angabe entspricht false).
        in: query
        name: with_total_count
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/AuthorizationProfile'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Berechtigungsprofile auslesen.
      tags:
      - Administration
  /v1/api-users:
    get:
      description: "API-Benutzer auslesen. \n\nLiefert eine Liste von API-Benutzern.\
        \ \n\nZur Steigerung der Performance werden die Datensätze standardmäßig in\
        \ 100er-Blöcke paginiert. Der Request-Header liefert dann die Location fü\
        r den nächsten Block. Wenn die Performance es zulässt, können auch größere\
        \ Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.\n"
      operationId: getApiUsers
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      - description: |
          Parameter, der bei GET einer Liste zusätzlich die Gesamtanzahl der Datensätze mit rausgibt, unabhängig davon, wie top und skip angegeben sind. filter bleibt berücksichtigt!
          Der Wert steht im Response-Header im Feld "X-total-count" zur Verfügung, wenn der request mit with_total_count=true abgesetzt wird (keine Angabe entspricht false).
        in: query
        name: with_total_count
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/ApiUser'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: API-Benutzer auslesen.
      tags:
      - Administration
    post:
      description: |-
        API-Benutzer anlegen.
        Neuen API-Benutzer anlegen.
      operationId: postApiUser
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApiUserWithAccessCode'
        description: API-Benutzer
        required: true
      responses:
        "201":
          description: API-Benutzer erfolgreich angelegt.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: API-Benutzer anlegen.
      tags:
      - Administration
  /v1/api-users/{apiUserId}:
    delete:
      description: "Einen API-Benutzer löschen. \n"
      operationId: deleteApiUser
      parameters:
      - description: Id eines API-Benutzers (technischer Schlüssel)
        in: path
        name: apiUserId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            Erfolgreiches Löschen der Ressource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: "Einen API-Benutzer löschen. \n"
      tags:
      - Administration
    get:
      description: Einen API-Benutzer auslesen.
      operationId: getApiUser
      parameters:
      - description: Id eines API-Benutzers (technischer Schlüssel)
        in: path
        name: apiUserId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApiUser'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Einen API-Benutzer auslesen.
      tags:
      - Administration
    put:
      description: |-
        Einen API-Benutzer ändern.
        Daten eines vorhandenen API-Benutzers ändern.
      operationId: putApiUser
      parameters:
      - description: Id eines API-Benutzers (technischer Schlüssel)
        in: path
        name: apiUserId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApiUser'
        description: API-Benutzer
        required: true
      responses:
        "205":
          description: "API-Benutzer erfolgreich gespeichert. Der Datensatz muss neu\
            \ gelesen werden, weil sich der Timestamp geändert hat."
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
        "409":
          description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Einen API-Benutzer ändern.
      tags:
      - Administration
  /v1/api-authorization-profiles:
    get:
      description: "Api-Berechtigungsprofile auslesen. \n\nLiefert eine Liste von\
        \ Berechtigungsprofilen. \n\nZur Steigerung der Performance werden die Datensä\
        tze standardmäßig in 100er-Blöcke paginiert. Der Request-Header liefert dann\
        \ die Location für den nächsten Block. Wenn die Performance es zulässt, kö\
        nnen auch größere Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben\
        \ werden.\n"
      operationId: getApiAuthorizationProfiles
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      - description: |
          Parameter, der bei GET einer Liste zusätzlich die Gesamtanzahl der Datensätze mit rausgibt, unabhängig davon, wie top und skip angegeben sind. filter bleibt berücksichtigt!
          Der Wert steht im Response-Header im Feld "X-total-count" zur Verfügung, wenn der request mit with_total_count=true abgesetzt wird (keine Angabe entspricht false).
        in: query
        name: with_total_count
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/ApiAuthorizationProfile'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Api-Berechtigungsprofile auslesen.
      tags:
      - Administration
  /v1/api-user-types:
    get:
      description: "Mögliche Typen für Api-Benutzer auslesen\nLiefert eine Liste von\
        \ ApiUser-Typen. \nZur Steigerung der Performance werden die Datensätze standardmä\
        ßig in 100er-Blöcke paginiert. Der Request-Header liefert dann die Location\
        \ für den nächsten Block. Wenn die Performance es zulässt, können auch grö\
        ßere Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.\n"
      operationId: getApiUserTypes
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/ApiUserType'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Typen für Api-Benutzer auslesen
      tags:
      - Administration
  /v1/api-user-roles:
    get:
      description: "Mögliche Rollen für Api-Benutzer auslesen\nLiefert eine Liste\
        \ von ApiUser-Rollen. \nZur Steigerung der Performance werden die Datensä\
        tze standardmäßig in 100er-Blöcke paginiert. Der Request-Header liefert dann\
        \ die Location für den nächsten Block. Wenn die Performance es zulässt, kö\
        nnen auch größere Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben\
        \ werden.\n"
      operationId: getApiUserRoles
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/ApiUserRole'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Rollen für Api-Benutzer auslesen
      tags:
      - Administration
  /v1/user-defined-field-definitions:
    get:
      description: |
        Definition von benutzerdefinierten Feldern auslesen.
        Liefert eine Liste von Definition von benutzerdefinierten Feldern.
        Zur Steigerung der Performance werden die Datensätze standardmäßig in 100er-Blöcke paginiert. Der Request-Header liefert dann die Location für den nächsten Block. Wenn die Performance es zulässt, können auch größere Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.
      operationId: getUserDefinedFieldDefinitions
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      - description: |
          Parameter, der bei GET einer Liste zusätzlich die Gesamtanzahl der Datensätze mit rausgibt, unabhängig davon, wie top und skip angegeben sind. filter bleibt berücksichtigt!
          Der Wert steht im Response-Header im Feld "X-total-count" zur Verfügung, wenn der request mit with_total_count=true abgesetzt wird (keine Angabe entspricht false).
        in: query
        name: with_total_count
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/UserDefinedFieldDefinition'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Definition von benutzerdefinierten Feldern auslesen
      tags:
      - Configuration
  /v1/user-defined-field-definitions/{userDefinedFieldDefinitionId}:
    get:
      description: Die Definition eines benutzerdefiniertes Feldes auslesen
      operationId: getUserDefinedFieldDefinition
      parameters:
      - description: Id der Definition für ein benutzerdefiniertes Feld (technischer
          Schlüssel)
        in: path
        name: userDefinedFieldDefinitionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldDefinition'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Definition eines benutzerdefiniertes Feldes auslesen
      tags:
      - Configuration
  /v1/user-defined-field-definitions/{userDefinedFieldDefinitionId}/attributes:
    get:
      description: |
        Merkmale von benutzerdefinierten Feldern auslesen.
        Liefert eine Liste von Merkmalen von benutzerdefinierten Feldern.
        Zur Steigerung der Performance werden die Datensätze standardmäßig in 100er-Blöcke paginiert. Der Request-Header liefert dann die Location für den nächsten Block. Wenn die Performance es zulässt, können auch größere Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.
      operationId: getUserDefinedFieldAttributesForDefinition
      parameters:
      - description: Id der Definition für ein benutzerdefiniertes Feld (technischer
          Schlüssel)
        in: path
        name: userDefinedFieldDefinitionId
        required: true
        schema:
          type: string
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      - description: |
          Parameter, der bei GET einer Liste zusätzlich die Gesamtanzahl der Datensätze mit rausgibt, unabhängig davon, wie top und skip angegeben sind. filter bleibt berücksichtigt!
          Der Wert steht im Response-Header im Feld "X-total-count" zur Verfügung, wenn der request mit with_total_count=true abgesetzt wird (keine Angabe entspricht false).
        in: query
        name: with_total_count
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/UserDefinedFieldAttribute'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Merkmale von benutzerdefinierten Feldern auslesen
      tags:
      - Configuration
  /v1/user-defined-field-definitions/{userDefinedFieldDefinitionId}/attributes/{userDefinedFieldAttributeId}:
    get:
      description: Ein Merkmal für ein benutzerdefiniertes Feldes auslesen
      operationId: getUserDefinedFieldAttributeForDefinition
      parameters:
      - description: Id eines Merkmals für ein benutzerdefiniertes Feld (technischer
          Schlüssel)
        in: path
        name: userDefinedFieldAttributeId
        required: true
        schema:
          type: string
      - description: Id der Definition für ein benutzerdefiniertes Feld (technischer
          Schlüssel)
        in: path
        name: userDefinedFieldDefinitionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldAttribute'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Merkmal eines benutzerdefiniertes Feldes auslesen
      tags:
      - Configuration
  /v1/user-defined-field-attributes:
    get:
      description: |
        Merkmale von benutzerdefinierten Feldern auslesen.
        Liefert eine Liste von Merkmalen von benutzerdefinierten Feldern.
        Zur Steigerung der Performance werden die Datensätze standardmäßig in 100er-Blöcke paginiert. Der Request-Header liefert dann die Location für den nächsten Block. Wenn die Performance es zulässt, können auch größere Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.
      operationId: getUserDefinedFieldAttributes
      parameters:
      - description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
          \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
          \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich),\
          \ ge (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden.\
          \ \nBeispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
        in: query
        name: filter
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
          Beispiel: ...select=SampleProperty1, SampleProperty2...
        in: query
        name: select
        required: false
        schema:
          nullable: true
          type: string
      - description: |
          Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
        examples:
          onePropertyAscSort:
            summary: Nach einer Propery aufsteigend sortieren
            value:
            - SampleProperty1
          onePropertyDescSort:
            summary: Nach einer Propery absteigend sortieren
            value:
            - SampleProperty1:desc
          multiplePropertiesAscSort:
            summary: Nach mehreren Properies aufsteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2
          multiplePropertiesMixedSort:
            summary: Nach mehreren Properies auf- und absteigend sortieren
            value:
            - SampleProperty1
            - SampleProperty2:desc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      - description: |
          Parameter, der bei GET einer Liste zusätzlich die Gesamtanzahl der Datensätze mit rausgibt, unabhängig davon, wie top und skip angegeben sind. filter bleibt berücksichtigt!
          Der Wert steht im Response-Header im Feld "X-total-count" zur Verfügung, wenn der request mit with_total_count=true abgesetzt wird (keine Angabe entspricht false).
        in: query
        name: with_total_count
        required: false
        schema:
          default: false
          nullable: true
          type: boolean
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/UserDefinedFieldAttribute'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Merkmale von benutzerdefinierten Feldern auslesen
      tags:
      - Configuration
  /v1/user-defined-field-attributes/{userDefinedFieldAttributeId}:
    get:
      description: Ein Merkmal für ein benutzerdefiniertes Feldes auslesen
      operationId: getUserDefinedFieldAttribute
      parameters:
      - description: Id eines Merkmals für ein benutzerdefiniertes Feld (technischer
          Schlüssel)
        in: path
        name: userDefinedFieldAttributeId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldAttribute'
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Merkmal eines benutzerdefiniertes Feldes auslesen
      tags:
      - Configuration
  /v1/archive-entries:
    get:
      description: |
        Einträge aus dem Ablagesystem auslesen.
        Liefert eine Liste Einträgen aus dem Ablagesystem.
        Zur Steigerung der Performance werden die Datensätze standardmäßig in 100er-Blöcke paginiert. Der Request-Header liefert dann die Location für den nächsten Block. Wenn die Performance es zulässt, können auch größere Blöcke abgerufen werden. Dazu kann z.B. **top=1000** angegeben werden.
      operationId: getArchiveEntries
      parameters:
      - description: |
          Id des Datensatzes für den die Abfrage im Ablagesystem durchgeführt werden soll. Sind OwnerKey und/oder FolderType nicht angegeben, wird grundsätzlich alles rekursiv durchsucht.
          Für manche Rollen muss grundsätzlich der OwnerKeyParam angegeben werden.
        example: "190200000000001"
        in: query
        name: ownerKey
        required: false
        schema:
          type: string
      - description: |
          Key des Startordners ab dem für den OwnerKey im Ablagesystem gesucht werden soll. Sind OwnerKey und/oder FolderType nicht angegeben, wird grundsätzlich alles rekursiv durchsucht.
          Es kann entweder der ResourceKey direkt angegeben werden oder FolderType und OwnerKey. Für manche Rollen muss der OwnerKey grundsätzlich angegeben werden.
        example: PER
        in: query
        name: folderType
        required: false
        schema:
          type: string
      - description: |
          Key der Resource im Ablagesystem (technischer Schlüssel)
          Bei Abfrage der Liste kann entweder der ResourceKey direkt angegeben werden oder FolderType und OwnerKey. Für manche Rollen muss der OwnerKey grundsätzlich angegeben werden.
        example: HS_DemoLA$NOTSET$120$5$NOTSET
        in: path
        name: resourceKey
        required: true
        schema:
          type: string
      - description: Wert für Volltextsuche
        in: query
        name: fullTextSearchValue
        required: false
        schema:
          type: string
      - description: Wert für where (NQL)
        in: query
        name: where
        required: false
        schema:
          type: string
      - description: Wert für order by (NQL)
        in: query
        name: orderBy
        required: false
        schema:
          type: string
      - description: "true, wenn Unterordner mit durchsucht werden sollen (rekursive\
          \ Suche)"
        in: query
        name: isSearchInSubFolder
        required: false
        schema:
          type: boolean
      - description: |
          Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
          Beispiel: ...top=10...
        in: query
        name: top
        required: false
        schema:
          nullable: true
          type: integer
      - description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
          \ sollen. \nBeispiel: ...skip=10...\n"
        in: query
        name: skip
        required: false
        schema:
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/ArchiveEntry'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Einträge aus dem Ablagesystem auslesen
      tags:
      - Archive
  /v1/archive-pdf-documents/{resourceKey}:
    get:
      description: Ein Dokument aus dem Ablagesystem abrufen
      operationId: getArchiveDocument
      parameters:
      - description: |
          Key der Resource im Ablagesystem (technischer Schlüssel)
          Bei Abfrage der Liste kann entweder der ResourceKey direkt angegeben werden oder FolderType und OwnerKey. Für manche Rollen muss der OwnerKey grundsätzlich angegeben werden.
        example: HS_DemoLA$NOTSET$120$5$NOTSET
        in: path
        name: resourceKey
        required: true
        schema:
          type: string
      - description: |
          Id des Datensatzes für den die Abfrage im Ablagesystem durchgeführt werden soll. Sind OwnerKey und/oder FolderType nicht angegeben, wird grundsätzlich alles rekursiv durchsucht.
          Für manche Rollen muss grundsätzlich der OwnerKeyParam angegeben werden.
        example: "190200000000001"
        in: query
        name: ownerKey
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Pdf-Dokument aus Ablagesystem
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Dokument aus dem Ablagesystem abrufen
      tags:
      - Archive
  /v1/archive-folder-infos:
    get:
      description: |
        Einträge aus dem Ablagesystem auslesen.
        Liefert eine Liste von Informationen zu den Stammordnern aus dem Ablagesystem.
      operationId: getArchiveFolderInfos
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/ArchiveFolderInfo'
                type: array
          description: Erfolgreicher Abruf der Ressource.
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Informationen zu den Stammordnern des Ablagesystem auslesen
      tags:
      - Archive
  /v1/import:
    post:
      description: Import von Daten.
      operationId: postImport
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ImportData'
        description: API-Benutzer
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ImportResponse'
          description: Daten erfolgreich verarbeitet. Detaillierte Informationen siehe
            ImportPostResponse.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche\
            \ Ursache kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere\
            \ Informationen sind in der Response-Nachricht als HttpError enthalten."
        "401":
          description: Die Authentifizierungs-Information fehlt oder ist ungültig.
            Weitere Informationen sind in der Response-Nachricht als HttpError enthalten.
          headers:
            WWW_Authenticate:
              schema:
                type: string
        "403":
          description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
        "404":
          description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht\
            \ verfügbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft\
            \ ist."
      security:
      - BasicAuth: []
        ApiKeyAuth: []
      - OAuth2: []
        ApiKeyAuth: []
      summary: Datenimport
      tags:
      - Import
components:
  parameters:
    FilterParam:
      description: "Filter für die Ergebnismenge\nFormat:   \nBeispiel: ...filter=AccountNumber\
        \ eq 10001...\nFeld: siehe '#/definitions/'\nVergleichsoperator: eq (gleich),\
        \ ne (ungleich), lt (kleiner als), gt (größer als), le (kleiner gleich), ge\
        \ (größer gleich)\nMehrere Filter können durch \"and\" getrennt werden. \n\
        Beispiel: ...filter=AccountNumber ge 1 and StockNumber le 9999...\n"
      in: query
      name: filter
      required: false
      schema:
        nullable: true
        type: string
    SelectParam:
      description: |
        Angabe von relevanten Attributen, auf die die Ergebnismenge beschränkt werden soll.
        Beispiel: ...select=SampleProperty1, SampleProperty2...
      in: query
      name: select
      required: false
      schema:
        nullable: true
        type: string
    SortParam:
      description: |
        Art der Sortierung. Ist keine Sortierreihenfolge (asc oder desc) angegeben, wird aufsteigend (asc) sortiert.
      examples:
        onePropertyAscSort:
          summary: Nach einer Propery aufsteigend sortieren
          value:
          - SampleProperty1
        onePropertyDescSort:
          summary: Nach einer Propery absteigend sortieren
          value:
          - SampleProperty1:desc
        multiplePropertiesAscSort:
          summary: Nach mehreren Properies aufsteigend sortieren
          value:
          - SampleProperty1
          - SampleProperty2
        multiplePropertiesMixedSort:
          summary: Nach mehreren Properies auf- und absteigend sortieren
          value:
          - SampleProperty1
          - SampleProperty2:desc
      explode: true
      in: query
      name: sort
      required: false
      schema:
        items:
          type: string
        nullable: true
        type: array
      style: form
    TopParam:
      description: |
        Gibt die Anzahl der Elemente an, die maximal in der Ergebnismenge enthalten sein sollen.
        Beispiel: ...top=10...
      in: query
      name: top
      required: false
      schema:
        nullable: true
        type: integer
    SkipParam:
      description: "Gibt an, wie viele Elemente der Gesamtmenge übersprungen werden\
        \ sollen. \nBeispiel: ...skip=10...\n"
      in: query
      name: skip
      required: false
      schema:
        nullable: true
        type: integer
    AccountIdParam:
      description: Id eines Kontos (technischer Schlüssel)
      in: path
      name: accountId
      required: true
      schema:
        type: string
    ExpandParam:
      description: "Parameter, der das Lesen einer Ressource mit untergeordneten Ressourcen\
        \ ermöglicht. \nBei der Angabe von **all** werden alle untergeordneten Ressourcen\
        \ mitgeladen. (Keine Angabe entspricht **none**)\n"
      in: query
      name: expand
      required: false
      schema:
        default: none
        nullable: true
        type: string
    CreditorAddressIdParam:
      description: Id einer Lieferantenadresse (technischer Schlüssel)
      in: path
      name: addressId
      required: true
      schema:
        type: string
    SepaMandateIdParam:
      description: Id eines SEPA-Mandats (technischer Schlüssel)
      in: path
      name: sepaMandateId
      required: true
      schema:
        type: string
    addressIdParam:
      description: Id einer Adresse (technischer Schlüssel)
      in: path
      name: addressId
      required: true
      schema:
        type: string
    OpenItemIdParam:
      description: Id eines Offenen Postens (technischer Schlüssel)
      in: path
      name: openItemId
      required: true
      schema:
        type: string
    TermOfPaymentIdParam:
      description: Id einer Zahlungsbedingung (technischer Schlüssel)
      in: path
      name: termOfPaymentId
      required: true
      schema:
        type: string
    CostCenterIdParam:
      description: Id einer Kostenstelle (technischer Schlüssel)
      in: path
      name: costCenterId
      required: true
      schema:
        type: string
    CostUnitIdParam:
      description: Id eines Kostenträgers (technischer Schlüssel)
      in: path
      name: costUnitId
      required: true
      schema:
        type: string
    DunningTypeIdParam:
      description: Id eines Mahntyps (technischer Schlüssel)
      in: path
      name: dunningTypeId
      required: true
      schema:
        type: string
    DunningLevelIdParam:
      description: Id einer Mahnstufe (technischer Schlüssel)
      in: path
      name: dunningLevelId
      required: true
      schema:
        type: string
    TaxCodeIdParam:
      description: Id eines Steuerkennzeichens (technischer Schlüssel)
      in: path
      name: taxCodeId
      required: true
      schema:
        type: string
    TaxKeyIdParam:
      description: Id eines Steuerschlüssels (technischer Schlüssel)
      in: path
      name: taxKeyId
      required: true
      schema:
        type: string
    DateParam:
      description: Die am angegebenen Datum gültigen Steuerschlüssel werden zurückgegeben
      in: path
      name: date
      required: true
      schema:
        type: string
    TextBlockIdParam:
      description: Id eines Textbausteins (technischer Schlüssel)
      in: path
      name: textBlockId
      required: true
      schema:
        example: "235000000000006"
        maxLength: 15
        minLength: 15
        nullable: false
        type: string
    AfaMethodIdParam:
      description: Id einer AfA-Methode (technischer Schlüssel)
      in: path
      name: afaMethodId
      required: true
      schema:
        type: string
    StaggeredRateIdParam:
      description: Id eines Staffelsatzes (technischer Schlüssel)
      in: path
      name: staggeredRateId
      required: true
      schema:
        type: string
    LocationIdParam:
      description: Id eines Standorts (technischer Schlüssel)
      in: path
      name: locationId
      required: true
      schema:
        type: string
    AccountingDocumentGroupIdParam:
      description: "Id der Erfassungsgruppe, in der der Beleg angelegt werden soll"
      in: path
      name: accountingDocumentGroupId
      required: true
      schema:
        type: string
    WorkOrderIdParam:
      description: Identifizierer eines an die API übergebenen Objekts zum Abfragen
        des Status
      in: path
      name: workOrderId
      required: true
      schema:
        format: uuid
        type: string
    FolderUuidParam:
      description: Uuid eines Belegordners
      in: path
      name: folderUuid
      required: true
      schema:
        type: string
    WithTotalCountParam:
      description: |
        Parameter, der bei GET einer Liste zusätzlich die Gesamtanzahl der Datensätze mit rausgibt, unabhängig davon, wie top und skip angegeben sind. filter bleibt berücksichtigt!
        Der Wert steht im Response-Header im Feld "X-total-count" zur Verfügung, wenn der request mit with_total_count=true abgesetzt wird (keine Angabe entspricht false).
      in: query
      name: with_total_count
      required: false
      schema:
        default: false
        nullable: true
        type: boolean
    UserIdParam:
      description: Id eines Benutzers (technischer Schlüssel)
      in: path
      name: userId
      required: true
      schema:
        type: string
    ApiUserIdParam:
      description: Id eines API-Benutzers (technischer Schlüssel)
      in: path
      name: apiUserId
      required: true
      schema:
        type: string
    UserDefinedFieldDefinitionId:
      description: Id der Definition für ein benutzerdefiniertes Feld (technischer
        Schlüssel)
      in: path
      name: userDefinedFieldDefinitionId
      required: true
      schema:
        type: string
    UserDefinedFieldAttributeId:
      description: Id eines Merkmals für ein benutzerdefiniertes Feld (technischer
        Schlüssel)
      in: path
      name: userDefinedFieldAttributeId
      required: true
      schema:
        type: string
    OwnerKeyParam:
      description: |
        Id des Datensatzes für den die Abfrage im Ablagesystem durchgeführt werden soll. Sind OwnerKey und/oder FolderType nicht angegeben, wird grundsätzlich alles rekursiv durchsucht.
        Für manche Rollen muss grundsätzlich der OwnerKeyParam angegeben werden.
      example: "190200000000001"
      in: query
      name: ownerKey
      required: false
      schema:
        type: string
    FolderTypeParam:
      description: |
        Key des Startordners ab dem für den OwnerKey im Ablagesystem gesucht werden soll. Sind OwnerKey und/oder FolderType nicht angegeben, wird grundsätzlich alles rekursiv durchsucht.
        Es kann entweder der ResourceKey direkt angegeben werden oder FolderType und OwnerKey. Für manche Rollen muss der OwnerKey grundsätzlich angegeben werden.
      example: PER
      in: query
      name: folderType
      required: false
      schema:
        type: string
    ResourceKeyParam:
      description: |
        Key der Resource im Ablagesystem (technischer Schlüssel)
        Bei Abfrage der Liste kann entweder der ResourceKey direkt angegeben werden oder FolderType und OwnerKey. Für manche Rollen muss der OwnerKey grundsätzlich angegeben werden.
      example: HS_DemoLA$NOTSET$120$5$NOTSET
      in: path
      name: resourceKey
      required: true
      schema:
        type: string
    FullTextSearchValueParam:
      description: Wert für Volltextsuche
      in: query
      name: fullTextSearchValue
      required: false
      schema:
        type: string
    WhereParam:
      description: Wert für where (NQL)
      in: query
      name: where
      required: false
      schema:
        type: string
    OrderByParam:
      description: Wert für order by (NQL)
      in: query
      name: orderBy
      required: false
      schema:
        type: string
    IsSearchInSubFolderParam:
      description: "true, wenn Unterordner mit durchsucht werden sollen (rekursive\
        \ Suche)"
      in: query
      name: isSearchInSubFolder
      required: false
      schema:
        type: boolean
  responses:
    BadRequest:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
      description: "Es liegt ein fehlerhafter Clientaufruf vor. Eine mögliche Ursache\
        \ kann sein, dass ein fehlerhafter Wert übergeben wurde. Weitere Informationen\
        \ sind in der Response-Nachricht als HttpError enthalten."
    Forbidden:
      description: Es fehlt die Berechtigung zum Zugriff auf die Ressource.
    Unauthorized:
      description: Die Authentifizierungs-Information fehlt oder ist ungültig. Weitere
        Informationen sind in der Response-Nachricht als HttpError enthalten.
      headers:
        WWW_Authenticate:
          schema:
            type: string
    NotFound:
      description: "Die angeforderte Ressource ist dauerhaft oder temporär nicht verfü\
        gbar. Eine mögliche Ursache kann sein, dass die URI fehlerhaft ist."
    UnprocessableContent:
      content:
        application/json;charset=utf-8:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
      description: Die übergebenen Daten lassen sich nicht korrekt verarbeiten. Typischerweise
        liegt das an invaliden Daten.
    Conflict:
      description: Die Ressource wurde zwischenzeitlich durch Dritte verändert.
  schemas:
    TokenResponse:
      description: Enthält das Token zur Authentifizierung sowie weitere Informationen
        zur Gültigkeit des Tokens.
      example:
        access_token: access_token
        refresh_token: refresh_token
        roles: roles
        ".expires": 2000-01-23T04:56:07.000+00:00
        token_type: bearer
        userName: userName
        expires_in: 14399
        ".issued": 2000-01-23T04:56:07.000+00:00
      properties:
        access_token:
          description: "Token, das in einem Request zur Authentifizierung mitgegeben\
            \ werden muss."
          type: string
        token_type:
          description: Typ des Tokens (hat immer den Wert "bearer").
          enum:
          - bearer
          type: string
        expires_in:
          description: Anzahl Sekunden nach der das Token ungültig wird.
          example: 14399
          type: integer
        refresh_token:
          description: "Token, mit dem vor Ablauf der Gültigkeit ein neues access_token\
            \ angefordert werden kann."
          format: guid
          type: string
        userName:
          description: "Name des Benutzers, für den das Token angefordert wurde."
          type: string
        roles:
          description: "Rollen des Benutzers, für den das Token angefordert wurde\
            \ (Komma separierte Liste als String)."
          type: string
        ".issued":
          description: Uhrzeit der Token-Erzeugung.
          format: date-time
          type: string
        ".expires":
          description: Uhrzeit des Gültigkeitsendes des Tokens.
          format: date-time
          type: string
      required:
      - .expires
      - .issued
      - access_token
      - expires_in
      - refresh_token
      - roles
      - token_type
      - userName
      title: TokenResponse
      type: object
    ErrorMessage:
      example:
        Message: Message
        MessageDetail: MessageDetail
        Identity: Identity
        HsErrorId: HsErrorId
      properties:
        HsErrorId:
          description: contains a HS-specific error code - optional
          type: string
        Message:
          description: information about the error - optional
          type: string
        MessageDetail:
          description: information about the error - optional
          type: string
        Identity:
          description: identity - optional
          type: string
      type: object
    AppInfoResponse:
      description: Enthält Informationen zum laufenden Webservice.
      example:
        Company: Beispieldaten
        ApplicationVersion: 2.90 02/00
        Auth: BasicAuth
        Application: HS Finanzwesen / HS Personalwesen
      properties:
        Application:
          description: Bezeichnung der Anwendung
          example: HS Finanzwesen / HS Personalwesen
          nullable: true
          type: string
        ApplicationVersion:
          description: Version der Anwendung
          example: 2.90 02/00
          nullable: true
          type: string
        Company:
          description: Laufende Datenbank (Firma)
          example: Beispieldaten
          nullable: true
          type: string
        Auth:
          description: Authentifizierungsverfahren
          example: BasicAuth
          nullable: true
          type: string
      required:
      - Application
      - ApplicationVersion
      - Auth
      - Company
      title: AppInfoResponse
      type: object
    Account:
      description: Enthält die Daten eines Kontos
      example:
        LastModified: 2000-01-23T04:56:07.000+00:00
        LastModifiedBy: fb
        WithOpenItems: true
        Description: Verkauf im Hause
        Note: Konto nicht mehr bebuchen
        CreditLimit: 0.0
        ShowNote: false
        Id: "100800000000001"
        AccountType: Debtor
        BalanceOfAccount: 227.1
        AccountNumber: 18888.0
      properties:
        Id:
          description: Id des Kontos (technischer Schlüssel)
          example: "100800000000001"
          nullable: true
          type: string
        AccountNumber:
          description: Kontonummer (Ordnungsbegriff)
          example: 18888.0
          nullable: true
          type: number
        AccountType:
          description: Kontoart
          enum:
          - Debtor
          - Creditor
          - Bankaccount
          - Cashaccount
          - OpeningBalanceAccount
          - ClosingBalanceAccount
          - QuantityAccount
          - CollectiveAccount
          - BalanceSheetAccount
          - Taxaccount
          - CurrencyDifferenceAccount
          - ProfitLossAccount
          - InvestmentAccount
          example: Debtor
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: Verkauf im Hause
          nullable: true
          type: string
        Note:
          description: Notiz
          example: Konto nicht mehr bebuchen
          nullable: true
          type: string
        ShowNote:
          description: Notiz beim Buchen anzeigen
          example: false
          nullable: true
          type: boolean
        WithOpenItems:
          description: Konto mit OP-Führung
          example: true
          nullable: true
          type: boolean
        BalanceOfAccount:
          description: Kontosaldo
          example: 227.1
          nullable: true
          type: number
        CreditLimit:
          description: Kreditlimit
          example: 0.0
          nullable: true
          type: number
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
      title: Account
      type: object
    BalanceSheetAccount:
      description: Enthält die Daten eines Sonstigen Bilanzkontos
      example:
        TaxCodeId: TaxCodeId
        LastModifiedBy: fb
        Description: Verbindlichkeiten gg. Kreditinstituten
        PresetCostUnitId: PresetCostUnitId
        NoLongerPostable: false
        InputTax: Free
        ShowNote: false
        RetirementAccount: RetirementAccount
        UserDefinedFields:
        - null
        - null
        Assignment: LiabilityAccount
        LastModified: 2000-01-23T04:56:07.000+00:00
        PresetCostUnit: PresetCostUnit
        Input: Amount
        EitherOr: false
        WithOpenItems: false
        CostCenter: NoCostCenter
        TaxCode: TaxCode
        RetirementAccountId: RetirementAccountId
        CostUnit: NoCostUnit
        Retirement: FixedAccount
        TypeOfTax: NoTax
        QuantityDescription: ""
        PurposeOfAccount: Verbindlichkeiten gegenüber Kreditinstituten
        ChangablePositionElectronicBalanceSheet: false
        DatevAutomaticAccount: false
        AccountNumber: 630.0
        DecimalPlaces: 0
        PresetCostCenter: PresetCostCenter
        WithCollectivePosting: false
        Note: ""
        PresetCostCenterId: PresetCostCenterId
        BalanceControl: Without
        Id: "103000000000032"
        AccountNumberDatev: 630.0
      properties:
        Id:
          description: Id des Kontos (technischer Schlüssel)
          example: "103000000000032"
          nullable: true
          type: string
        AccountNumber:
          description: Kontonummer (Ordnungsbegriff)
          example: 630.0
          nullable: true
          type: number
        Description:
          description: Bezeichnung
          example: Verbindlichkeiten gg. Kreditinstituten
          nullable: true
          type: string
        Note:
          description: Notiz
          example: ""
          nullable: true
          type: string
        ShowNote:
          description: Notiz beim Buchen anzeigen
          example: false
          nullable: true
          type: boolean
        PurposeOfAccount:
          description: Kontozweck
          example: Verbindlichkeiten gegenüber Kreditinstituten
          nullable: true
          type: string
        Assignment:
          description: Zuordnung
          enum:
          - AssetAccount
          - LiabilityAccount
          example: LiabilityAccount
          nullable: true
          type: string
        BalanceControl:
          description: Saldenprüfung
          enum:
          - Without
          - OnlyDebitAllowed
          - OnlyCreditAllowed
          example: Without
          nullable: true
          type: string
        Input:
          description: Eingabe
          enum:
          - Amount
          - AmountQuantity
          example: Amount
          nullable: true
          type: string
        QuantityDescription:
          description: Mengenbezeichnung
          example: ""
          nullable: true
          type: string
        DecimalPlaces:
          description: Nachkommastellen
          example: 0
          nullable: true
          type: integer
        CostCenter:
          description: Kostenstelle
          enum:
          - NoCostCenter
          - CanCostCenter
          - MustCostCenter
          example: NoCostCenter
          nullable: true
          type: string
        CostUnit:
          description: Kostenträger
          enum:
          - NoCostUnit
          - CanCostUnit
          - MustCostUnit
          example: NoCostUnit
          nullable: true
          type: string
        EitherOr:
          description: Entweder.. oder...
          example: false
          nullable: true
          type: boolean
        PresetCostCenter:
          description: Vorbesetzung Kostenstelle (Ordnungsbegriff)
          nullable: true
          type: string
          example: null
        PresetCostCenterId:
          description: Id der Vorbesetzung Kostenstelle (technischer Schlüssel)
          nullable: true
          type: string
          example: null
        PresetCostUnit:
          description: Vorbesetzung Kostenträger (Ordnungsbegriff)
          nullable: true
          type: string
          example: null
        PresetCostUnitId:
          description: Id der Vorbesetzung Kostenträger (technischge Schlüssel)
          nullable: true
          type: string
          example: null
        WithOpenItems:
          description: Mit Offenen Posten
          example: false
          nullable: true
          type: boolean
        WithCollectivePosting:
          description: Mit Sammelbuchung
          example: false
          nullable: true
          type: boolean
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          example: false
          nullable: true
          type: boolean
        ChangablePositionElectronicBalanceSheet:
          description: Konto mit Wechseleigenschaft in E-Bilanz
          example: false
          nullable: true
          type: boolean
        AccountNumberDatev:
          description: DATEV Kontonummer
          example: 630.0
          nullable: true
          type: number
        TypeOfTax:
          description: Steuerart
          enum:
          - NoTax
          - ValueAddedTax
          - InputTax
          - TurnoverTax
          - TaxFreeEu
          - EuOtherServices
          example: NoTax
          nullable: true
          type: string
        InputTax:
          description: Steuereingabe
          enum:
          - FixedTaxKey
          - PresetTaxKey
          - Free
          example: Free
          nullable: true
          type: string
        TaxCode:
          description: Steuerkennzeichen (Ordnungsbegriff)
          nullable: true
          type: string
          example: null
        TaxCodeId:
          description: Id des Steuerkennzeichens (technischer Schlüssel)
          nullable: true
          type: string
          example: null
        DatevAutomaticAccount:
          description: DATEV-Automatikkonto
          example: false
          nullable: true
          type: boolean
        Retirement:
          description: Ausbuchung
          enum:
          - NoRetirement
          - UseThisAccount
          - UseAccountFromTaxKey
          - FixedAccount
          example: FixedAccount
          nullable: true
          type: string
        RetirementAccount:
          description: Ausbuchungskonto (Ordnungsbegriff)
          nullable: true
          type: string
          example: null
        RetirementAccountId:
          description: Id des Ausbuchungskontos (technischer Schlüssel)
          nullable: true
          type: string
          example: null
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
      title: BalanceSheetAccount
      type: object
    BankAccount:
      description: Enthält die Daten eines Bankkontos
      example:
        PresetNextChequeNumber: false
        ChequeType: CrossedCheque
        LastModifiedBy: fb
        Description: Bank 1
        Bank: "20000000"
        NoLongerPostable: false
        InterimAccountChequeId: "103000000000046"
        Iban: DE39200000000000011122
        BankAccountnumber: "11122"
        InterimAccountBankTransfer: "1212"
        ShowNote: true
        UserDefinedFields:
        - null
        - null
        AmountOfTextLinesBankTransfer: 5
        Assignment: AssetAccount
        LastModified: 2000-01-23T04:56:07.000+00:00
        BankTransferOutputAs: SepaDcl
        InterimAccountBankTransferId: "103000000000047"
        NextChequeNumber: 0
        InterimAccountCheque: "1211"
        SepaPath: C:\Hs_Daten\Fb\SEPA\SEPA_01_1210_<DATUM>_<UHRZEIT>.xml
        UseForPayments: true
        DclPath: C:\Hs_Daten\Fb\DCL\DTA01001.001
        NoExecutionDateSepa: false
        UseForDirectDebit: true
        CreditLimit: 0.0
        DclOutputTo: HardDrive
        DclA8: false
        InterimAccountDirectDebit: "1213"
        PurposeOfAccount: Bank 1
        DirectDebitOutputAs: SepaDcl
        ChangablePositionElectronicBalanceSheet: true
        AccountNumber: 1210.0
        InterimAccountDirectDebitId: "103000000000048"
        WithCollectivePosting: false
        Note: Umstellung auf Euro ab 2002 beachten
        BalanceControl: Without
        SepaVersion: V2.7
        Id: "102600000000001"
        BankId: "100200000000165"
        AccountNumberDatev: 1210.0
        AmountOfTextLinesDirectDebit: 5
        AccountNumberMT940: "1210"
      properties:
        Id:
          description: Id des Kontos (technischer Schlüssel)
          example: "102600000000001"
          nullable: true
          type: string
        AccountNumber:
          description: Kontonummer (Ordnungsbegriff)
          example: 1210.0
          nullable: true
          type: number
        Description:
          description: Bankbezeichnung
          example: Bank 1
          nullable: true
          type: string
        Note:
          description: Notiz
          example: Umstellung auf Euro ab 2002 beachten
          nullable: true
          type: string
        ShowNote:
          description: Notiz beim Buchen anzeigen
          example: true
          nullable: true
          type: boolean
        PurposeOfAccount:
          description: Kontozweck
          example: Bank 1
          nullable: true
          type: string
        Assignment:
          description: Zuordnung
          enum:
          - AssetAccount
          - LiabilityAccount
          example: AssetAccount
          nullable: true
          type: string
        BalanceControl:
          description: Saldenprüfung
          enum:
          - Without
          - OnlyDebitAllowed
          - OnlyCreditAllowed
          example: Without
          nullable: true
          type: string
        Iban:
          description: IBAN
          example: DE39200000000000011122
          nullable: true
          type: string
        Bank:
          description: Bank (Ordnungsbegriff)
          example: "20000000"
          nullable: true
          type: string
        BankId:
          description: Id der Bank (technischer Schlüssel)
          example: "100200000000165"
          nullable: true
          type: string
        BankAccountnumber:
          description: Kontonummer bei der Bank
          example: "11122"
          nullable: true
          type: string
        WithCollectivePosting:
          description: Mit Sammelbuchung
          example: false
          nullable: true
          type: boolean
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          example: false
          nullable: true
          type: boolean
        UseForPayments:
          description: Für Zahlungen verwenden
          example: true
          nullable: true
          type: boolean
        UseForDirectDebit:
          description: Für Lastschriften verwenden
          example: true
          nullable: true
          type: boolean
        AccountNumberDatev:
          description: DATEV Kontonummer
          example: 1210.0
          nullable: true
          type: number
        AccountNumberMT940:
          description: Kontonummer MT940
          example: "1210"
          nullable: true
          type: string
        CreditLimit:
          description: Kreditlimit
          example: 0.0
          nullable: true
          type: number
        ChangablePositionElectronicBalanceSheet:
          description: Konto mit Wechseleigenschaft in E-Bilanz
          example: true
          nullable: true
          type: boolean
        InterimAccountCheque:
          description: Zwischenkonto Scheck (Ordnungsbegriff)
          example: "1211"
          nullable: true
          type: string
        InterimAccountChequeId:
          description: Id des Zwischenkontos Scheck (technischer Schlüssel)
          example: "103000000000046"
          nullable: true
          type: string
        PresetNextChequeNumber:
          description: Nächste Shecknummer beim Erstellen der Zahlungen vorbesetzen
          example: false
          nullable: true
          type: boolean
        NextChequeNumber:
          description: Nächste Schecknummer
          nullable: true
          type: integer
          example: null
        ChequeType:
          description: Scheckart
          enum:
          - CrossedCheque
          - OrderCheque
          example: CrossedCheque
          nullable: true
          type: string
        BankTransferOutputAs:
          description: Überweisungen Ausgabe auf
          enum:
          - FormAccountNumber
          - FormSepa
          - Dcl
          - SepaDcl
          example: SepaDcl
          nullable: true
          type: string
        InterimAccountBankTransfer:
          description: Zwischenkonto Überweisungen (Ordnungsbegriff)
          example: "1212"
          nullable: true
          type: string
        InterimAccountBankTransferId:
          description: Id des Zwischenkontos Überweisungen (technischer Schlüssel)
          example: "103000000000047"
          nullable: true
          type: string
        AmountOfTextLinesBankTransfer:
          description: Anzahl Textzeilen Überweisungen
          example: 5
          nullable: true
          type: integer
        DirectDebitOutputAs:
          description: Lastschriften Ausgabe auf
          enum:
          - FormAccountNumber
          - FormSEPA
          - Dcl
          - SepaDcl
          example: SepaDcl
          nullable: true
          type: string
        InterimAccountDirectDebit:
          description: Zwischenkonto Lastschriften (Ordnungsbegriff)
          example: "1213"
          nullable: true
          type: string
        InterimAccountDirectDebitId:
          description: Id des Zwischenkontos Lastschriften (technischer Schlüssel)
          example: "103000000000048"
          nullable: true
          type: string
        AmountOfTextLinesDirectDebit:
          description: Anzahl Textzeilen Lastschriften
          example: 5
          nullable: true
          type: integer
        SepaPath:
          description: Pfad/Datei SEPA
          example: C:\Hs_Daten\Fb\SEPA\SEPA_01_1210_<DATUM>_<UHRZEIT>.xml
          nullable: true
          type: string
        SepaVersion:
          description: SEPA Version
          enum:
          - V2.3
          - V2.4
          - V2.5
          - V2.7
          - V3.0
          - V3.1
          - V3.2
          - V3.3
          - V3.4
          - V3.5
          - V3.6
          - V3.7
          example: V2.7
          nullable: true
          type: string
        NoExecutionDateSepa:
          description: Kein Ausführungsdatum in der SEPA-Datei setzen
          example: false
          nullable: true
          type: boolean
        DclOutputTo:
          description: DCL Erstellung auf
          enum:
          - Disk
          - HardDrive
          example: HardDrive
          nullable: true
          type: string
        DclPath:
          description: Pfad/Datei DCL
          example: C:\Hs_Daten\Fb\DCL\DTA01001.001
          nullable: true
          type: string
        DclA8:
          description: Feld A8 im DCL-Verfahren besetzen
          example: false
          nullable: true
          type: boolean
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
      title: BankAccount
      type: object
    CashAccount:
      description: Enthält die Daten eines Kassenkontos
      example:
        WithCashBook: true
        LastModifiedBy: fb
        Description: Kasse
        NoLongerPostable: false
        ShowNote: true
        PurposeOfAccount: Kasse
        UserDefinedFields:
        - null
        - null
        AccountNumber: 1000.0
        Assignment: AssetAccount
        LastModified: 2000-01-23T04:56:07.000+00:00
        WithCollectivePosting: false
        Note: Kassenführung in Euro ab 03/2002
        BalanceControl: Without
        Id: "102900000000001"
        AccountNumberDatev: 1000.0
      properties:
        Id:
          description: Id des Kontos (technischer Schlüssel)
          example: "102900000000001"
          nullable: true
          type: string
        AccountNumber:
          description: Kontonummer (Ordnungsbegriff)
          example: 1000.0
          nullable: true
          type: number
        Description:
          description: Bezeichnung
          example: Kasse
          nullable: true
          type: string
        Note:
          description: Notiz
          example: Kassenführung in Euro ab 03/2002
          nullable: true
          type: string
        ShowNote:
          description: Notiz beim Buchen anzeigen
          example: true
          nullable: true
          type: boolean
        PurposeOfAccount:
          description: Kontozweck
          example: Kasse
          nullable: true
          type: string
        Assignment:
          description: Zuordnung
          enum:
          - AssetAccount
          - LiabilityAccount
          example: AssetAccount
          nullable: true
          type: string
        BalanceControl:
          description: Saldenprüfung
          enum:
          - Without
          - OnlyDebitAllowed
          - OnlyCreditAllowed
          example: Without
          nullable: true
          type: string
        WithCashBook:
          description: Mit Kassenbuch (read-only)
          nullable: true
          type: boolean
          example: null
        WithCollectivePosting:
          description: Mit Sammelbuchung
          example: false
          nullable: true
          type: boolean
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          example: false
          nullable: true
          type: boolean
        AccountNumberDatev:
          description: DATEV Kontonummer
          example: 1000.0
          nullable: true
          type: number
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
      title: CashAccount
      type: object
    ClosingBalanceAccount:
      description: Enthält die Daten eines Abschlusskontos
      example:
        LastModifiedBy: fb
        Description: Jahresabschluss Sachkonten
        NoLongerPostable: false
        ShowNote: false
        PurposeOfAccount: Jahresabschluss Sachkonten
        UserDefinedFields:
        - null
        - null
        AccountNumber: 9901.0
        LastModified: 2000-01-23T04:56:07.000+00:00
        PermittedForGeneralLedgerAccounts: true
        PermittedForDebtors: false
        Note: ""
        Id: "102700000000004"
        PermittedForCreditors: false
        AccountNumberDatev: 9901.0
      properties:
        Id:
          description: Id des Kontos (technischer Schlüssel)
          example: "102700000000004"
          nullable: true
          type: string
        AccountNumber:
          description: Kontonummer (Ordnungsbegriff)
          example: 9901.0
          nullable: true
          type: number
        Description:
          description: Bezeichnung
          example: Jahresabschluss Sachkonten
          nullable: true
          type: string
        Note:
          description: Notiz
          example: ""
          nullable: true
          type: string
        ShowNote:
          description: Notiz beim Buchen anzeigen
          example: false
          nullable: true
          type: boolean
        PurposeOfAccount:
          description: Kontozweck
          example: Jahresabschluss Sachkonten
          nullable: true
          type: string
        PermittedForGeneralLedgerAccounts:
          description: Zulässig für Sachkonten
          example: true
          nullable: true
          type: boolean
        PermittedForDebtors:
          description: Zulässig für Kunden
          example: false
          nullable: true
          type: boolean
        PermittedForCreditors:
          description: Zulässig für Lieferanten
          example: false
          nullable: true
          type: boolean
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          example: false
          nullable: true
          type: boolean
        AccountNumberDatev:
          description: DATEV Kontonummer
          example: 9901.0
          nullable: true
          type: number
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
      title: ClosingBalanceAccount
      type: object
    CollectiveAccount:
      description: Enthält die Daten eines Sammelkontos
      example:
        LastModified: 2000-01-23T04:56:07.000+00:00
        LastModifiedBy: fb
        Description: Forderungen aus Lieferungen u.Leistung
        Note: Gesondertes Kontokorrent beachten für verbundene oder für beteiligte
          Unternehmen
        ShowNote: false
        PurposeOfAccount: Forderungen aus Lieferungen und Leistungen
        Id: "103200000000001"
        UserDefinedFields:
        - null
        - null
        ChangablePositionElectronicBalanceSheet: false
        AccountNumberDatev: 1400.0
        AccountNumber: 1400.0
      properties:
        Id:
          description: Id des Kontos (technischer Schlüssel)
          example: "103200000000001"
          nullable: true
          type: string
        AccountNumber:
          description: Kontonummer (Ordnungsbegriff)
          example: 1400.0
          nullable: true
          type: number
        Description:
          description: Bezeichnung
          example: Forderungen aus Lieferungen u.Leistung
          nullable: true
          type: string
        Note:
          description: Notiz
          example: Gesondertes Kontokorrent beachten für verbundene oder für beteiligte
            Unternehmen
          nullable: true
          type: string
        ShowNote:
          description: Notiz beim Buchen anzeigen
          example: false
          nullable: true
          type: boolean
        PurposeOfAccount:
          description: Kontozweck
          example: Forderungen aus Lieferungen und Leistungen
          nullable: true
          type: string
        AccountNumberDatev:
          description: DATEV Kontonummer
          example: 1400.0
          nullable: true
          type: number
        ChangablePositionElectronicBalanceSheet:
          description: Konto mit Wechseleigenschaft in E-Bilanz
          example: false
          nullable: true
          type: boolean
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
      title: CollectiveAccount
      type: object
    CreditorGet:
      description: Enthält die Daten eines Lieferantenkontos für GET-Befehl
      example:
        AssignedReceivablesRemark: ""
        LastModifiedBy: fb
        Description: Kleinlieferung
        NoLongerPostable: false
        Bank: Bank
        ShowNote: false
        UserDefinedFields:
        - null
        - null
        ShortDescription: KLEINKAUF
        LastModified: 2000-01-23T04:56:07.000+00:00
        CustomerNumber: ""
        AssignedAllReceivables: false
        CollectiveAccount: "1600"
        PaymentType: S/Ü
        TaxNumber: ""
        PaymentTypeId: "237000000000002"
        IsIbanVerified: true
        VATId: ""
        AccountHolder: AccountHolder
        ReservedContraAccount: "8400"
        TermOfPayment: N7
        CountryId: 1013D
        IBAN: IBAN
        TermOfPaymentId: 1007N7
        CreditLimit: 0.0
        BalanceConfirmationType: STD
        PhysicalAddress:
          CountryId: 1013D
          Zip: "20537"
          LastModifiedBy: xx
          Description: Hauptsitz
          AccountId: "100900000000003"
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          LastModified: 2000-01-23T04:56:07.000+00:00
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          Id: "101000000000001"
          AddressType: PhysicalAddress
          Name1: Poldi Mayr
          Name2: ""
        AccountNumber: 78888.0
        PostalAddress:
          CountryId: 1013D
          Zip: "20537"
          LastModifiedBy: xx
          Description: Hauptsitz
          AccountId: "100900000000003"
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          LastModified: 2000-01-23T04:56:07.000+00:00
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          Id: "101000000000001"
          AddressType: PhysicalAddress
          Name1: Poldi Mayr
          Name2: ""
        AllowedForPayment: false
        BalanceConfirmationTypeId: "243700000000001"
        CollectiveAccountId: "103200000000005"
        Note: ""
        Country: D
        AssignedReceivables: false
        OneTimeVendor: true
        Id: "100900000000001"
        AccountNumberDatev: 78888.0
        BankId: BankId
        BankAccountNumber: BankAccountNumber
      properties:
        Id:
          description: Id des Kontos (technischer Schlüssel)
          example: "100900000000001"
          nullable: true
          type: string
        AccountNumber:
          description: Kontonummer (Ordnungsbegriff)
          example: 78888.0
          nullable: true
          type: number
        PostalAddress:
          $ref: '#/components/schemas/CreditorAddressGet'
        PhysicalAddress:
          $ref: '#/components/schemas/CreditorAddressGet'
        Description:
          description: Bezeichnung
          example: Kleinlieferung
          maxLength: 50
          nullable: true
          type: string
        ShortDescription:
          description: Kurzbezeichnung
          example: KLEINKAUF
          maxLength: 15
          nullable: true
          type: string
        ShowNote:
          description: Notiz beim Buchen anzeigen
          example: false
          nullable: true
          type: boolean
        Country:
          description: Land (Ordnungsbegriff)
          example: D
          nullable: true
          type: string
        CountryId:
          description: |
            Id des Landes (technischer Schlüssel) Ist bei Country ein Wert angegeben, wird dieser zum Identifizieren des Landes verwendet und der Wert bei CountryId ignoriert.
          example: 1013D
          nullable: true
          type: string
        VATId:
          description: USt.-IdNr. (Wert ist für Einmalkonten nicht gültig und wird
            ignoriert)
          example: ""
          maxLength: 15
          nullable: true
          type: string
        TaxNumber:
          description: Steuernummer
          example: ""
          maxLength: 20
          nullable: true
          type: string
        TermOfPayment:
          description: Zahlungsbedingung (Ordnungsbegriff)
          example: N7
          nullable: true
          type: string
        TermOfPaymentId:
          description: Id der Zahlungsbedingung (technischer Schlüssel)
          example: 1007N7
          nullable: true
          type: string
        CustomerNumber:
          description: Kundennummer (Wert ist für Einmalkonten nicht gültig und wird
            ignoriert)
          example: ""
          maxLength: 35
          nullable: true
          type: string
        CreditLimit:
          description: Kreditlimit (Wert ist für Einmalkonten nicht gültig und wird
            ignoriert)
          example: 0.0
          nullable: true
          type: number
        CollectiveAccount:
          description: Sammelkonto (Ordnungsbegriff)
          example: "1600"
          nullable: true
          type: string
        CollectiveAccountId:
          description: Id des Sammelkontos (technischer Schlüssel)
          example: "103200000000005"
          nullable: true
          type: string
        AssignedReceivables:
          description: "Forderungen abgetreten. Vorhandene Offene Posten werden nicht\
            \ automatisch auf zediert bzw. nicht zediert gesetzt. \n"
          example: false
          nullable: true
          type: boolean
        AssignedReceivablesRemark:
          description: Zessionsvermerk
          example: ""
          maxLength: 100
          nullable: true
          type: string
        AssignedAllReceivables:
          description: Forderungen auch für zukünftige Offene Posten abgetreten
          example: false
          nullable: true
          type: boolean
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          example: false
          nullable: true
          type: boolean
        OneTimeVendor:
          description: Einmallieferant
          example: true
          nullable: true
          type: boolean
        AccountNumberDatev:
          description: DATEV Kontonummer (Nur mit Erweiterungsmodul DATEV Datei-Schnittstelle)
          example: 78888.0
          nullable: true
          type: number
        AllowedForPayment:
          description: Zahlung erlaubt
          example: false
          nullable: true
          type: boolean
        PaymentType:
          description: Zahlungstyp (Ordnungsbegriff)
          example: S/Ü
          nullable: true
          type: string
        PaymentTypeId:
          description: Id des Zahlungstyps (technischer Schlüssel)
          example: "237000000000002"
          nullable: true
          type: string
        IBAN:
          description: IBAN (Wert ist für Einmalkonten nicht gültig und wird ignoriert)
          maxLength: 34
          nullable: true
          type: string
          example: null
        IsIbanVerified:
          description: |
            IBAN ist korrekt (Wert ist für Einmalkonten nicht gültig und wird ignoriert) Sie aktivieren das Kontrollkästchen IBAN ist korrekt, wenn Sie dies anhand Ihrer Unterlagen geprüft und bestätigt haben.
          example: true
          nullable: true
          type: boolean
        Bank:
          description: Bank (Ordnungsbegriff) (Wert ist für Einmalkonten nicht gültig
            und wird ignoriert)
          nullable: true
          type: string
          example: null
        BankId:
          description: Id der Bank (technischer Schlüssel) (Wert ist für Einmalkonten
            nicht gültig und wird ignoriert)
          nullable: true
          type: string
          example: null
        BankAccountNumber:
          description: Kontonummer der Bank (Wert ist für Einmalkonten nicht gültig
            und wird ignoriert)
          maxLength: 35
          nullable: true
          type: string
          example: null
        AccountHolder:
          description: Kontoinhaber (Wert ist für Einmalkonten nicht gültig und wird
            ignoriert)
          maxLength: 70
          nullable: true
          type: string
          example: null
        ReservedContraAccount:
          description: Kontonummer des vorbesetzten Gegenkontos (Ordnungsbegriff)
          example: "8400"
          nullable: true
          type: string
        BalanceConfirmationType:
          description: Saldenbestätigungstyp (Ordnungsbegriff) (Wert ist für Einmalkonten
            nicht gültig und wird ignoriert)
          example: STD
          nullable: true
          type: string
        BalanceConfirmationTypeId:
          description: Id des Saldenbestätigungstyp (technischer Schlüssel) (Wert
            ist für Einmalkonten nicht gültig und wird ignoriert)
          example: "243700000000001"
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
        Note:
          description: Notiz
          example: ""
          maxLength: 2000
          nullable: true
          type: string
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
      title: CreditorGet
      type: object
    CreditorPost:
      allOf:
      - $ref: '#/components/schemas/CreditorPut'
      - $ref: '#/components/schemas/CreditorPostExtendedProperties'
      description: Enthält die Daten eines Lieferantenkontos für POST-Befehl
      example:
        AssignedReceivablesRemark: ""
        Description: Kleinlieferung
        NoLongerPostable: false
        Bank: Bank
        ShowNote: false
        UserDefinedFields:
        - null
        - null
        ShortDescription: KLEINKAUF
        CustomerNumber: ""
        AssignedAllReceivables: false
        CollectiveAccount: "1600"
        PaymentType: S/Ü
        TaxNumber: ""
        PaymentTypeId: "237000000000002"
        IsIbanVerified: true
        VATId: ""
        AccountHolder: AccountHolder
        ReservedContraAccount: "8400"
        TermOfPayment: N7
        CountryId: 1013D
        IBAN: IBAN
        TermOfPaymentId: 1007N7
        CreditLimit: 0.0
        BalanceConfirmationType: STD
        PhysicalAddress:
          CountryId: 1013D
          Zip: "20537"
          Description: Hauptsitz
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          AddressType: PhysicalAddress
          Name1: Poldi Mayr
          Name2: ""
        AccountNumber: 78888.0
        PostalAddress:
          CountryId: 1013D
          Zip: "20537"
          Description: Hauptsitz
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          AddressType: PhysicalAddress
          Name1: Poldi Mayr
          Name2: ""
        AllowedForPayment: false
        BalanceConfirmationTypeId: "243700000000001"
        CollectiveAccountId: "103200000000005"
        Note: ""
        Country: D
        AssignedReceivables: false
        OneTimeVendor: true
        AccountNumberDatev: 78888.0
        BankId: BankId
        BankAccountNumber: BankAccountNumber
      title: CreditorPost
      type: object
    CreditorPut:
      description: Enthält die Daten eines Lieferantenkontos für PUT-Befehl
      example:
        AssignedReceivablesRemark: ""
        Description: Kleinlieferung
        NoLongerPostable: false
        Bank: Bank
        ShowNote: false
        UserDefinedFields:
        - null
        - null
        ShortDescription: KLEINKAUF
        CustomerNumber: ""
        AssignedAllReceivables: false
        CollectiveAccount: "1600"
        PaymentType: S/Ü
        TaxNumber: ""
        PaymentTypeId: "237000000000002"
        IsIbanVerified: true
        VATId: ""
        AccountHolder: AccountHolder
        ReservedContraAccount: "8400"
        TermOfPayment: N7
        CountryId: 1013D
        IBAN: IBAN
        TermOfPaymentId: 1007N7
        CreditLimit: 0.0
        BalanceConfirmationType: STD
        PhysicalAddress:
          CountryId: 1013D
          Zip: "20537"
          Description: Hauptsitz
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          AddressType: PhysicalAddress
          Name1: Poldi Mayr
          Name2: ""
        PostalAddress:
          CountryId: 1013D
          Zip: "20537"
          Description: Hauptsitz
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          AddressType: PhysicalAddress
          Name1: Poldi Mayr
          Name2: ""
        AllowedForPayment: false
        BalanceConfirmationTypeId: "243700000000001"
        CollectiveAccountId: "103200000000005"
        Country: D
        AssignedReceivables: false
        OneTimeVendor: true
        AccountNumberDatev: 78888.0
        BankId: BankId
        BankAccountNumber: BankAccountNumber
      properties:
        PostalAddress:
          $ref: '#/components/schemas/CreditorAddressPutPost'
        PhysicalAddress:
          $ref: '#/components/schemas/CreditorAddressPutPost'
        Description:
          description: Bezeichnung
          example: Kleinlieferung
          maxLength: 50
          nullable: true
          type: string
        ShortDescription:
          description: Kurzbezeichnung
          example: KLEINKAUF
          maxLength: 15
          nullable: true
          type: string
        ShowNote:
          description: Notiz beim Buchen anzeigen
          example: false
          nullable: true
          type: boolean
        Country:
          description: Land (Ordnungsbegriff)
          example: D
          nullable: true
          type: string
        CountryId:
          description: |
            Id des Landes (technischer Schlüssel) Ist bei Country ein Wert angegeben, wird dieser zum Identifizieren des Landes verwendet und der Wert bei CountryId ignoriert.
          example: 1013D
          nullable: true
          type: string
        VATId:
          description: USt.-IdNr. (Wert ist für Einmalkonten nicht gültig und wird
            ignoriert)
          example: ""
          maxLength: 15
          nullable: true
          type: string
        TaxNumber:
          description: Steuernummer
          example: ""
          maxLength: 20
          nullable: true
          type: string
        TermOfPayment:
          description: Zahlungsbedingung (Ordnungsbegriff)
          example: N7
          nullable: true
          type: string
        TermOfPaymentId:
          description: Id der Zahlungsbedingung (technischer Schlüssel)
          example: 1007N7
          nullable: true
          type: string
        CustomerNumber:
          description: Kundennummer (Wert ist für Einmalkonten nicht gültig und wird
            ignoriert)
          example: ""
          maxLength: 35
          nullable: true
          type: string
        CreditLimit:
          description: Kreditlimit (Wert ist für Einmalkonten nicht gültig und wird
            ignoriert)
          example: 0.0
          nullable: true
          type: number
        CollectiveAccount:
          description: Sammelkonto (Ordnungsbegriff)
          example: "1600"
          nullable: true
          type: string
        CollectiveAccountId:
          description: Id des Sammelkontos (technischer Schlüssel)
          example: "103200000000005"
          nullable: true
          type: string
        AssignedReceivables:
          description: "Forderungen abgetreten. Vorhandene Offene Posten werden nicht\
            \ automatisch auf zediert bzw. nicht zediert gesetzt. \n"
          example: false
          nullable: true
          type: boolean
        AssignedReceivablesRemark:
          description: Zessionsvermerk
          example: ""
          maxLength: 100
          nullable: true
          type: string
        AssignedAllReceivables:
          description: Forderungen auch für zukünftige Offene Posten abgetreten
          example: false
          nullable: true
          type: boolean
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          example: false
          nullable: true
          type: boolean
        OneTimeVendor:
          description: Einmallieferant
          example: true
          nullable: true
          type: boolean
        AccountNumberDatev:
          description: DATEV Kontonummer (Nur mit Erweiterungsmodul DATEV Datei-Schnittstelle)
          example: 78888.0
          nullable: true
          type: number
        AllowedForPayment:
          description: Zahlung erlaubt
          example: false
          nullable: true
          type: boolean
        PaymentType:
          description: Zahlungstyp (Ordnungsbegriff)
          example: S/Ü
          nullable: true
          type: string
        PaymentTypeId:
          description: Id des Zahlungstyps (technischer Schlüssel)
          example: "237000000000002"
          nullable: true
          type: string
        IBAN:
          description: IBAN (Wert ist für Einmalkonten nicht gültig und wird ignoriert)
          maxLength: 34
          nullable: true
          type: string
          example: null
        IsIbanVerified:
          description: |
            IBAN ist korrekt (Wert ist für Einmalkonten nicht gültig und wird ignoriert) Sie aktivieren das Kontrollkästchen IBAN ist korrekt, wenn Sie dies anhand Ihrer Unterlagen geprüft und bestätigt haben.
          example: true
          nullable: true
          type: boolean
        Bank:
          description: Bank (Ordnungsbegriff) (Wert ist für Einmalkonten nicht gültig
            und wird ignoriert)
          nullable: true
          type: string
          example: null
        BankId:
          description: Id der Bank (technischer Schlüssel) (Wert ist für Einmalkonten
            nicht gültig und wird ignoriert)
          nullable: true
          type: string
          example: null
        BankAccountNumber:
          description: Kontonummer der Bank (Wert ist für Einmalkonten nicht gültig
            und wird ignoriert)
          maxLength: 35
          nullable: true
          type: string
          example: null
        AccountHolder:
          description: Kontoinhaber (Wert ist für Einmalkonten nicht gültig und wird
            ignoriert)
          maxLength: 70
          nullable: true
          type: string
          example: null
        ReservedContraAccount:
          description: Kontonummer des vorbesetzten Gegenkontos (Ordnungsbegriff)
          example: "8400"
          nullable: true
          type: string
        BalanceConfirmationType:
          description: Saldenbestätigungstyp (Ordnungsbegriff) (Wert ist für Einmalkonten
            nicht gültig und wird ignoriert)
          example: STD
          nullable: true
          type: string
        BalanceConfirmationTypeId:
          description: Id des Saldenbestätigungstyp (technischer Schlüssel) (Wert
            ist für Einmalkonten nicht gültig und wird ignoriert)
          example: "243700000000001"
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
      title: CreditorPut
      type: object
    CreditorPostExtendedProperties:
      description: Enthält zusätzliche Felder für POST-Befehl eines Lieferantenkontos
      properties:
        AccountNumber:
          description: Kontonummer (Ordnungsbegriff)
          example: 78888.0
          nullable: true
          type: number
        Note:
          description: Notiz
          example: ""
          maxLength: 2000
          nullable: true
          type: string
      title: CreditorPostExtendedProperties
      type: object
    CreditorAddressGet:
      allOf:
      - $ref: '#/components/schemas/CreditorAddressPutPost'
      - $ref: '#/components/schemas/CreditorAddressGetExtendedProperties'
      description: Enthält die Daten einer Lieferantenadresse für GET-Befehl
      example:
        CountryId: 1013D
        Zip: "20537"
        LastModifiedBy: xx
        Description: Hauptsitz
        AccountId: "100900000000003"
        Website: ""
        City: Hamburg
        EMail: ""
        Salutation: Herr
        Name3: ""
        LastModified: 2000-01-23T04:56:07.000+00:00
        StreetOrPOBox: Eiffestraße 2
        AdditionalText1: ""
        AdditionalText3: ""
        AdditionalText2: ""
        FaxNumber: ""
        Country: D
        PhoneNumber: ""
        Id: "101000000000001"
        AddressType: PhysicalAddress
        Name1: Poldi Mayr
        Name2: ""
      title: CreditorAddressGet
      type: object
    CreditorAddressPutPost:
      description: Enthält die Daten einer Lieferantenadresse für POST- und PUT-Befehl
      example:
        CountryId: 1013D
        Zip: "20537"
        Description: Hauptsitz
        Website: ""
        City: Hamburg
        EMail: ""
        Salutation: Herr
        Name3: ""
        StreetOrPOBox: Eiffestraße 2
        AdditionalText1: ""
        AdditionalText3: ""
        AdditionalText2: ""
        FaxNumber: ""
        Country: D
        PhoneNumber: ""
        AddressType: PhysicalAddress
        Name1: Poldi Mayr
        Name2: ""
      properties:
        AddressType:
          default: ExtraAddress
          description: |
            Adressart
            Wenn eine andere Adressart als Weitere Adresse angegeben ist und schon eine andere Adresse mit dieser Adressart existiert,
            wird die Adressart der anderen Adresse auf Weitere Adresse gesetzt, da Postadresse und Hausadresse jeweils eindeutig sein müssen.
            - PostalAddress -> Postadresse
            - PhysicalAddress -> Hausadresse
            - ExtraAddress -> Weitere Adresse
          enum:
          - PostalAddress
          - PhysicalAddress
          - ExtraAddress
          example: PhysicalAddress
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: Hauptsitz
          maxLength: 30
          nullable: true
          type: string
        Salutation:
          description: Anrede
          example: Herr
          maxLength: 50
          nullable: true
          type: string
        Name1:
          description: Name 1
          example: Poldi Mayr
          maxLength: 50
          nullable: true
          type: string
        Name2:
          description: Name 2
          example: ""
          maxLength: 50
          nullable: true
          type: string
        Name3:
          description: Name 3
          example: ""
          maxLength: 50
          nullable: true
          type: string
        StreetOrPOBox:
          description: Straße/Postfach
          example: Eiffestraße 2
          maxLength: 50
          nullable: true
          type: string
        Country:
          description: Land (Ordnungsbegriff)
          example: D
          nullable: true
          type: string
        CountryId:
          description: |
            Id des Landes (technischer Schlüssel) Ist bei Country ein Wert angegeben, wird dieser zum Identifizieren des Landes verwendet und der Wert bei CountryId ignoriert.
          example: 1013D
          nullable: true
          type: string
        Zip:
          description: Postleitzahl
          example: "20537"
          maxLength: 10
          nullable: true
          type: string
        City:
          description: Ort
          example: Hamburg
          maxLength: 50
          nullable: true
          type: string
        AdditionalText1:
          description: Zusatz 1
          example: ""
          maxLength: 50
          nullable: true
          type: string
        AdditionalText2:
          description: Zusatz 2
          example: ""
          maxLength: 50
          nullable: true
          type: string
        AdditionalText3:
          description: Zusatz 3
          example: ""
          maxLength: 50
          nullable: true
          type: string
        PhoneNumber:
          description: Telefonnummer
          example: ""
          maxLength: 60
          nullable: true
          type: string
        FaxNumber:
          description: Telefaxnummer
          example: ""
          maxLength: 60
          nullable: true
          type: string
        EMail:
          description: E-Mail-Adresse
          example: ""
          maxLength: 255
          nullable: true
          type: string
        Website:
          description: URL der Homepage
          example: ""
          maxLength: 100
          nullable: true
          type: string
      title: CreditorAddressPutPost
      type: object
    CreditorAddressGetExtendedProperties:
      description: Enthält zusätzliche Felder für GET-Befehl einer Lieferantenadresse
      properties:
        Id:
          description: Id der Adresse (technischer Schlüssel)
          example: "101000000000001"
          type: string
        AccountId:
          description: Id des Lieferantenkontos (technischer Schlüssel)
          example: "100900000000003"
          nullable: true
          type: string
        LastModified:
          description: Letzte Änderung am
          format: date-time
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: xx
          type: string
      title: CreditorAddressGetExtendedProperties
      type: object
    CurrencyDifferenceAccount:
      description: Enthält die Daten eines Währungsdifferenzkontos
      example:
        LastModified: 2000-01-23T04:56:07.000+00:00
        LastModifiedBy: LastModifiedBy
        Description: Description
        NoLongerPostable: true
        WithCollectivePosting: true
        Note: Note
        ShowNote: true
        PurposeOfAccount: PurposeOfAccount
        Id: Id
        UserDefinedFields:
        - null
        - null
        AccountNumberDatev: 6.027456183070403
        AccountNumber: 0.8008281904610115
      properties:
        Id:
          description: Id des Kontos (technischer Schlüssel)
          nullable: true
          type: string
        AccountNumber:
          description: Kontonummer (Ordnungsbegriff)
          nullable: true
          type: number
        Description:
          description: Bezeichnung
          nullable: true
          type: string
        Note:
          description: Notiz
          nullable: true
          type: string
        ShowNote:
          description: Notiz beim Buchen anzeigen
          nullable: true
          type: boolean
        PurposeOfAccount:
          description: Kontozweck
          nullable: true
          type: string
        WithCollectivePosting:
          description: Mit Sammelbuchung
          nullable: true
          type: boolean
        AccountNumberDatev:
          description: DATEV Kontonummer
          nullable: true
          type: number
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          nullable: true
          type: boolean
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
      title: CurrencyDifferenceAccount
      type: object
    DebtorGet:
      description: Enthält die Daten eines Kundenkontos für GET-Befehl
      example:
        AssignedReceivablesRemark: ""
        AllowedForDunning: true
        NoLongerPostable: false
        ShowNote: false
        UserDefinedFields:
        - null
        - null
        TypeOfDirectDebit: DirectDebiting
        ShortDescription: INHAUS
        LastModified: 2000-01-23T04:56:07.000+00:00
        AssignedAllReceivables: false
        DirectDebitTypeId: "238200000000001"
        DunningType: MS3
        PaymentTypeId: "237000000000002"
        DunningTypeId: "201200000000003"
        ReservedContraAccount: "8400"
        CountryId: 1013D
        IBAN: IBAN
        BalanceConfirmationType: STD
        WithDRD: true
        AllowedForPayment: true
        BalanceConfirmationTypeId: "243700000000001"
        Note: ""
        CollectiveAccountId: "103200000000001"
        Country: D
        OneTimeVendor: true
        Id: "100800000000001"
        AccountNumberDatev: 18888.0
        AllowedForDirectDebit: false
        BankId: BankId
        BankAccountNumber: BankAccountNumber
        LastModifiedBy: fb
        Description: Verkauf im Hause
        Bank: Bank
        DeliveryAddress:
          CountryId: 1013D
          Zip: "20537"
          LastModifiedBy: xx
          Description: Hauptsitz
          AccountId: "100800000000003"
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          LastModified: 2000-01-23T04:56:07.000+00:00
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          Id: "101000000000001"
          AddressType: BillingAddress
          Name1: Poldi Mayr
          Name2: ""
        VendorNumber: ""
        BillingAddress:
          CountryId: 1013D
          Zip: "20537"
          LastModifiedBy: xx
          Description: Hauptsitz
          AccountId: "100800000000003"
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          LastModified: 2000-01-23T04:56:07.000+00:00
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          Id: "101000000000001"
          AddressType: BillingAddress
          Name1: Poldi Mayr
          Name2: ""
        StandardAddress:
          CountryId: 1013D
          Zip: "20537"
          LastModifiedBy: xx
          Description: Hauptsitz
          AccountId: "100800000000003"
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          LastModified: 2000-01-23T04:56:07.000+00:00
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          Id: "101000000000001"
          AddressType: BillingAddress
          Name1: Poldi Mayr
          Name2: ""
        CollectiveAccount: "1400"
        OutputToAdress: StandardAdress
        PaymentType: S/Ü
        TaxNumber: ""
        IsIbanVerified: true
        VATId: ""
        AccountHolder: AccountHolder
        TermOfPayment: N7
        TermOfPaymentId: 1007N7
        CreditLimit: 0.0
        AccountNumber: 18888.0
        DunningAddress:
          CountryId: 1013D
          Zip: "20537"
          LastModifiedBy: xx
          Description: Hauptsitz
          AccountId: "100800000000003"
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          LastModified: 2000-01-23T04:56:07.000+00:00
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          Id: "101000000000001"
          AddressType: BillingAddress
          Name1: Poldi Mayr
          Name2: ""
        DirectDebitType: STD
        AssignedReceivables: false
      properties:
        Id:
          description: Id des Kontos (technischer Schlüssel)
          example: "100800000000001"
          nullable: true
          type: string
        OutputToAdress:
          description: Ausgabe auf welche Adresse
          enum:
          - StandardAdress
          - DeliveryAdress
          - BillingAdress
          - ExtraAdress
          example: StandardAdress
          nullable: true
          type: string
        AccountNumber:
          description: Kontonummer (Ordnungsbegriff)
          example: 18888.0
          nullable: true
          type: number
        Note:
          description: Notiz
          example: ""
          maxLength: 2000
          nullable: true
          type: string
        StandardAddress:
          $ref: '#/components/schemas/DebtorAddressGet'
        DeliveryAddress:
          $ref: '#/components/schemas/DebtorAddressGet'
        BillingAddress:
          $ref: '#/components/schemas/DebtorAddressGet'
        Description:
          description: Bezeichnung
          example: Verkauf im Hause
          maxLength: 50
          nullable: true
          type: string
        ShortDescription:
          description: Kurzbezeichnung
          example: INHAUS
          maxLength: 15
          nullable: true
          type: string
        ShowNote:
          description: Notiz beim Buchen anzeigen
          example: false
          nullable: true
          type: boolean
        Country:
          description: Land (Ordnungsbegriff)
          example: D
          nullable: true
          type: string
        CountryId:
          description: |
            Id des Landes (technischer Schlüssel) Ist bei Country ein Wert angegeben, wird dieser zum Identifizieren des Landes verwendet und der Wert bei CountryId ignoriert.
          example: 1013D
          nullable: true
          type: string
        VATId:
          description: USt.-IdNr. (Wert ist für Einmalkonten nicht gültig und wird
            ignoriert)
          example: ""
          maxLength: 15
          nullable: true
          type: string
        TaxNumber:
          description: Steuernummer
          example: ""
          maxLength: 20
          nullable: true
          type: string
        TermOfPayment:
          description: Zahlungsbedingung (Ordnungsbegriff)
          example: N7
          nullable: true
          type: string
        TermOfPaymentId:
          description: Id der Zahlungsbedingung (technischer Schlüssel)
          example: 1007N7
          nullable: true
          type: string
        VendorNumber:
          description: Lieferantennummer (Wert ist für Einmalkonten nicht gültig und
            wird ignoriert)
          example: ""
          maxLength: 35
          nullable: true
          type: string
        CreditLimit:
          description: Kreditlimit (Wert ist für Einmalkonten nicht gültig und wird
            ignoriert)
          example: 0.0
          nullable: true
          type: number
        CollectiveAccount:
          description: Sammelkonto (Ordnungsbegriff)
          example: "1400"
          nullable: true
          type: string
        CollectiveAccountId:
          description: Id des Sammelkontos (technischer Schlüssel)
          example: "103200000000001"
          nullable: true
          type: string
        AssignedReceivables:
          description: |
            Forderungen abgetreten. Vorhandene Offene Posten werden nicht automatisch auf zediert bzw. nicht zediert gesetzt.
          example: false
          nullable: true
          type: boolean
        AssignedReceivablesRemark:
          description: Zessionsvermerk
          example: ""
          maxLength: 100
          nullable: true
          type: string
        AssignedAllReceivables:
          description: Forderungen auch für zukünftige Offene Posten abgetreten
          example: false
          nullable: true
          type: boolean
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          example: false
          nullable: true
          type: boolean
        OneTimeVendor:
          description: Einmalkunde
          example: true
          nullable: true
          type: boolean
        AccountNumberDatev:
          description: DATEV Kontonummer (Nur mit Erweiterungsmodul DATEV Datei-Schnittstelle)
          example: 18888.0
          nullable: true
          type: number
        WithDRD:
          description: Konto beim DRD-Export an Creditreform berücksichtigen
          example: true
          nullable: true
          type: boolean
        AllowedForDirectDebit:
          description: |
            Lastschrift erlaubt (Wert ist für Einmalkonten nicht gültig und wird ignoriert) Vorhandene Offene Posten werden nicht automatisch im Lastschriftlauf berücksichtigt, wenn die Lastschrift aktiviert wird.
          example: false
          nullable: true
          type: boolean
        DirectDebitType:
          description: Lastschrifttyp (Ordnungsbegriff) (Wert ist für Einmalkonten
            nicht gültig und wird ignoriert)
          example: STD
          nullable: true
          type: string
        DirectDebitTypeId:
          description: Id des Lastschrifttyps (technischer Schlüssel) (Wert ist für
            Einmalkonten nicht gültig und wird ignoriert)
          example: "238200000000001"
          nullable: true
          type: string
        TypeOfDirectDebit:
          description: Lastschriftverfahren (Wert ist für Einmalkonten nicht gültig
            und wird ignoriert)
          enum:
          - NoDirectDebit
          - DirectDebiting
          - DebitOrder
          - SepaBasis
          - SepaBasisEarly
          - SepaCompany
          example: DirectDebiting
          nullable: true
          type: string
        AllowedForPayment:
          description: Zahlung erlaubt
          example: true
          nullable: true
          type: boolean
        PaymentType:
          description: Zahlungstyp (Ordnungsbegriff)
          example: S/Ü
          nullable: true
          type: string
        PaymentTypeId:
          description: Id des Zahlungstyps (technischer Schlüssel)
          example: "237000000000002"
          nullable: true
          type: string
        AllowedForDunning:
          description: Mahnung erlaubt (Wert ist für Einmalkonten nicht gültig und
            wird ignoriert)
          example: true
          nullable: true
          type: boolean
        DunningType:
          description: Mahnungstyp (Ordnungsbegriff) (Wert ist für Einmalkonten nicht
            gültig und wird ignoriert)
          example: MS3
          nullable: true
          type: string
        DunningTypeId:
          description: Id des Mahnungstyps (technischer Schlüssel) (Wert ist für Einmalkonten
            nicht gültig und wird ignoriert)
          example: "201200000000003"
          nullable: true
          type: string
        DunningAddress:
          $ref: '#/components/schemas/DebtorAddressGet'
        IBAN:
          description: IBAN (Wert ist für Einmalkonten nicht gültig und wird ignoriert)
          maxLength: 34
          nullable: true
          type: string
          example: null
        IsIbanVerified:
          description: |
            IBAN ist korrekt (Wert ist für Einmalkonten nicht gültig und wird ignoriert)  Sie aktivieren das Kontrollkästchen 'IBAN ist korrekt', wenn Sie dies anhand Ihrer Unterlagen geprüft und bestätigt haben.
          example: true
          nullable: true
          type: boolean
        Bank:
          description: Bank (Ordnungsbegriff) (Wert ist für Einmalkonten nicht gültig
            und wird ignoriert)
          nullable: true
          type: string
          example: null
        BankId:
          description: Id der Bank (technischer Schlüssel) (Wert ist für Einmalkonten
            nicht gültig und wird ignoriert)
          nullable: true
          type: string
          example: null
        BankAccountNumber:
          description: Kontonummer der Bank (Wert ist für Einmalkonten nicht gültig
            und wird ignoriert)
          maxLength: 35
          nullable: true
          type: string
          example: null
        AccountHolder:
          description: Kontoinhaber (Wert ist für Einmalkonten nicht gültig und wird
            ignoriert)
          maxLength: 70
          nullable: true
          type: string
          example: null
        ReservedContraAccount:
          description: Kontonummer des vorbesetzten Gegenkontos (Ordnungsbegriff)
          example: "8400"
          nullable: true
          type: string
        BalanceConfirmationType:
          description: Saldenbestätigungstyp (Ordnungsbegriff) (Wert ist für Einmalkonten
            nicht gültig und wird ignoriert)
          example: STD
          nullable: true
          type: string
        BalanceConfirmationTypeId:
          description: Id des Saldenbestätigungstyp (technischer Schlüssel) (Wert
            ist für Einmalkonten nicht gültig und wird ignoriert)
          example: "243700000000001"
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
      title: DebtorGet
      type: object
    DebtorPost:
      allOf:
      - $ref: '#/components/schemas/DebtorPut'
      - $ref: '#/components/schemas/DebtorPostExtendedProperties'
      description: Enthält die Daten eines Kundenkontos für POST-Befehl
      example:
        AssignedReceivablesRemark: ""
        AllowedForDunning: true
        Description: Verkauf im Hause
        NoLongerPostable: false
        Bank: Bank
        DeliveryAddress:
          CountryId: 1013D
          Zip: "20537"
          Description: Hauptsitz
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          AddressType: BillingAddress
          Name1: Poldi Mayr
          Name2: ""
        VendorNumber: ""
        ShowNote: false
        UserDefinedFields:
        - null
        - null
        TypeOfDirectDebit: DirectDebiting
        ShortDescription: INHAUS
        BillingAddress:
          CountryId: 1013D
          Zip: "20537"
          Description: Hauptsitz
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          AddressType: BillingAddress
          Name1: Poldi Mayr
          Name2: ""
        StandardAddress:
          CountryId: 1013D
          Zip: "20537"
          Description: Hauptsitz
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          AddressType: BillingAddress
          Name1: Poldi Mayr
          Name2: ""
        AssignedAllReceivables: false
        CollectiveAccount: "1400"
        DirectDebitTypeId: "238200000000001"
        PaymentType: S/Ü
        TaxNumber: ""
        DunningType: MS3
        PaymentTypeId: "237000000000002"
        DunningTypeId: "201200000000003"
        IsIbanVerified: true
        VATId: ""
        AccountHolder: AccountHolder
        ReservedContraAccount: "8400"
        TermOfPayment: N7
        CountryId: 1013D
        IBAN: IBAN
        TermOfPaymentId: 1007N7
        CreditLimit: 0.0
        BalanceConfirmationType: STD
        WithDRD: true
        AccountNumber: 18888.0
        AllowedForPayment: true
        BalanceConfirmationTypeId: "243700000000001"
        DunningAddress:
          CountryId: 1013D
          Zip: "20537"
          Description: Hauptsitz
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          AddressType: BillingAddress
          Name1: Poldi Mayr
          Name2: ""
        CollectiveAccountId: "103200000000001"
        Note: ""
        DirectDebitType: STD
        Country: D
        AssignedReceivables: false
        OneTimeVendor: true
        AccountNumberDatev: 18888.0
        AllowedForDirectDebit: false
        BankId: BankId
        BankAccountNumber: BankAccountNumber
      title: DebtorPost
      type: object
    DebtorPut:
      description: Enthält die Daten eines Kundenkontos für PUT-Befehl
      example:
        AssignedReceivablesRemark: ""
        AllowedForDunning: true
        Description: Verkauf im Hause
        NoLongerPostable: false
        Bank: Bank
        DeliveryAddress:
          CountryId: 1013D
          Zip: "20537"
          Description: Hauptsitz
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          AddressType: BillingAddress
          Name1: Poldi Mayr
          Name2: ""
        VendorNumber: ""
        ShowNote: false
        UserDefinedFields:
        - null
        - null
        TypeOfDirectDebit: DirectDebiting
        ShortDescription: INHAUS
        BillingAddress:
          CountryId: 1013D
          Zip: "20537"
          Description: Hauptsitz
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          AddressType: BillingAddress
          Name1: Poldi Mayr
          Name2: ""
        StandardAddress:
          CountryId: 1013D
          Zip: "20537"
          Description: Hauptsitz
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          AddressType: BillingAddress
          Name1: Poldi Mayr
          Name2: ""
        AssignedAllReceivables: false
        CollectiveAccount: "1400"
        DirectDebitTypeId: "238200000000001"
        PaymentType: S/Ü
        TaxNumber: ""
        DunningType: MS3
        PaymentTypeId: "237000000000002"
        DunningTypeId: "201200000000003"
        IsIbanVerified: true
        VATId: ""
        AccountHolder: AccountHolder
        ReservedContraAccount: "8400"
        TermOfPayment: N7
        CountryId: 1013D
        IBAN: IBAN
        TermOfPaymentId: 1007N7
        CreditLimit: 0.0
        BalanceConfirmationType: STD
        WithDRD: true
        AllowedForPayment: true
        BalanceConfirmationTypeId: "243700000000001"
        DunningAddress:
          CountryId: 1013D
          Zip: "20537"
          Description: Hauptsitz
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          AddressType: BillingAddress
          Name1: Poldi Mayr
          Name2: ""
        CollectiveAccountId: "103200000000001"
        DirectDebitType: STD
        Country: D
        AssignedReceivables: false
        OneTimeVendor: true
        AccountNumberDatev: 18888.0
        AllowedForDirectDebit: false
        BankId: BankId
        BankAccountNumber: BankAccountNumber
      properties:
        StandardAddress:
          $ref: '#/components/schemas/DebtorAddressPutPost'
        DeliveryAddress:
          $ref: '#/components/schemas/DebtorAddressPutPost'
        BillingAddress:
          $ref: '#/components/schemas/DebtorAddressPutPost'
        Description:
          description: Bezeichnung
          example: Verkauf im Hause
          maxLength: 50
          nullable: true
          type: string
        ShortDescription:
          description: Kurzbezeichnung
          example: INHAUS
          maxLength: 15
          nullable: true
          type: string
        ShowNote:
          description: Notiz beim Buchen anzeigen
          example: false
          nullable: true
          type: boolean
        Country:
          description: Land (Ordnungsbegriff)
          example: D
          nullable: true
          type: string
        CountryId:
          description: |
            Id des Landes (technischer Schlüssel) Ist bei Country ein Wert angegeben, wird dieser zum Identifizieren des Landes verwendet und der Wert bei CountryId ignoriert.
          example: 1013D
          nullable: true
          type: string
        VATId:
          description: USt.-IdNr. (Wert ist für Einmalkonten nicht gültig und wird
            ignoriert)
          example: ""
          maxLength: 15
          nullable: true
          type: string
        TaxNumber:
          description: Steuernummer
          example: ""
          maxLength: 20
          nullable: true
          type: string
        TermOfPayment:
          description: Zahlungsbedingung (Ordnungsbegriff)
          example: N7
          nullable: true
          type: string
        TermOfPaymentId:
          description: Id der Zahlungsbedingung (technischer Schlüssel)
          example: 1007N7
          nullable: true
          type: string
        VendorNumber:
          description: Lieferantennummer (Wert ist für Einmalkonten nicht gültig und
            wird ignoriert)
          example: ""
          maxLength: 35
          nullable: true
          type: string
        CreditLimit:
          description: Kreditlimit (Wert ist für Einmalkonten nicht gültig und wird
            ignoriert)
          example: 0.0
          nullable: true
          type: number
        CollectiveAccount:
          description: Sammelkonto (Ordnungsbegriff)
          example: "1400"
          nullable: true
          type: string
        CollectiveAccountId:
          description: Id des Sammelkontos (technischer Schlüssel)
          example: "103200000000001"
          nullable: true
          type: string
        AssignedReceivables:
          description: |
            Forderungen abgetreten. Vorhandene Offene Posten werden nicht automatisch auf zediert bzw. nicht zediert gesetzt.
          example: false
          nullable: true
          type: boolean
        AssignedReceivablesRemark:
          description: Zessionsvermerk
          example: ""
          maxLength: 100
          nullable: true
          type: string
        AssignedAllReceivables:
          description: Forderungen auch für zukünftige Offene Posten abgetreten
          example: false
          nullable: true
          type: boolean
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          example: false
          nullable: true
          type: boolean
        OneTimeVendor:
          description: Einmalkunde
          example: true
          nullable: true
          type: boolean
        AccountNumberDatev:
          description: DATEV Kontonummer (Nur mit Erweiterungsmodul DATEV Datei-Schnittstelle)
          example: 18888.0
          nullable: true
          type: number
        WithDRD:
          description: Konto beim DRD-Export an Creditreform berücksichtigen
          example: true
          nullable: true
          type: boolean
        AllowedForDirectDebit:
          description: |
            Lastschrift erlaubt (Wert ist für Einmalkonten nicht gültig und wird ignoriert) Vorhandene Offene Posten werden nicht automatisch im Lastschriftlauf berücksichtigt, wenn die Lastschrift aktiviert wird.
          example: false
          nullable: true
          type: boolean
        DirectDebitType:
          description: Lastschrifttyp (Ordnungsbegriff) (Wert ist für Einmalkonten
            nicht gültig und wird ignoriert)
          example: STD
          nullable: true
          type: string
        DirectDebitTypeId:
          description: Id des Lastschrifttyps (technischer Schlüssel) (Wert ist für
            Einmalkonten nicht gültig und wird ignoriert)
          example: "238200000000001"
          nullable: true
          type: string
        TypeOfDirectDebit:
          description: Lastschriftverfahren (Wert ist für Einmalkonten nicht gültig
            und wird ignoriert)
          enum:
          - NoDirectDebit
          - DirectDebiting
          - DebitOrder
          - SepaBasis
          - SepaBasisEarly
          - SepaCompany
          example: DirectDebiting
          nullable: true
          type: string
        AllowedForPayment:
          description: Zahlung erlaubt
          example: true
          nullable: true
          type: boolean
        PaymentType:
          description: Zahlungstyp (Ordnungsbegriff)
          example: S/Ü
          nullable: true
          type: string
        PaymentTypeId:
          description: Id des Zahlungstyps (technischer Schlüssel)
          example: "237000000000002"
          nullable: true
          type: string
        AllowedForDunning:
          description: Mahnung erlaubt (Wert ist für Einmalkonten nicht gültig und
            wird ignoriert)
          example: true
          nullable: true
          type: boolean
        DunningType:
          description: Mahnungstyp (Ordnungsbegriff) (Wert ist für Einmalkonten nicht
            gültig und wird ignoriert)
          example: MS3
          nullable: true
          type: string
        DunningTypeId:
          description: Id des Mahnungstyps (technischer Schlüssel) (Wert ist für Einmalkonten
            nicht gültig und wird ignoriert)
          example: "201200000000003"
          nullable: true
          type: string
        DunningAddress:
          $ref: '#/components/schemas/DebtorAddressPutPost'
        IBAN:
          description: IBAN (Wert ist für Einmalkonten nicht gültig und wird ignoriert)
          maxLength: 34
          nullable: true
          type: string
          example: null
        IsIbanVerified:
          description: |
            IBAN ist korrekt (Wert ist für Einmalkonten nicht gültig und wird ignoriert)  Sie aktivieren das Kontrollkästchen 'IBAN ist korrekt', wenn Sie dies anhand Ihrer Unterlagen geprüft und bestätigt haben.
          example: true
          nullable: true
          type: boolean
        Bank:
          description: Bank (Ordnungsbegriff) (Wert ist für Einmalkonten nicht gültig
            und wird ignoriert)
          nullable: true
          type: string
          example: null
        BankId:
          description: Id der Bank (technischer Schlüssel) (Wert ist für Einmalkonten
            nicht gültig und wird ignoriert)
          nullable: true
          type: string
          example: null
        BankAccountNumber:
          description: Kontonummer der Bank (Wert ist für Einmalkonten nicht gültig
            und wird ignoriert)
          maxLength: 35
          nullable: true
          type: string
          example: null
        AccountHolder:
          description: Kontoinhaber (Wert ist für Einmalkonten nicht gültig und wird
            ignoriert)
          maxLength: 70
          nullable: true
          type: string
          example: null
        ReservedContraAccount:
          description: Kontonummer des vorbesetzten Gegenkontos (Ordnungsbegriff)
          example: "8400"
          nullable: true
          type: string
        BalanceConfirmationType:
          description: Saldenbestätigungstyp (Ordnungsbegriff) (Wert ist für Einmalkonten
            nicht gültig und wird ignoriert)
          example: STD
          nullable: true
          type: string
        BalanceConfirmationTypeId:
          description: Id des Saldenbestätigungstyp (technischer Schlüssel) (Wert
            ist für Einmalkonten nicht gültig und wird ignoriert)
          example: "243700000000001"
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
      title: DebtorPut
      type: object
    DebtorPostExtendedProperties:
      description: Enthält zusätzliche Felder für POST-Befehl eines Kundenkontos
      properties:
        AccountNumber:
          description: Kontonummer (Ordnungsbegriff)
          example: 18888.0
          nullable: true
          type: number
        Note:
          description: Notiz
          example: ""
          maxLength: 2000
          nullable: true
          type: string
      title: DebtorPostExtendedProperties
      type: object
    SepaMandateGet:
      allOf:
      - $ref: '#/components/schemas/SepaMandatePutPost'
      - $ref: '#/components/schemas/SepaMandateGetExtendedProperties'
      description: Enthält die Daten eines SEPA-Mandats für GET-Befehl
      example:
        Status: Recorded
        LastModified: 2000-01-23T04:56:07.000+00:00
        LastModifiedBy: LastModifiedBy
        AccountId: AccountId
        MandateReference: 10001-1001
        UseAsPreset: false
        PaymentType: RecurringDebit
        LastDebit: 2025-06-15
        Id: Id
        DateOfSepaMandate: 2025-03-30
        ValidThrough: 2028-03-30
      title: SepaMandate
      type: object
    SepaMandatePutPost:
      description: Enthält die Daten eines SEPA-Mandats für PUT-Befehl
      example:
        Status: Recorded
        MandateReference: 10001-1001
        UseAsPreset: false
        PaymentType: RecurringDebit
        LastDebit: 2025-06-15
        DateOfSepaMandate: 2025-03-30
        ValidThrough: 2028-03-30
      properties:
        MandateReference:
          description: Mandatsreferenz (Ordnungsbegriff)
          example: 10001-1001
          maxLength: 35
          nullable: true
          type: string
        Status:
          default: Recorded
          description: Status
          enum:
          - Active
          - Recorded
          - Cancelled
          - Locked
          - Outdated
          - Concluded
          example: Recorded
          nullable: true
          type: string
        PaymentType:
          default: RecurringDebit
          description: Zahlungsart
          enum:
          - OneTimeDebit
          - RecurringDebit
          example: RecurringDebit
          nullable: true
          type: string
        DateOfSepaMandate:
          description: Datum SEPA-Mandat
          example: 2025-03-30
          format: date
          nullable: true
          type: string
        ValidThrough:
          description: Gültig bis
          example: 2028-03-30
          format: date
          nullable: true
          type: string
        LastDebit:
          description: Letzter Einzug
          example: 2025-06-15
          format: date
          nullable: true
          type: string
        UseAsPreset:
          default: false
          description: |
            Als Vorbesetzung beim Anlegen von Offenen Posten verwenden. Für schon bestehende Offene Posten muss das Mandat selbst eingetragen werden.
          example: false
          nullable: true
          type: boolean
      title: SepaMandatePut
      type: object
    SepaMandateGetExtendedProperties:
      description: Enthält zusätzliche Felder für GET-Befehl für ein SEPA-Mandat
      properties:
        Id:
          description: Id des SEPA-Mandats (technischer Schlüssel)
          nullable: true
          type: string
          example: null
        AccountId:
          description: "Id des Kontos (technischer Schlüssel, read-only)"
          nullable: true
          type: string
          example: null
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
          example: null
        LastModifiedBy:
          description: Letzte Änderung durch
          nullable: true
          type: string
          example: null
      title: SepaMandateGetExtendedProperties
      type: object
    DebtorAddressGet:
      allOf:
      - $ref: '#/components/schemas/DebtorAddressPutPost'
      - $ref: '#/components/schemas/DebtorAddressGetExtendedProperties'
      description: Enthält die Daten einer Kundenadresse für GET-Befehl
      example:
        CountryId: 1013D
        Zip: "20537"
        LastModifiedBy: xx
        Description: Hauptsitz
        AccountId: "100800000000003"
        Website: ""
        City: Hamburg
        EMail: ""
        Salutation: Herr
        Name3: ""
        LastModified: 2000-01-23T04:56:07.000+00:00
        StreetOrPOBox: Eiffestraße 2
        AdditionalText1: ""
        AdditionalText3: ""
        AdditionalText2: ""
        FaxNumber: ""
        Country: D
        PhoneNumber: ""
        Id: "101000000000001"
        AddressType: BillingAddress
        Name1: Poldi Mayr
        Name2: ""
      title: DebtorAddressGet
      type: object
    DebtorAddressPutPost:
      description: Enthält die Daten einer Kundenadresse für POST- und PUT-Befehl
      example:
        CountryId: 1013D
        Zip: "20537"
        Description: Hauptsitz
        Website: ""
        City: Hamburg
        EMail: ""
        Salutation: Herr
        Name3: ""
        StreetOrPOBox: Eiffestraße 2
        AdditionalText1: ""
        AdditionalText3: ""
        AdditionalText2: ""
        FaxNumber: ""
        Country: D
        PhoneNumber: ""
        AddressType: BillingAddress
        Name1: Poldi Mayr
        Name2: ""
      properties:
        AddressType:
          default: ExtraAddress
          description: |
            Adressart
            Wenn eine andere Adressart als Weitere Adresse angegeben ist und schon eine andere Adresse mit dieser Adressart existiert,
            wird die Adressart der anderen Adresse auf Weitere Adresse gesetzt, da Standardadresse, Lieferadresse und Rechnungsadresse
            jeweils eindeutig sein müssen.
            - StandardAddress -> Standardadresse
            - DeliveryAddress -> Lieferadresse
            - BillingAddress -> Rechnungsadresse
            - ExtraAddress -> Weitere Adresse
          enum:
          - StandardAddress
          - DeliveryAddress
          - BillingAddress
          - ExtraAddress
          example: BillingAddress
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: Hauptsitz
          maxLength: 30
          nullable: true
          type: string
        Salutation:
          description: Anrede
          example: Herr
          maxLength: 50
          nullable: true
          type: string
        Name1:
          description: Name 1
          example: Poldi Mayr
          maxLength: 50
          nullable: true
          type: string
        Name2:
          description: Name 2
          example: ""
          maxLength: 50
          nullable: true
          type: string
        Name3:
          description: Name 3
          example: ""
          maxLength: 50
          nullable: true
          type: string
        StreetOrPOBox:
          description: Straße/Postfach
          example: Eiffestraße 2
          maxLength: 50
          nullable: true
          type: string
        Country:
          description: Land (Ordnungsbegriff)
          example: D
          nullable: true
          type: string
        CountryId:
          description: |
            Id des Landes (technischer Schlüssel) Ist bei Country ein Wert angegeben, wird dieser zum Identifizieren des Landes verwendet und der Wert bei CountryId ignoriert.
          example: 1013D
          nullable: true
          type: string
        Zip:
          description: Postleitzahl
          example: "20537"
          maxLength: 10
          nullable: true
          type: string
        City:
          description: Ort
          example: Hamburg
          maxLength: 50
          nullable: true
          type: string
        AdditionalText1:
          description: Zusatz 1
          example: ""
          maxLength: 50
          nullable: true
          type: string
        AdditionalText2:
          description: Zusatz 2
          example: ""
          maxLength: 50
          nullable: true
          type: string
        AdditionalText3:
          description: Zusatz 3
          example: ""
          maxLength: 50
          nullable: true
          type: string
        PhoneNumber:
          description: Telefonnummer
          example: ""
          maxLength: 60
          nullable: true
          type: string
        FaxNumber:
          description: Telefaxnummer
          example: ""
          maxLength: 60
          nullable: true
          type: string
        EMail:
          description: E-Mail-Adresse
          example: ""
          maxLength: 255
          nullable: true
          type: string
        Website:
          description: URL der Homepage
          example: ""
          maxLength: 100
          nullable: true
          type: string
      title: DebtorAddressPutPost
      type: object
    DebtorAddressGetExtendedProperties:
      description: Enthält zusätzliche Felder für GET-Befehl einer Kundenadresse
      properties:
        Id:
          description: Id der Adresse (technischer Schlüssel)
          example: "101000000000001"
          nullable: true
          type: string
        AccountId:
          description: Id des Kundenkontos (technischer Schlüssel)
          example: "100800000000003"
          nullable: true
          type: string
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: xx
          nullable: true
          type: string
      title: DebtorAddressGetExtendedProperties
      type: object
    InvestmentAccount:
      description: Enthält die Daten eines Anlagekontos
      example:
        TaxCodeId: 2303VVSS
        LastModifiedBy: fb
        Description: EDV-Software
        PresetCostUnitId: PresetCostUnitId
        NoLongerPostable: false
        TypeOfWriteDowns: TypeOfWriteDowns
        InputTax: PresetTaxKey
        ShowNote: false
        RetirementAccount: RetirementAccount
        UserDefinedFields:
        - null
        - null
        Assignment: AssetAccount
        LastModified: 2000-01-23T04:56:07.000+00:00
        PresetCostUnit: PresetCostUnit
        Input: Amount
        EitherOr: false
        CostCenter: NoCostCenter
        TaxCode: VVSS
        RetirementAccountId: RetirementAccountId
        AccountForWriteDowns: "4830"
        CostUnit: NoCostUnit
        WithFixedAssets: true
        Retirement: NoRetirement
        AccountForWriteDownsId: "102800000000096"
        TypeOfTax: InputTax
        QuantityDescription: ""
        PurposeOfAccount: EDV-Software
        DatevAutomaticAccount: false
        AccountNumber: 27.0
        TypeOfWriteDownsId: TypeOfWriteDownsId
        DecimalPlaces: 0
        PresetCostCenter: PresetCostCenter
        WithCollectivePosting: false
        Note: ""
        PresetCostCenterId: PresetCostCenterId
        BalanceControl: Without
        Id: "102500000000001"
        AccountNumberDatev: 27.0
      properties:
        Id:
          description: Id des Kontos (technischer Schlüssel)
          example: "102500000000001"
          nullable: true
          type: string
        AccountNumber:
          description: Kontonummer (Ordnungsbegriff)
          example: 27.0
          nullable: true
          type: number
        Description:
          description: Bezeichnung
          example: EDV-Software
          nullable: true
          type: string
        Note:
          description: Notiz
          example: ""
          nullable: true
          type: string
        ShowNote:
          description: Notiz beim Buchen anzeigen
          example: false
          nullable: true
          type: boolean
        PurposeOfAccount:
          description: Kontozweck
          example: EDV-Software
          nullable: true
          type: string
        Assignment:
          description: Zuordnung
          enum:
          - AssetAccount
          - LiabilityAccount
          example: AssetAccount
          nullable: true
          type: string
        BalanceControl:
          description: Saldenprüfung
          enum:
          - Without
          - OnlyDebitAllowed
          - OnlyCreditAllowed
          example: Without
          nullable: true
          type: string
        Input:
          description: Eingabe
          enum:
          - Amount
          - AmountQuantity
          example: Amount
          nullable: true
          type: string
        QuantityDescription:
          description: Mengenbezeichnung
          example: ""
          nullable: true
          type: string
        DecimalPlaces:
          description: Nachkommastellen
          example: 0
          nullable: true
          type: integer
        CostCenter:
          description: Kostenstelle
          enum:
          - NoCostCenter
          - CanCostCenter
          - MustCostCenter
          example: NoCostCenter
          nullable: true
          type: string
        CostUnit:
          description: Kostenträger
          enum:
          - NoCostUnit
          - CanCostUnit
          - MustCostUnit
          example: NoCostUnit
          nullable: true
          type: string
        EitherOr:
          description: Entweder.. oder...
          example: false
          nullable: true
          type: boolean
        PresetCostCenter:
          description: Vorbesetzung Kostenstelle (Ordnungsbegriff)
          nullable: true
          type: string
          example: null
        PresetCostCenterId:
          description: Id der Vorbesetzung Kostenstelle (technischer Schlüssel)
          nullable: true
          type: string
          example: null
        PresetCostUnit:
          description: Vorbesetzung Kostenträger (Ordnungsbegriff)
          nullable: true
          type: string
          example: null
        PresetCostUnitId:
          description: Id der Vorbesetzung Kostenträger (technischer Schlüssel)
          nullable: true
          type: string
          example: null
        WithFixedAssets:
          description: Mit Anlagen
          example: true
          nullable: true
          type: boolean
        WithCollectivePosting:
          description: Mit Sammelbuchung
          example: false
          nullable: true
          type: boolean
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          example: false
          nullable: true
          type: boolean
        AccountNumberDatev:
          description: DATEV Kontonummer
          example: 27.0
          nullable: true
          type: number
        TypeOfTax:
          description: Steuerart
          enum:
          - NoTax
          - ValueAddedTax
          - InputTax
          - TurnoverTax
          - TaxFreeEu
          - EuOtherServices
          example: InputTax
          nullable: true
          type: string
        InputTax:
          description: Steuereingabe
          enum:
          - FixedTaxKey
          - PresetTaxKey
          - Free
          example: PresetTaxKey
          nullable: true
          type: string
        TaxCode:
          description: Steuerkennzeichen (Ordnungsbegriff)
          example: VVSS
          nullable: true
          type: string
        TaxCodeId:
          description: Id des Steuerkennzeichens (technischer Schlüssel)
          example: 2303VVSS
          nullable: true
          type: string
        DatevAutomaticAccount:
          description: DATEV-Automatikkonto
          example: false
          nullable: true
          type: boolean
        Retirement:
          description: Ausbuchung
          enum:
          - NoRetirement
          - UseThisAccount
          - UseAccountFromTaxKey
          - FixedAccount
          example: NoRetirement
          nullable: true
          type: string
        RetirementAccount:
          description: Ausbuchungskonto (Ordnungsbegriff)
          nullable: true
          type: string
          example: null
        RetirementAccountId:
          description: Id des Ausbuchungskontos (technischer Schlüssel)
          nullable: true
          type: string
          example: null
        AccountForWriteDowns:
          description: Abschreibungskonto (Ordnungsbegriff)
          example: "4830"
          nullable: true
          type: string
        AccountForWriteDownsId:
          description: Id des Abschreibungskonto (technischer Schlüssel)
          example: "102800000000096"
          nullable: true
          type: string
        TypeOfWriteDowns:
          description: Abschreibungsmethode (Ordnungsbegriff)
          nullable: true
          type: string
          example: null
        TypeOfWriteDownsId:
          description: Id der Abschreibungsmethode (technischer Schlüssel)
          nullable: true
          type: string
          example: null
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
      title: InvestmentAccount
      type: object
    OpeningBalanceAccount:
      description: Enthält die Daten eines Eröffnungskontos
      example:
        LastModifiedBy: fb
        Description: Saldenvorträge Sachkonten
        NoLongerPostable: false
        ShowNote: false
        PurposeOfAccount: Saldenvorträge Sachkonten
        UserDefinedFields:
        - null
        - null
        AccountNumber: 9001.0
        LastModified: 2000-01-23T04:56:07.000+00:00
        PermittedForGeneralLedgerAccounts: true
        PermittedForDebtors: false
        Note: ""
        Id: "102700000000001"
        PermittedForCreditors: false
        AccountNumberDatev: 9001.0
      properties:
        Id:
          description: Id des Kontos (technischer Schlüssel)
          example: "102700000000001"
          nullable: true
          type: string
        AccountNumber:
          description: Kontonummer (Ordnungsbegriff)
          example: 9001.0
          nullable: true
          type: number
        Description:
          description: Bezeichnung
          example: Saldenvorträge Sachkonten
          nullable: true
          type: string
        Note:
          description: Notiz
          example: ""
          nullable: true
          type: string
        ShowNote:
          description: Notiz beim Buchen anzeigen
          example: false
          nullable: true
          type: boolean
        PurposeOfAccount:
          description: Kontozweck
          example: Saldenvorträge Sachkonten
          nullable: true
          type: string
        PermittedForGeneralLedgerAccounts:
          description: Zulässig für Sachkonten
          example: true
          nullable: true
          type: boolean
        PermittedForDebtors:
          description: Zulässig für Kunden
          example: false
          nullable: true
          type: boolean
        PermittedForCreditors:
          description: Zulässig für Lieferanten
          example: false
          nullable: true
          type: boolean
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          example: false
          nullable: true
          type: boolean
        AccountNumberDatev:
          description: DATEV Kontonummer
          example: 9001.0
          nullable: true
          type: number
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
      title: OpeningBalanceAccount
      type: object
    ProfitLossAccount:
      description: Enthält die Daten eines GuV-Kontos
      example:
        TaxCodeId: 2303VSTF
        LastModifiedBy: fb
        Description: Erhaltene Skonti
        PresetCostUnitId: PresetCostUnitId
        NoLongerPostable: false
        InputTax: PresetTaxKey
        ShowNote: false
        RetirementAccount: RetirementAccount
        UserDefinedFields:
        - null
        - null
        Assignment: RevenueAccount
        LastModified: 2000-01-23T04:56:07.000+00:00
        PresetCostUnit: PresetCostUnit
        Input: Amount
        EitherOr: false
        CostCenter: CanCostCenter
        TaxCode: VSTF
        RetirementAccountId: RetirementAccountId
        CostUnit: CanCostUnit
        Retirement: NoRetirement
        TypeOfTax: InputTax
        QuantityDescription: ""
        PurposeOfAccount: Erhaltene Skonti
        DatevAutomaticAccount: false
        AccountNumber: 3730.0
        DecimalPlaces: 0
        PresetCostCenter: PresetCostCenter
        WithCollectivePosting: false
        Note: ""
        PresetCostCenterId: PresetCostCenterId
        BalanceControl: Without
        Id: "102800000000005"
        AccountNumberDatev: 3730.0
      properties:
        Id:
          description: Id des Kontos (technischer Schlüssel)
          example: "102800000000005"
          nullable: true
          type: string
        AccountNumber:
          description: Kontonummer (Ordnungsbegriff)
          example: 3730.0
          nullable: true
          type: number
        Description:
          description: Bezeichnung
          example: Erhaltene Skonti
          nullable: true
          type: string
        Note:
          description: Notiz
          example: ""
          nullable: true
          type: string
        ShowNote:
          description: Notiz beim Buchen anzeigen
          example: false
          nullable: true
          type: boolean
        PurposeOfAccount:
          description: Kontozweck
          example: Erhaltene Skonti
          nullable: true
          type: string
        Assignment:
          description: Zuordnung
          enum:
          - ExpenseAccount
          - RevenueAccount
          example: RevenueAccount
          nullable: true
          type: string
        BalanceControl:
          description: Saldenprüfung
          enum:
          - Without
          - OnlyDebitAllowed
          - OnlyCreditAllowed
          example: Without
          nullable: true
          type: string
        Input:
          description: Eingabe
          enum:
          - Amount
          - AmountQuantity
          example: Amount
          nullable: true
          type: string
        QuantityDescription:
          description: Mengenbezeichnung
          example: ""
          nullable: true
          type: string
        DecimalPlaces:
          description: Nachkommastellen
          example: 0
          nullable: true
          type: integer
        CostCenter:
          description: Kostenstelle
          enum:
          - NoCostCenter
          - CanCostCenter
          - MustCostCenter
          example: CanCostCenter
          nullable: true
          type: string
        CostUnit:
          description: Kostenträger
          enum:
          - NoCostUnit
          - CanCostUnit
          - MustCostUnit
          example: CanCostUnit
          nullable: true
          type: string
        EitherOr:
          description: Entweder.. oder...
          example: false
          nullable: true
          type: boolean
        PresetCostCenter:
          description: Vorbesetzung Kostenstelle (Ordnungsbegriff)
          nullable: true
          type: string
          example: null
        PresetCostCenterId:
          description: Id der Vorbesetzung Kostenstelle (technischer Schlüssel)
          nullable: true
          type: string
          example: null
        PresetCostUnit:
          description: Vorbesetzung Kostenträger (Ordnungsbegriff)
          nullable: true
          type: string
          example: null
        PresetCostUnitId:
          description: Id der Vorbesetzung Kostenträger (technischer Schlüssel)
          nullable: true
          type: string
          example: null
        WithCollectivePosting:
          description: Mit Sammelbuchung
          example: false
          nullable: true
          type: boolean
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          example: false
          nullable: true
          type: boolean
        AccountNumberDatev:
          description: DATEV Kontonummer
          example: 3730.0
          nullable: true
          type: number
        TypeOfTax:
          description: Steuerart
          enum:
          - NoTax
          - ValueAddedTax
          - InputTax
          - TurnoverTax
          - TaxFreeEu
          - EuOtherServices
          example: InputTax
          nullable: true
          type: string
        InputTax:
          description: Steuereingabe
          enum:
          - FixedTaxKey
          - PresetTaxKey
          - Free
          example: PresetTaxKey
          nullable: true
          type: string
        TaxCode:
          description: Steuerkennzeichen (Ordnungsbegriff)
          example: VSTF
          nullable: true
          type: string
        TaxCodeId:
          description: Id des Steuerkennzeichens (technischer Schlüssel)
          example: 2303VSTF
          nullable: true
          type: string
        DatevAutomaticAccount:
          description: DATEV-Automatikkonto
          example: false
          nullable: true
          type: boolean
        Retirement:
          description: Ausbuchung
          enum:
          - NoRetirement
          - UseThisAccount
          - UseAccountFromTaxKey
          - FixedAccount
          example: NoRetirement
          nullable: true
          type: string
        RetirementAccount:
          description: Ausbuchungskonto (Ordnungsbegriff)
          nullable: true
          type: string
          example: null
        RetirementAccountId:
          description: Id des Ausbuchungskontos (technischer Schlüssel)
          nullable: true
          type: string
          example: null
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
      title: ProfitLossAccount
      type: object
    QuantityAccount:
      description: Enthält die Daten eines Mengenkontos
      example:
        LastModifiedBy: fb
        Description: Verkaufstage
        PresetCostUnitId: PresetCostUnitId
        NoLongerPostable: false
        TypeOfQuantity: Changes
        QuantityDescription: Arbeitsstunden
        ShowNote: true
        PurposeOfAccount: Verkaufstage
        UserDefinedFields:
        - null
        - null
        AccountNumber: 9101.0
        DecimalPlaces: 0
        LastModified: 2000-01-23T04:56:07.000+00:00
        PresetCostUnit: PresetCostUnit
        EitherOr: false
        CostCenter: CanCostCenter
        PresetCostCenter: PresetCostCenter
        Note: Alternativ auf Stellen u. Träger buchen
        PresetCostCenterId: PresetCostCenterId
        Id: "235300000000001"
        CostUnit: CanCostUnit
      properties:
        Id:
          description: Id des Kontos (technischer Schlüssel)
          example: "235300000000001"
          nullable: true
          type: string
        AccountNumber:
          description: Kontonummer (Ordnungsbegriff)
          example: 9101.0
          nullable: true
          type: number
        Description:
          description: Bezeichnung
          example: Verkaufstage
          nullable: true
          type: string
        Note:
          description: Notiz
          example: Alternativ auf Stellen u. Träger buchen
          nullable: true
          type: string
        ShowNote:
          description: Notiz beim Buchen anzeigen
          example: true
          nullable: true
          type: boolean
        PurposeOfAccount:
          description: Kontozweck
          example: Verkaufstage
          nullable: true
          type: string
        TypeOfQuantity:
          description: Erfassung
          enum:
          - Changes
          - AbsoluteValues
          example: Changes
          nullable: true
          type: string
        QuantityDescription:
          description: Mengenbezeichnung
          example: Arbeitsstunden
          nullable: true
          type: string
        DecimalPlaces:
          description: Nachkommastellen
          example: 0
          nullable: true
          type: integer
        CostCenter:
          description: Kostenstelle
          enum:
          - NoCostCenter
          - CanCostCenter
          - MustCostCenter
          example: CanCostCenter
          nullable: true
          type: string
        CostUnit:
          description: Kostenträger
          enum:
          - NoCostUnit
          - CanCostUnit
          - MustCostUnit
          example: CanCostUnit
          nullable: true
          type: string
        EitherOr:
          description: Entweder.. oder...
          example: false
          nullable: true
          type: boolean
        PresetCostCenter:
          description: Vorbesetzung Kostenstelle (Ordnungsbegriff)
          nullable: true
          type: string
          example: null
        PresetCostCenterId:
          description: Id der Vorbesetzung Kostenstelle (technischer Schlüssel)
          nullable: true
          type: string
          example: null
        PresetCostUnit:
          description: Vorbesetzung Kostenträger (Ordnungsbegriff)
          nullable: true
          type: string
          example: null
        PresetCostUnitId:
          description: Id der Vorbesetzung Kostenträger (technischer Schlüssel)
          nullable: true
          type: string
          example: null
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          example: false
          nullable: true
          type: boolean
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
      title: QuantityAccount
      type: object
    TaxAccount:
      description: Enthält die Daten eines Steuerkontos
      example:
        LastModifiedBy: fb
        Description: Aufzuteil. Vorsteuer §§13a/13b USt 19%
        NoLongerPostable: false
        ShowNote: true
        PurposeOfAccount: Aufzuteilende Vorsteuer nach §§ 13a/13b UStG 19 %
        UserDefinedFields:
        - null
        - null
        ChangablePositionElectronicBalanceSheet: true
        AccountNumber: 1569.0
        Assignment: AssetAccount
        LastModified: 2000-01-23T04:56:07.000+00:00
        WithCollectivePosting: false
        Note: Vorläufiges Auffangkonto für nicht abziehbare VSt. Unbedingt auf Aufwandskonto
          umbuchen!!!
        Id: "103100000000001"
        AccountNumberDatev: 1569.0
        OnlyAutomaticPosting: false
      properties:
        Id:
          description: Id des Kontos (technischer Schlüssel)
          example: "103100000000001"
          nullable: true
          type: string
        AccountNumber:
          description: Kontonummer (Ordnungsbegriff)
          example: 1569.0
          nullable: true
          type: number
        Description:
          description: Bezeichnung
          example: Aufzuteil. Vorsteuer §§13a/13b USt 19%
          nullable: true
          type: string
        Note:
          description: Notiz
          example: Vorläufiges Auffangkonto für nicht abziehbare VSt. Unbedingt auf
            Aufwandskonto umbuchen!!!
          nullable: true
          type: string
        ShowNote:
          description: Notiz beim Buchen anzeigen
          example: true
          nullable: true
          type: boolean
        PurposeOfAccount:
          description: Kontozweck
          example: Aufzuteilende Vorsteuer nach §§ 13a/13b UStG 19 %
          nullable: true
          type: string
        Assignment:
          description: Zuordnung
          enum:
          - AssetAccount
          - LiabilityAccount
          example: AssetAccount
          nullable: true
          type: string
        OnlyAutomaticPosting:
          description: Nur automatisch bebuchar
          example: false
          nullable: true
          type: boolean
        WithCollectivePosting:
          description: Mit Sammelbuchung
          example: false
          nullable: true
          type: boolean
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          example: false
          nullable: true
          type: boolean
        ChangablePositionElectronicBalanceSheet:
          description: Konto mit Wechseleigenschaft in E-Bilanz
          nullable: true
          type: boolean
          example: null
        AccountNumberDatev:
          description: DATEV Kontonummer
          example: 1569.0
          nullable: true
          type: number
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
      title: TaxAccount
      type: object
    OpenItem:
      description: |
        Enthält die Daten eines Offenen Postens
        Besonderheit beim PUT: Nicht angegebene Properties werden nicht verändert. Es reicht zum Beispiel aus, nur Id und Text zu senden, dann wird nur der OP-Text des Offenen Postens verändert.
      example:
        BillingAdress:
          CountryId: 1013D
          Zip: "20537"
          LastModifiedBy: xx
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          LastModified: 2000-01-23T04:56:07.000+00:00
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          Name1: Poldi Mayr
          Name2: ""
        AssignedReceivablesRemark: ""
        UserDefinedFields:
        - null
        - null
        Discount1DueDate: 2019-01-04
        LastModified: 2000-01-23T04:56:07.000+00:00
        Instalment: false
        NetAmount: 78180.12
        LastDunningDate: 1800-01-01
        DunningType: ""
        DunningTypeId: ""
        MethodOfPayment: Biweekly
        LastDunningLevel: 0
        IBAN: ""
        ExternalInvoiceNumber: ""
        Discount2Amount: 0.0
        Discount1DueInDays: 0
        DateOfLastInstalment: 2019-01-04
        Discount2DueDate: 2019-01-04
        Discount1DueAmount: 78180.12
        ReferenceAmount: 78180.12
        Note: ""
        Id: "200500000000001"
        DunningAllowed: false
        BankId: ""
        BankAccountNumber: ""
        SepaMandat: ""
        Discount1Amount: 0.0
        LastModifiedBy: fb
        Bank: ""
        BalanceOfOpenItem: 0.0
        SepaMandatId: ""
        Discount2DueAmount: 78180.12
        NetDate: 2019-01-04
        NumberOfInstalments: 0
        Discount2Percentage: 0.0
        DirectDebitAllowed: false
        PaymentType: BanktransferOrCheque
        AccountNumberId: "100900000000027"
        AccountHolder: ""
        TermOfPayment: "N"
        AmountOfInstalment: 0.0
        DateOfFirstInstalment: 2019-01-04
        TermOfPaymentId: 1007N
        OpenItemNumber: 1001.0
        Text: Eingangsrechnung
        Discount1Percentage: 0.0
        Discount2DueInDays: 0
        AccountType: Creditor
        AccountNumber: 70025.0
        AmountOfLastInstalment: 0.0
        NetDays: 0
        AssignedReceivables: false
        ContentiousOpenItem: false
        ReferenceDate: 2019-01-04
        PaymentAllowed: true
      properties:
        Id:
          description: Id des Offenen Postens (technischer Schlüssel)
          example: "200500000000001"
          nullable: true
          type: string
        OpenItemNumber:
          description: OP-Nummer
          example: 1001.0
          nullable: true
          type: number
        Note:
          description: Notiz
          example: ""
          nullable: true
          type: string
        AccountNumberId:
          description: "Id des Kontos (technischer Schlüssel, read-only)"
          example: "100900000000027"
          nullable: true
          type: string
        AccountNumber:
          description: "Konto (Ordnungsbegriff, read-only)"
          example: 70025.0
          nullable: true
          type: number
        AccountType:
          description: Kontoart (read-only)
          enum:
          - Debtor
          - Creditor
          - GeneralLedgerAccount
          example: Creditor
          nullable: true
          type: string
        ExternalInvoiceNumber:
          description: Fremdbelegnummer
          example: ""
          nullable: true
          type: string
        Text:
          description: OP-Text
          example: Eingangsrechnung
          nullable: true
          type: string
        AssignedReceivables:
          description: Forderungen abgetreten
          example: false
          nullable: true
          type: boolean
        AssignedReceivablesRemark:
          description: Zessionsvermerk
          example: ""
          nullable: true
          type: string
        ContentiousOpenItem:
          description: Strittiger OP
          example: false
          nullable: true
          type: boolean
        LastDunningLevel:
          description: Letzte Mahnstufe
          example: 0
          nullable: true
          type: integer
        LastDunningDate:
          description: Letztes Mahndatum
          example: 1800-01-01
          format: date
          nullable: true
          type: string
        DunningType:
          description: Mahnungstyp (Ordnungsbegriff)
          example: ""
          nullable: true
          type: string
        DunningTypeId:
          description: Id des Mahnungstyps (technischer Schlüssel)
          example: ""
          nullable: true
          type: string
        DunningAllowed:
          description: OP im Mahnungslauf berücksichtigen
          example: false
          nullable: true
          type: boolean
        PaymentAllowed:
          description: OP im Zahlungslauf berücksichtigen
          example: true
          nullable: true
          type: boolean
        DirectDebitAllowed:
          description: OP im Lastschriftenlauf berücksichtigen
          example: false
          nullable: true
          type: boolean
        SepaMandatId:
          description: Id des SEPA-Mandats (technischer Schlüssel)
          example: ""
          nullable: true
          type: string
        SepaMandat:
          description: SEPA-Mandat (Ordnungsbegriff)
          example: ""
          nullable: true
          type: string
        PaymentType:
          description: Zahlungsart
          enum:
          - OnlyBanktransfer
          - OnlyCheque
          - BanktransferOrCheque
          - NotDefined
          example: BanktransferOrCheque
          nullable: true
          type: string
        TermOfPayment:
          description: Zahlungsbedingung (Ordnungsbegriff)
          example: "N"
          nullable: true
          type: string
        TermOfPaymentId:
          description: Id der Zahlungsbedingung (technischer Schlüssel)
          example: 1007N
          nullable: true
          type: string
        Instalment:
          description: In Raten
          example: false
          nullable: true
          type: boolean
        ReferenceDate:
          description: Bezugsdatum
          example: 2019-01-04
          format: date
          nullable: true
          type: string
        ReferenceAmount:
          description: Bezugsbetrag (read-only)
          example: 78180.12
          nullable: true
          type: number
        Discount1Percentage:
          description: Skonto 1 Prozent
          example: 0.0
          nullable: true
          type: number
        Discount1Amount:
          description: Skonto 1 Betrag
          example: 0.0
          nullable: true
          type: number
        Discount1DueInDays:
          description: Skonto 1 fällig in Tagen
          example: 0
          nullable: true
          type: integer
        Discount1DueDate:
          description: Skonto 1 fällig bis Datum
          example: 2019-01-04
          format: date
          nullable: true
          type: string
        Discount1DueAmount:
          description: Skonto 1 fälliger Betrag
          example: 78180.12
          nullable: true
          type: number
        Discount2Percentage:
          description: Skonto 2 Prozent
          example: 0.0
          nullable: true
          type: number
        Discount2Amount:
          description: Skonto 2 Betrag
          example: 0.0
          nullable: true
          type: number
        Discount2DueInDays:
          description: Skonto 2 fällig in Tagen
          example: 0
          nullable: true
          type: integer
        Discount2DueDate:
          description: Skonto 2 fällig bis Datum
          example: 2019-01-04
          format: date
          nullable: true
          type: string
        Discount2DueAmount:
          description: Skonto 2 fälliger Betrag
          example: 78180.12
          nullable: true
          type: number
        NetDays:
          description: Netto fällig in Tagen
          example: 0
          nullable: true
          type: integer
        NetDate:
          description: Netto fällig Datum
          example: 2019-01-04
          format: date
          nullable: true
          type: string
        NetAmount:
          description: Nettobetrag (read-only)
          example: 78180.12
          nullable: true
          type: number
        NumberOfInstalments:
          description: Anzahl Raten
          example: 0
          nullable: true
          type: integer
        MethodOfPayment:
          description: Zahlungsweise
          enum:
          - Weekly
          - Biweekly
          - Monthly
          - Quarterly
          - SixMonthly
          - Annual
          - NotDefined
          example: Biweekly
          nullable: true
          type: string
        AmountOfInstalment:
          description: Rate
          example: 0.0
          nullable: true
          type: number
        DateOfFirstInstalment:
          description: Erste Rate
          example: 2019-01-04
          format: date
          nullable: true
          type: string
        AmountOfLastInstalment:
          description: Letzte Rate (read-only)
          example: 0.0
          nullable: true
          type: number
        DateOfLastInstalment:
          description: Datum Letzte Rate (read-only)
          example: 2019-01-04
          format: date
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
        BillingAdress:
          $ref: '#/components/schemas/Address'
        IBAN:
          description: IBAN
          example: ""
          nullable: true
          type: string
        Bank:
          description: Bank (Ordnungsbegriff)
          example: ""
          nullable: true
          type: string
        BankId:
          description: Id der Bank (technischer Schlüssel)
          example: ""
          nullable: true
          type: string
        BankAccountNumber:
          description: Kontonummer der Bank
          example: ""
          nullable: true
          type: string
        AccountHolder:
          description: Kontoinhaber
          example: ""
          nullable: true
          type: string
        BalanceOfOpenItem:
          description: Saldo des Offenen Postens (read-only)
          example: 0.0
          nullable: true
          type: number
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
      title: OpenItem
      type: object
    Instalment:
      description: Enthält die Daten einer Rate
      example:
        AmountPaid: 4.0
        Amount: 24.9
        OpId: "200500000001742"
        InstalmentId: "23"
        DueDate: 2021-01-30
      properties:
        OpId:
          description: Id des Ops (technischer Schlüssel)
          example: "200500000001742"
          nullable: false
          type: string
        InstalmentId:
          description: Id der Rate (technischer Schlüssel)
          example: "23"
          nullable: false
          type: string
        Amount:
          description: Betrag
          example: 24.9
          nullable: false
          type: number
        DueDate:
          description: Fälligkeit
          example: 2021-01-30
          format: date
          nullable: false
          type: string
        AmountPaid:
          description: Bereits gezahlter Betrag
          example: 4.0
          nullable: false
          type: number
      title: Instalment
      type: object
    InstalmentAgreement:
      description: Enthält Daten zur Ratenvereinbarung
      example:
        DateOfFirstInstalment: 2022-11-07
        InstalmentAmount: 1600.05
        Interval: Biweekly
      properties:
        Interval:
          description: Intervall für die Ratenzahlung
          enum:
          - Weekly
          - Biweekly
          - Monthly
          - Quarterly
          - SixMonthly
          - Annual
          example: Biweekly
          nullable: false
          type: string
        DateOfFirstInstalment:
          description: Fälligkeit der ersten Rate
          example: 2022-11-07
          format: date
          nullable: false
          type: string
        InstalmentAmount:
          description: Ratenbetrag
          example: 1600.05
          nullable: false
          type: number
      title: Instalment Agreement
      type: object
    NetDueDate:
      description: Nettofälligkeit des Offenen Postens
      example:
        Date: 2024-03-30
      properties:
        Date:
          description: Nettofälligkeit des Offenen Postens
          example: 2024-03-30
          format: date
          nullable: false
          type: string
      title: NetDueDate
      type: object
    TermOfPaymentGet:
      allOf:
      - $ref: '#/components/schemas/TermOfPaymentPost'
      - $ref: '#/components/schemas/TermOfPaymentGetExtendedProperties'
      description: Enthält die Daten einer Zahlungsbedingung für GET-Befehl
      example:
        Maturity2NetMonth: NextMonth
        LastModifiedBy: fb
        Maturity1Discount1DueDay: 10
        Description: Termin 10/20; Skonto 4 v.H.
        Maturity1NetMonth: CurrentMonth
        Maturity2Discount2Month: CurrentMonth
        FixedMonthDefinition: FirstMonth
        Maturity3NetDueDay: 0
        Maturity1ReferenceDay: 1
        Maturity3Discount1Month: CurrentMonth
        NumberOfInstalments: 6
        Maturity3ReferenceDay: 0
        Maturity3NetMonth: CurrentMonth
        Discount2Percentage: 0.0
        Maturity2ReferenceDay: 16
        LastModified: 2000-01-23T04:56:07.000+00:00
        FixedMonth: false
        Maturity1Discount2DueDay: 0
        Maturity2Discount1DueDay: 25
        Maturity2NetDueDay: 5
        MethodOfPayment: Biweekly
        Maturity3Discount1DueDay: 0
        Discount1DueInDays: 0
        Maturity2Discount2DueDay: 0
        Discount1Percentage: 4.0
        Discount2DueInDays: 0
        Maturity2Discount1Month: CurrentMonth
        Maturity1Discount1Month: CurrentMonth
        Maturity3Discount2DueDay: 0
        MaturityOfFirstInstalment: Immediately
        NetDays: 0
        Maturity1Discount2Month: CurrentMonth
        Maturity1NetDueDay: 20
        Id: 10072S1
        TermOfPaymentKey: 2S1
        DefineTermOfPayment: WithDate
        Maturity3Discount2Month: CurrentMonth
      title: TermOfPaymentGet
      type: object
    TermOfPaymentPost:
      allOf:
      - $ref: '#/components/schemas/TermOfPaymentPut'
      - $ref: '#/components/schemas/TermOfPaymentPostExtendedProperties'
      description: Enthält die Daten einer Zahlungsbedingung für POST-Befehl
      example:
        Maturity2NetMonth: NextMonth
        Maturity1Discount1DueDay: 10
        Description: Termin 10/20; Skonto 4 v.H.
        Maturity1NetMonth: CurrentMonth
        Maturity2Discount2Month: CurrentMonth
        FixedMonthDefinition: FirstMonth
        Maturity3NetDueDay: 0
        Maturity1ReferenceDay: 1
        Maturity3Discount1Month: CurrentMonth
        NumberOfInstalments: 6
        Maturity3ReferenceDay: 0
        Maturity3NetMonth: CurrentMonth
        Discount2Percentage: 0.0
        Maturity2ReferenceDay: 16
        FixedMonth: false
        Maturity1Discount2DueDay: 0
        Maturity2Discount1DueDay: 25
        Maturity2NetDueDay: 5
        MethodOfPayment: Biweekly
        Maturity3Discount1DueDay: 0
        Discount1DueInDays: 0
        Maturity2Discount2DueDay: 0
        Discount1Percentage: 4.0
        Discount2DueInDays: 0
        Maturity2Discount1Month: CurrentMonth
        Maturity1Discount1Month: CurrentMonth
        Maturity3Discount2DueDay: 0
        MaturityOfFirstInstalment: Immediately
        NetDays: 0
        Maturity1Discount2Month: CurrentMonth
        Maturity1NetDueDay: 20
        TermOfPaymentKey: 2S1
        DefineTermOfPayment: WithDate
        Maturity3Discount2Month: CurrentMonth
      title: TermOfPaymentPost
      type: object
    TermOfPaymentPut:
      description: |
        Enthält die Daten einer Zahlungsbedingung für PUT-Befehl.  Nicht angegebene Properties werden nicht verändert.
      example:
        Maturity2NetMonth: NextMonth
        Maturity1Discount1DueDay: 10
        Description: Termin 10/20; Skonto 4 v.H.
        Maturity1NetMonth: CurrentMonth
        Maturity2Discount2Month: CurrentMonth
        FixedMonthDefinition: FirstMonth
        Maturity3NetDueDay: 0
        Maturity1ReferenceDay: 1
        Maturity3Discount1Month: CurrentMonth
        NumberOfInstalments: 6
        Maturity3ReferenceDay: 0
        Maturity3NetMonth: CurrentMonth
        Discount2Percentage: 0.0
        Maturity2ReferenceDay: 16
        FixedMonth: false
        Maturity1Discount2DueDay: 0
        Maturity2Discount1DueDay: 25
        Maturity2NetDueDay: 5
        MethodOfPayment: Biweekly
        Maturity3Discount1DueDay: 0
        Discount1DueInDays: 0
        Maturity2Discount2DueDay: 0
        Discount1Percentage: 4.0
        Discount2DueInDays: 0
        Maturity2Discount1Month: CurrentMonth
        Maturity1Discount1Month: CurrentMonth
        Maturity3Discount2DueDay: 0
        MaturityOfFirstInstalment: Immediately
        NetDays: 0
        Maturity1Discount2Month: CurrentMonth
        Maturity1NetDueDay: 20
        DefineTermOfPayment: WithDate
        Maturity3Discount2Month: CurrentMonth
      properties:
        Description:
          description: Bezeichnung
          example: Termin 10/20; Skonto 4 v.H.
          maxLength: 60
          nullable: true
          type: string
        DefineTermOfPayment:
          default: InDays
          description: Fälligkeitszeiträume in Tagen oder mit Hilfe von Stichdaten
          enum:
          - InDays
          - WithDate
          - Instalment
          example: WithDate
          nullable: true
          type: string
        Discount1Percentage:
          description: Skonto 1 Prozent (DefineTermOfPayment InDays und WithDate)
          example: 4.0
          nullable: true
          type: number
        Discount1DueInDays:
          description: Skonto 1 fällig in Tagen (DefineTermOfPayment InDays)
          example: 0
          nullable: true
          type: integer
        Discount2Percentage:
          description: Skonto 2 Prozent (DefineTermOfPayment InDays und WithDate)
          example: 0.0
          nullable: true
          type: number
        Discount2DueInDays:
          description: Skonto 2 fällig in Tagen (DefineTermOfPayment InDays)
          example: 0
          nullable: true
          type: integer
        NetDays:
          description: Netto fällig in Tagen (DefineTermOfPayment InDays)
          example: 0
          nullable: true
          type: integer
        Maturity1ReferenceDay:
          description: Fälligkeit 1 Rechnung bis zum x. des Monats (DefineTermOfPayment
            WithDate)
          example: 1
          nullable: true
          type: integer
        Maturity1Discount1DueDay:
          description: Fälligkeit 1 Skonto 1 fällig in Tagen (DefineTermOfPayment
            WithDate)
          example: 10
          nullable: true
          type: integer
        Maturity1Discount1Month:
          default: CurrentMonth
          description: Fälligkeit 1 Skonto 1 Monat (DefineTermOfPayment WithDate)
          enum:
          - CurrentMonth
          - NextMonth
          - MonthAfterNext
          example: CurrentMonth
          nullable: true
          type: string
        Maturity1Discount2DueDay:
          description: Fälligkeit 1 Skonto 2 fällig am (DefineTermOfPayment WithDate)
          example: 0
          nullable: true
          type: integer
        Maturity1Discount2Month:
          default: CurrentMonth
          description: Fälligkeit 1 Skonto 2 Monat (DefineTermOfPayment WithDate)
          enum:
          - CurrentMonth
          - NextMonth
          - MonthAfterNext
          example: CurrentMonth
          nullable: true
          type: string
        Maturity1NetDueDay:
          description: Fälligkeit 1 Netto fällig am (DefineTermOfPayment WithDate)
          example: 20
          nullable: true
          type: integer
        Maturity1NetMonth:
          default: CurrentMonth
          description: Fälligkeit 1 Netto Monat (DefineTermOfPayment WithDate)
          enum:
          - CurrentMonth
          - NextMonth
          - MonthAfterNext
          example: CurrentMonth
          nullable: true
          type: string
        Maturity2ReferenceDay:
          description: Fälligkeit 2 Rechnung bis zum x. des Monats (DefineTermOfPayment
            WithDate)
          example: 16
          nullable: true
          type: integer
        Maturity2Discount1DueDay:
          description: Fälligkeit 2 Skonto 1 fällig in Tagen (DefineTermOfPayment
            WithDate)
          example: 25
          nullable: true
          type: integer
        Maturity2Discount1Month:
          default: CurrentMonth
          description: Fälligkeit 2 Skonto 1 Monat (DefineTermOfPayment WithDate)
          enum:
          - CurrentMonth
          - NextMonth
          - MonthAfterNext
          example: CurrentMonth
          nullable: true
          type: string
        Maturity2Discount2DueDay:
          description: Fälligkeit 2 Skonto 2 fällig am (DefineTermOfPayment WithDate)
          example: 0
          nullable: true
          type: integer
        Maturity2Discount2Month:
          default: CurrentMonth
          description: Fälligkeit 2 Skonto 2 Monat (DefineTermOfPayment WithDate)
          enum:
          - CurrentMonth
          - NextMonth
          - MonthAfterNext
          example: CurrentMonth
          nullable: true
          type: string
        Maturity2NetDueDay:
          description: Fälligkeit 2 Netto fällig am (DefineTermOfPayment WithDate)
          example: 5
          nullable: true
          type: integer
        Maturity2NetMonth:
          default: CurrentMonth
          description: Fälligkeit 2 Netto Monat (DefineTermOfPayment WithDate)
          enum:
          - CurrentMonth
          - NextMonth
          - MonthAfterNext
          example: NextMonth
          nullable: true
          type: string
        Maturity3ReferenceDay:
          description: Fälligkeit 3 Rechnung bis zum x. des Monats (DefineTermOfPayment
            WithDate)
          example: 0
          nullable: true
          type: integer
        Maturity3Discount1DueDay:
          description: Fälligkeit 3 Skonto 1 fällig in Tagen (DefineTermOfPayment
            WithDate)
          example: 0
          nullable: true
          type: integer
        Maturity3Discount1Month:
          default: CurrentMonth
          description: Fälligkeit 3 Skonto 1 Monat (DefineTermOfPayment WithDate)
          enum:
          - CurrentMonth
          - NextMonth
          - MonthAfterNext
          example: CurrentMonth
          nullable: true
          type: string
        Maturity3Discount2DueDay:
          description: Fälligkeit 3 Skonto 2 fällig am (DefineTermOfPayment WithDate)
          example: 0
          nullable: true
          type: integer
        Maturity3Discount2Month:
          default: CurrentMonth
          description: Fälligkeit 3 Skonto 2 Monat (DefineTermOfPayment WithDate)
          enum:
          - CurrentMonth
          - NextMonth
          - MonthAfterNext
          example: CurrentMonth
          nullable: true
          type: string
        Maturity3NetDueDay:
          description: Fälligkeit 3 Netto fällig am (DefineTermOfPayment WithDate)
          example: 0
          nullable: true
          type: integer
        Maturity3NetMonth:
          default: CurrentMonth
          description: Fälligkeit 3 Netto Monat (DefineTermOfPayment WithDate)
          enum:
          - CurrentMonth
          - NextMonth
          - MonthAfterNext
          example: CurrentMonth
          nullable: true
          type: string
        MethodOfPayment:
          default: Monthly
          description: Zahlungsweise (DefineTermOfPayment Instalment)
          enum:
          - Weekly
          - Biweekly
          - Monthly
          - Quarterly
          - SixMonthly
          - Annual
          - NotDefined
          example: Biweekly
          nullable: true
          type: string
        NumberOfInstalments:
          description: Anzahl Raten (DefineTermOfPayment Instalment)
          example: 6
          nullable: true
          type: integer
        MaturityOfFirstInstalment:
          default: Immediately
          description: Fälligkeit der ersten Rate (DefineTermOfPayment Instalment)
          enum:
          - Immediately
          - NextFirstDayOfMonth
          - NextFifteenthDayOfMonth
          example: Immediately
          nullable: true
          type: string
        FixedMonth:
          default: false
          description: Die Rate soll zu einem festen Monat eines Kalenderquartals
            eingezogen werden (nur bei MethodOfPayment = quarterly)
          example: false
          nullable: true
          type: boolean
        FixedMonthDefinition:
          default: FirstMonth
          description: Festlegung Monat
          enum:
          - FirstMonth
          - SecondMonth
          - ThirdMonth
          example: FirstMonth
          nullable: true
          type: string
      title: TermOfPaymentPut
      type: object
    TermOfPaymentPostExtendedProperties:
      description: Enthält zusätzliche Felder für POST-Befehl einer Zahlungsbedingung
      properties:
        TermOfPaymentKey:
          description: Ordnungsbegriff der Zahlungsbedingung
          example: 2S1
          maxLength: 3
          nullable: true
          type: string
      title: TermOfPaymentPostExtendedProperties
      type: object
    TermOfPaymentGetExtendedProperties:
      description: Enthält zusätzliche Felder für GET-Befehl einer Zahlungsbedingung
      properties:
        Id:
          description: Id der Zahlungsbedingung (technischer Schlüssel)
          example: 10072S1
          nullable: true
          type: string
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
      title: TermOfPaymentGetExtendedProperties
      type: object
    CostCenterGet:
      description: Enthält die Daten einer Kostenstelle für GET-Befehl
      example:
        LastModifiedBy: fb
        Description: Allgemein
        NoLongerPostable: false
        GeneralDistributionChangeable: false
        CostCenterKey: "100"
        UserDefinedFields:
        - null
        - null
        LastModified: 2000-01-23T04:56:07.000+00:00
        WithGeneralDistribution: true
        WithSpecialDistribution: false
        TypeOfDistribution: Absolute
        Distributed: 92.4
        Id: "236200000000000000000100"
        Notes: Notiz
        TargetAmount: 235.25
      properties:
        Id:
          description: "Id der Kostenstelle (technischer Schlüssel, read-only)"
          example: "236200000000000000000100"
          nullable: true
          type: string
        CostCenterKey:
          description: Ordnungsbegriff der Kostenstelle
          example: "100"
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: Allgemein
          maxLength: 30
          nullable: true
          type: string
        Notes:
          description: Notizen
          example: Notiz
          maxLength: 2000
          nullable: true
          type: string
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          example: false
          nullable: true
          type: boolean
        WithGeneralDistribution:
          description: Mit allgemeiner Verteilung
          example: true
          nullable: true
          type: boolean
        GeneralDistributionChangeable:
          description: Allgemeine Verteilung beim Buchen änderbar
          example: false
          nullable: true
          type: boolean
        TypeOfDistribution:
          description: |
            Art der Aufteilung der allgemeinen Verteilung. - prozentuale Aufteilung (Percentage) - absolute Aufteilung (Absolute)
          enum:
          - Percentage
          - Absolute
          example: Absolute
          nullable: true
          type: string
        TargetAmount:
          description: Vorgabebetrag
          example: 235.25
          nullable: true
          type: number
        Distributed:
          description: "Prozentualer Anteil bzw. absoluter Betrag, der verteilt wurde\
            \ (read-only)"
          example: 92.4
          nullable: true
          type: number
        WithSpecialDistribution:
          description: Mit spezieller Verteilung
          example: false
          nullable: true
          type: boolean
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
        LastModified:
          description: Letzte Änderung am (read-only)
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch (read-only)
          example: fb
          nullable: true
          type: string
      title: CostCenterGet
      type: object
    CostCenterPost:
      description: Enthält die Daten einer Kostenstelle für POST-Befehl
      example:
        Description: Allgemein
        NoLongerPostable: false
        WithGeneralDistribution: false
        GeneralDistributionChangeable: false
        WithSpecialDistribution: false
        CostCenterKey: "100"
        TypeOfDistribution: Absolute
        UserDefinedFields:
        - null
        - null
        SpecialDistributions:
        - AccountId: "102500000000006"
          TypeOfDistribution: Absolute
          SpecialDistributionChangeable: false
          TargetAmount: 235.25
          AccountNumber: 210
          Distributions:
          - DistributedCostCenterId: "236200000000000000000100"
            DistributedCostCenterKey: "100"
            Share: 49.7
          - DistributedCostCenterId: "236200000000000000000100"
            DistributedCostCenterKey: "100"
            Share: 49.7
        - AccountId: "102500000000006"
          TypeOfDistribution: Absolute
          SpecialDistributionChangeable: false
          TargetAmount: 235.25
          AccountNumber: 210
          Distributions:
          - DistributedCostCenterId: "236200000000000000000100"
            DistributedCostCenterKey: "100"
            Share: 49.7
          - DistributedCostCenterId: "236200000000000000000100"
            DistributedCostCenterKey: "100"
            Share: 49.7
        Notes: Notiz
        TargetAmount: 235.25
        Distributions:
        - DistributedCostCenterId: "236200000000000000000100"
          DistributedCostCenterKey: "100"
          Share: 49.7
        - DistributedCostCenterId: "236200000000000000000100"
          DistributedCostCenterKey: "100"
          Share: 49.7
      properties:
        CostCenterKey:
          description: Ordnungsbegriff der Kostenstelle
          example: "100"
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: Allgemein
          maxLength: 30
          nullable: true
          type: string
        Notes:
          description: Notizen
          example: Notiz
          maxLength: 2000
          nullable: true
          type: string
        NoLongerPostable:
          default: false
          description: Nicht mehr bebuchbar.
          example: false
          nullable: true
          type: boolean
        WithGeneralDistribution:
          default: false
          description: Mit allgemeiner Verteilung.
          example: false
          nullable: true
          type: boolean
        GeneralDistributionChangeable:
          default: false
          description: |
            Allgemeine Verteilung beim Buchen änderbar. WithGeneralDistribution muss true sein, sonst wird der Wert ignoriert.
          example: false
          nullable: true
          type: boolean
        TypeOfDistribution:
          default: Percentage
          description: |
            Art der Aufteilung der allgemeinen Verteilung. WithGeneralDistribution muss true sein, sonst wird der Wert ignoriert. - prozentuale Aufteilung (Percentage) - absolute Aufteilung (Absolute)
          enum:
          - Percentage
          - Absolute
          example: Absolute
          nullable: true
          type: string
        TargetAmount:
          description: |
            Vorgabebetrag.  WithGeneralDistribution muss true und TypeOfDistribution muss "Absolute" sein, sonst wird der Wert ignoriert.
          example: 235.25
          nullable: true
          type: number
        WithSpecialDistribution:
          default: false
          description: Mit spezieller Verteilung
          example: false
          nullable: true
          type: boolean
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
        Distributions:
          description: |
            Allgemeine Verteilungen. WithGeneralDistribution muss true sein, sonst werden die Werte ignoriert.
          items:
            $ref: '#/components/schemas/CostCenterDistribution'
          type: array
        SpecialDistributions:
          description: |
            Spezielle Verteilungen für einzelne Konten. WithSpecialDistribution muss true sein, sonst werden die Werte ignoriert.
          items:
            $ref: '#/components/schemas/CostCenterSpecialDistribution'
          type: array
          example: null
      title: CostCenterPost
      type: object
    CostCenterDistribution:
      description: "Enthält die Daten der Verteilung einer Kostenstelle, im Moment\
        \ nur für POST-Befehl verfügbar."
      example:
        DistributedCostCenterId: "236200000000000000000100"
        DistributedCostCenterKey: "100"
        Share: 49.7
      properties:
        DistributedCostCenterKey:
          description: |
            Ordnungsbegriff der Kostenstelle, auf die verteilt wird. Die Kostenstelle kann entweder über DistributedCostCenterId oder über DistributedCostCenterKey angegeben werden.  Werden beide Werte angegeben, wird der Wert aus DistributedCostCenterId verwendet.
          example: "100"
          nullable: true
          type: string
        DistributedCostCenterId:
          description: |
            Id der Kostenstelle, auf die verteilt wird (technischer Schlüssel). Die Kostenstelle kann entweder über DistributedCostCenterId oder über DistributedCostCenterKey angegeben werden.  Werden beide Werte angegeben, wird der Wert aus DistributedCostCenterId verwendet.
          example: "236200000000000000000100"
          nullable: true
          type: string
        Share:
          description: Anteil der Kostenstelle an der Gesamtverteilung
          example: 49.7
          nullable: false
          type: number
      title: CostCenterDistribution
      type: object
    CostCenterSpecialDistribution:
      description: "Enthält die Daten für die spezielle Verteilung auf ein einzelnes\
        \ Konto, im Moment nur für POST-Befehl verfügbar."
      example:
        AccountId: "102500000000006"
        TypeOfDistribution: Absolute
        SpecialDistributionChangeable: false
        TargetAmount: 235.25
        AccountNumber: 210
        Distributions:
        - DistributedCostCenterId: "236200000000000000000100"
          DistributedCostCenterKey: "100"
          Share: 49.7
        - DistributedCostCenterId: "236200000000000000000100"
          DistributedCostCenterKey: "100"
          Share: 49.7
      properties:
        AccountNumber:
          description: |
            Kontonummer des Kontos mit der speziellen Verteilung (Ordnungsbegriff). Das Konto kann entweder über AccountNumber oder über AccountId angegeben werden.  Werden beide Werte angegeben, wird der Wert aus AccountId verwendet.
          example: 210
          nullable: true
          type: number
        AccountId:
          description: |
            Id des Kontos mit der speziellen Verteilung (technischer Schlüssel). Das Konto kann entweder über AccountNumber oder über AccountId angegeben werden.  Werden beide Werte angegeben, wird der Wert aus AccountId verwendet.
          example: "102500000000006"
          nullable: true
          type: string
        SpecialDistributionChangeable:
          default: false
          description: Spezielle Verteilung beim Buchen änderbar
          example: false
          nullable: true
          type: boolean
        TypeOfDistribution:
          default: Percentage
          description: |
            Art der Aufteilung - prozentuale Aufteilung (Percentage) - absolute Aufteilung (Absolute)
          enum:
          - Percentage
          - Absolute
          example: Absolute
          nullable: true
          type: string
        TargetAmount:
          default: 0.0
          description: "Vorgabebetrag, kann nur bei absoluter Aufteilung angegeben\
            \ werden, sonst wird der Wert ignoriert."
          example: 235.25
          nullable: true
          type: number
        Distributions:
          description: Verteilungen für das Konto
          items:
            $ref: '#/components/schemas/CostCenterDistribution'
          type: array
      title: CostCenterSpecialDistribution
      type: object
    CostCenterPut:
      description: "Enthält die Daten einer Kostenstelle für PUT-Befehl. Es können\
        \ nur Daten geändert werden, die nicht die allgemeine oder die spezielle Verteilung\
        \ betreffen.  Nicht angegebene Properties werden nicht verändert. \n"
      example:
        Description: Allgemein
        NoLongerPostable: false
        UserDefinedFields:
        - null
        - null
        Notes: Notiz
      properties:
        Description:
          description: Bezeichnung
          example: Allgemein
          maxLength: 30
          nullable: true
          type: string
        Notes:
          description: Notizen
          example: Notiz
          maxLength: 2000
          nullable: true
          type: string
        NoLongerPostable:
          description: |
            Nicht mehr bebuchbar. Kann nicht geändert werden, wenn die Kostenstelle in offenen Buchungen verwendet wird.
          example: false
          nullable: true
          type: boolean
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
      title: CostCenterPut
      type: object
    CostUnitGet:
      description: Enthält die Daten eines Kostenträgers für GET-Befehl
      example:
        LastModifiedBy: fb
        Description: Herstellung 1
        NoLongerPostable: false
        GeneralDistributionChangeable: false
        UserDefinedFields:
        - null
        - null
        LastModified: 2000-01-23T04:56:07.000+00:00
        CostUnitKey: "1001"
        WithGeneralDistribution: false
        WithSpecialDistribution: false
        TypeOfDistribution: Absolute
        Distributed: 92.4
        Id: "236300000000000000001001"
        Notes: Notiz
        TargetAmount: 235.25
      properties:
        Id:
          description: "Id des Kostenträgers (technischer Schlüssel, read-only)"
          example: "236300000000000000001001"
          nullable: true
          type: string
        CostUnitKey:
          description: Ordnungsbegriff des Kostenträgers
          example: "1001"
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: Herstellung 1
          maxLength: 30
          nullable: true
          type: string
        Notes:
          description: Notizen
          example: Notiz
          maxLength: 2000
          nullable: true
          type: string
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          example: false
          nullable: true
          type: boolean
        WithGeneralDistribution:
          description: Mit allgemeiner Verteilung
          example: false
          nullable: true
          type: boolean
        GeneralDistributionChangeable:
          description: Allgemeine Verteilung beim Buchen änderbar
          example: false
          nullable: true
          type: boolean
        TypeOfDistribution:
          description: |
            Art der Aufteilung der allgemeinen Verteilung. - prozentuale Aufteilung (Percentage) - absolute Aufteilung (Absolute)
          enum:
          - Percentage
          - Absolute
          example: Absolute
          nullable: true
          type: string
        TargetAmount:
          description: Vorgabebetrag
          example: 235.25
          nullable: true
          type: number
        Distributed:
          description: "Prozentualer Anteil bzw. absoluter Betrag, der verteilt wurde\
            \ (read-only)"
          example: 92.4
          nullable: true
          type: number
        WithSpecialDistribution:
          description: Mit Spezieller Verteilung
          example: false
          nullable: true
          type: boolean
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
        LastModified:
          description: Letzte Änderung am (read-only)
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch (read-only)
          example: fb
          nullable: true
          type: string
      title: CostUnitGet
      type: object
    CostUnitPost:
      description: Enthält die Daten eines Kostenträgers für POST-Befehl
      example:
        CostUnitKey: "1001"
        Description: Herstellung 1
        NoLongerPostable: false
        WithGeneralDistribution: false
        GeneralDistributionChangeable: false
        WithSpecialDistribution: false
        TypeOfDistribution: Absolute
        UserDefinedFields:
        - null
        - null
        SpecialDistributions:
        - AccountId: "102500000000006"
          TypeOfDistribution: Absolute
          SpecialDistributionChangeable: false
          TargetAmount: 235.25
          AccountNumber: 210
          Distributions:
          - DistributedCostUnitKey: "1001"
            Share: 49.7
            DistributedCostUnitId: "236300000000000000001001"
          - DistributedCostUnitKey: "1001"
            Share: 49.7
            DistributedCostUnitId: "236300000000000000001001"
        - AccountId: "102500000000006"
          TypeOfDistribution: Absolute
          SpecialDistributionChangeable: false
          TargetAmount: 235.25
          AccountNumber: 210
          Distributions:
          - DistributedCostUnitKey: "1001"
            Share: 49.7
            DistributedCostUnitId: "236300000000000000001001"
          - DistributedCostUnitKey: "1001"
            Share: 49.7
            DistributedCostUnitId: "236300000000000000001001"
        Notes: Notiz
        TargetAmount: 235.25
        Distributions:
        - DistributedCostUnitKey: "1001"
          Share: 49.7
          DistributedCostUnitId: "236300000000000000001001"
        - DistributedCostUnitKey: "1001"
          Share: 49.7
          DistributedCostUnitId: "236300000000000000001001"
      properties:
        CostUnitKey:
          description: Ordnungsbegriff des Kostenträgers
          example: "1001"
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: Herstellung 1
          maxLength: 30
          nullable: true
          type: string
        Notes:
          description: Notizen
          example: Notiz
          maxLength: 2000
          nullable: true
          type: string
        NoLongerPostable:
          default: false
          description: Nicht mehr bebuchbar.
          example: false
          nullable: true
          type: boolean
        WithGeneralDistribution:
          default: false
          description: Mit allgemeiner Verteilung.
          example: false
          nullable: true
          type: boolean
        GeneralDistributionChangeable:
          default: false
          description: |
            Allgemeine Verteilung beim Buchen änderbar. WithGeneralDistribution muss true sein, sonst wird der Wert ignoriert.
          example: false
          nullable: true
          type: boolean
        TypeOfDistribution:
          default: Percentage
          description: |
            Art der Aufteilung der allgemeinen Verteilung. WithGeneralDistribution muss true sein, sonst wird der Wert ignoriert. - prozentuale Aufteilung (Percentage) - absolute Aufteilung (Absolute)
          enum:
          - Percentage
          - Absolute
          example: Absolute
          nullable: true
          type: string
        TargetAmount:
          description: |
            Vorgabebetrag.  WithGeneralDistribution muss true und TypeOfDistribution muss "Absolute" sein, sonst wird der Wert ignoriert.
          example: 235.25
          nullable: true
          type: number
        WithSpecialDistribution:
          default: false
          description: Mit spezieller Verteilung
          example: false
          nullable: true
          type: boolean
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
        Distributions:
          description: |
            Allgemeine Verteilungen. WithGeneralDistribution muss true sein, sonst werden die Werte ignoriert.
          items:
            $ref: '#/components/schemas/CostUnitDistribution'
          type: array
        SpecialDistributions:
          description: |
            Spezielle Verteilungen für einzelne Konten. WithSpecialDistribution muss true sein, sonst werden die Werte ignoriert.
          items:
            $ref: '#/components/schemas/CostUnitSpecialDistribution'
          type: array
          example: null
      title: CostUnitPost
      type: object
    CostUnitDistribution:
      description: "Enthält die Daten der Verteilung eines Kostenträgers, im Moment\
        \ nur für POST-Befehl verfügbar."
      example:
        DistributedCostUnitKey: "1001"
        Share: 49.7
        DistributedCostUnitId: "236300000000000000001001"
      properties:
        DistributedCostUnitKey:
          description: |
            Ordnungsbegriff des Kostenträgers, auf den verteilt wird. Der Kostenträger kann entweder über DistributedCostUnitId oder über DistributedCostUnitKey angegeben werden.  Werden beide Werte angegeben, wird der Wert aus DistributedCostUnitId verwendet.
          example: "1001"
          nullable: true
          type: string
        DistributedCostUnitId:
          description: |
            Id des Kostenträgers, auf den verteilt wird (technischer Schlüssel). Der Kostenträger kann entweder über DistributedCostUnitId oder über DistributedCostUnitKey angegeben werden.  Werden beide Werte angegeben, wird der Wert aus DistributedCostUnitId verwendet.
          example: "236300000000000000001001"
          nullable: true
          type: string
        Share:
          description: Anteil des Kostenträgers an der Gesamtverteilung
          example: 49.7
          nullable: false
          type: number
      title: CostUnitDistribution
      type: object
    CostUnitSpecialDistribution:
      description: "Enthält die Daten für die spezielle Verteilung auf ein einzelnes\
        \ Konto, im Moment nur für POST-Befehl verfügbar."
      example:
        AccountId: "102500000000006"
        TypeOfDistribution: Absolute
        SpecialDistributionChangeable: false
        TargetAmount: 235.25
        AccountNumber: 210
        Distributions:
        - DistributedCostUnitKey: "1001"
          Share: 49.7
          DistributedCostUnitId: "236300000000000000001001"
        - DistributedCostUnitKey: "1001"
          Share: 49.7
          DistributedCostUnitId: "236300000000000000001001"
      properties:
        AccountNumber:
          description: |
            Kontonummer des Kontos mit der speziellen Verteilung (Ordnungsbegriff). Das Konto kann entweder über AccountNumber oder über AccountId angegeben werden.  Werden beide Werte angegeben, wird der Wert aus AccountId verwendet.
          example: 210
          nullable: true
          type: number
        AccountId:
          description: |
            Id des Kontos mit der speziellen Verteilung (technischer Schlüssel). Das Konto kann entweder über AccountNumber oder über AccountId angegeben werden.  Werden beide Werte angegeben, wird der Wert aus AccountId verwendet.
          example: "102500000000006"
          nullable: true
          type: string
        SpecialDistributionChangeable:
          default: false
          description: Spezielle Verteilung beim Buchen änderbar
          example: false
          nullable: true
          type: boolean
        TypeOfDistribution:
          default: Percentage
          description: |
            Art der Aufteilung - prozentuale Aufteilung (Percentage) - absolute Aufteilung (Absolute)
          enum:
          - Percentage
          - Absolute
          example: Absolute
          nullable: true
          type: string
        TargetAmount:
          default: 0.0
          description: "Vorgabebetrag, kann nur bei absoluter Aufteilung angegeben\
            \ werden."
          example: 235.25
          nullable: true
          type: number
        Distributions:
          description: Verteilungen für das Konto
          items:
            $ref: '#/components/schemas/CostUnitDistribution'
          type: array
      title: CostUnitSpecialDistribution
      type: object
    CostUnitPut:
      description: |
        Enthält die Daten eines Kostenträgers für PUT-Befehl. Es können nur Daten geändert werden, die nicht die allgemeine oder die spezielle Verteilung betreffen. Nicht angegebene Properties werden nicht verändert.
      example:
        Description: Herstellung 1
        NoLongerPostable: false
        UserDefinedFields:
        - null
        - null
        Notes: Notiz
      properties:
        Description:
          description: Bezeichnung
          example: Herstellung 1
          maxLength: 30
          nullable: true
          type: string
        Notes:
          description: Notizen
          example: Notiz
          maxLength: 2000
          nullable: true
          type: string
        NoLongerPostable:
          description: Nicht mehr bebuchbar
          example: false
          nullable: true
          type: boolean
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
          example: null
      title: CostUnitPut
      type: object
    DunningTypeGet:
      description: |
        Enthält die Daten eines Mahntyps für GET-Befehl
      example:
        LastModified: 2000-01-23T04:56:07.000+00:00
        NumberOfRepeats: 1
        LastModifiedBy: fb
        Description: Standard
        DeliveryMethod: Email
        PostArrearsFeeAndInterest: false
        RepeatLastDunningLevel: false
        InterestOnArrears: 3.5
        Id: "201200000000001"
        DunningType: STD
        WithInterestOnArrears: false
      properties:
        Id:
          description: Id des Mahntyps (technischer Schlüssel)
          example: "201200000000001"
          nullable: true
          type: string
        DunningType:
          description: Ordnungsbegriff des Mahntyps
          example: STD
          maxLength: 3
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: Standard
          maxLength: 30
          nullable: true
          type: string
        DeliveryMethod:
          description: |
            Versandart Nur gültig, wenn Sie im Arbeitsgebiet Extras/Einstellungen unter Versand/Mahnung festgelegt haben, dass die Mahnung entsprechend den Einstellungen beim Mahnungstyp versendet wird. - Per Brief (Letter) - Per E-Mail (Email) - Per Brief und E-Mail (LetterAndEmail)
          enum:
          - Letter
          - Email
          - LetterAndEmail
          example: Email
          nullable: true
          type: string
        PostArrearsFeeAndInterest:
          description: |
            Mahngebühren und Verzugszinsen buchen. Nur gültig, wenn Sie im Arbeitsgebiet Extras/Einstellungen unter Belege/Mahnung festgelegt haben, dass die anfallenden Mahngebühren und Verzugszinsen gebucht werden sollen.
          example: false
          nullable: true
          type: boolean
        WithInterestOnArrears:
          description: mit Verzugszinsen berechnen
          example: false
          nullable: true
          type: boolean
        InterestOnArrears:
          description: Verzugszinsen in Prozent
          example: 3.5
          format: double
          maximum: 999.99
          minimum: 0.01
          nullable: true
          type: number
        RepeatLastDunningLevel:
          description: Letzte Mahnstufe wiederholen
          example: false
          nullable: true
          type: boolean
        NumberOfRepeats:
          description: Anzahl Wiederholungen der letzten Mahnstufe
          example: 1
          maximum: 999
          minimum: 1
          nullable: true
          type: integer
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
      title: DunningTypeGet
      type: object
    DunningTypePost:
      allOf:
      - $ref: '#/components/schemas/DunningTypePut'
      - $ref: '#/components/schemas/DunningTypePostExtendedProperties'
      description: Enthält die Daten eines Mahntyps für POST-Befehl
      example:
        NumberOfRepeats: 1
        Description: Standard
        DeliveryMethod: Email
        PostArrearsFeeAndInterest: false
        RepeatLastDunningLevel: false
        InterestOnArrears: 3.5
        WithInterestOnArrears: false
        DunningType: STD
        DunningLevels:
        - ClosingText: ""
          MinimumNumberOfDays: 14
          ArrearsFee: 0.0
          IntroductoryText: "Es wird Ihrer Aufmerksamkeit sicherlich entgangen sein,\
            \ dass die aufgeführten Beträge zur Zahlung fällig sind. Wir erwarten\
            \ nunmehr Ihre Überweisung. Zahlungseingänge sind berücksichtigt bis zum\
            \ <ZAHLUNGSEINGANG_BIS_DATUM>."
          DunningLevel: 1
          DebtCollection: false
          WithInterestOnArrears: false
          ReferenceDate: MaturityDate
          Salutation: ""
          Subject: Mahnung Kunde <KUNDENNUMMER>
        - ClosingText: ""
          MinimumNumberOfDays: 14
          ArrearsFee: 0.0
          IntroductoryText: "Es wird Ihrer Aufmerksamkeit sicherlich entgangen sein,\
            \ dass die aufgeführten Beträge zur Zahlung fällig sind. Wir erwarten\
            \ nunmehr Ihre Überweisung. Zahlungseingänge sind berücksichtigt bis zum\
            \ <ZAHLUNGSEINGANG_BIS_DATUM>."
          DunningLevel: 1
          DebtCollection: false
          WithInterestOnArrears: false
          ReferenceDate: MaturityDate
          Salutation: ""
          Subject: Mahnung Kunde <KUNDENNUMMER>
      title: DunningTypePost
      type: object
    DunningTypePut:
      description: "Enthält die Daten eines Mahntyps für PUT-Befehl. Nicht angegebene\
        \ Properties werden nicht verändert. \n"
      example:
        NumberOfRepeats: 1
        Description: Standard
        DeliveryMethod: Email
        PostArrearsFeeAndInterest: false
        RepeatLastDunningLevel: false
        InterestOnArrears: 3.5
        WithInterestOnArrears: false
      properties:
        Description:
          description: Bezeichnung
          example: Standard
          maxLength: 30
          nullable: true
          type: string
        DeliveryMethod:
          default: Letter
          description: |
            Versandart Nur gültig, wenn Sie im Arbeitsgebiet Extras/Einstellungen unter Versand/Mahnung festgelegt haben, dass die Mahnung entsprechend den Einstellungen beim Mahnungstyp versendet wird. - Per Brief (Letter) - Per E-Mail (Email) - Per Brief und E-Mail (LetterAndEmail)
          enum:
          - Letter
          - Email
          - LetterAndEmail
          example: Email
          nullable: true
          type: string
        PostArrearsFeeAndInterest:
          description: |
            Mahngebühren und Verzugszinsen buchen. Nur gültig, wenn Sie im Arbeitsgebiet Extras/Einstellungen unter Belege/Mahnung festgelegt haben, dass die anfallenden Mahngebühren und Verzugszinsen gebucht werden sollen.
          example: false
          nullable: true
          type: boolean
        WithInterestOnArrears:
          default: false
          description: mit Verzugszinsen berechnen
          example: false
          nullable: true
          type: boolean
        InterestOnArrears:
          description: Verzugszinsen in Prozent
          example: 3.5
          format: double
          maximum: 999.99
          minimum: 0.01
          nullable: true
          type: number
        RepeatLastDunningLevel:
          default: false
          description: Letzte Mahnstufe wiederholen
          example: false
          nullable: true
          type: boolean
        NumberOfRepeats:
          description: Anzahl Wiederholungen der letzten Mahnstufe
          example: 1
          maximum: 999
          minimum: 1
          nullable: true
          type: integer
      title: DunningTypePut
      type: object
    DunningTypePostExtendedProperties:
      description: Enthält zusätzliche Felder für POST-Befehl eines Mahntyps
      properties:
        DunningType:
          description: Ordnungsbegriff des Mahntyps
          example: STD
          maxLength: 3
          nullable: true
          type: string
        DunningLevels:
          description: Mahnstufen
          items:
            $ref: '#/components/schemas/DunningLevelPostPut'
          type: array
      title: DunningTypePostExtendedProperties
      type: object
    DunningLevelPostPut:
      description: |
        Enthält die Daten einer Mahnstufe für POST- und PUT-Befehl
        Besonderheit beim PUT: Nicht angegebene Properties werden nicht verändert. Es reicht zum Beispiel aus, nur Id und Bezeichnung zu senden, dann wird nur die Bezeichnung der Mahnstufe verändert.
      example:
        ClosingText: ""
        MinimumNumberOfDays: 14
        ArrearsFee: 0.0
        IntroductoryText: "Es wird Ihrer Aufmerksamkeit sicherlich entgangen sein,\
          \ dass die aufgeführten Beträge zur Zahlung fällig sind. Wir erwarten nunmehr\
          \ Ihre Überweisung. Zahlungseingänge sind berücksichtigt bis zum <ZAHLUNGSEINGANG_BIS_DATUM>."
        DunningLevel: 1
        DebtCollection: false
        WithInterestOnArrears: false
        ReferenceDate: MaturityDate
        Salutation: ""
        Subject: Mahnung Kunde <KUNDENNUMMER>
      properties:
        DunningLevel:
          description: |
            Mahnstufe Nur für die Übergabe des Arrays von Mahnstufen beim POST eines Mahntyps und beim GET einer Mahnstufe, ansonsten wird der Wert ignoriert. Muss bei 1 beginnend und lückenlos aufsteigend übergeben werden.
          example: 1
          nullable: true
          type: integer
        MinimumNumberOfDays:
          description: "Anzahl Tage, die zum Mahndatum mindestens vergangen sein mü\
            ssen, damit ein Offener Posten zur Mahnung ausgewählt wird."
          example: 14
          maximum: 999
          minimum: 0
          nullable: true
          type: integer
        ReferenceDate:
          default: MaturityDate
          description: "Gibt an, nach welchem Datum sich die Anzahl Tage richtet,\
            \ die zum Mahndatum mindestens vergangen sein müssen (MinimumNumberOfDays)\
            \ - Fälligkeitsdatum (MaturityDate) - Letzte Mahnung (LastDunning)"
          enum:
          - MaturityDate
          - LastDunning
          example: MaturityDate
          nullable: true
          type: string
        ArrearsFee:
          default: 0.0
          description: Mahngebühr
          example: 0.0
          format: double
          maximum: 9999999999999.99
          minimum: 0.0
          nullable: true
          type: number
        WithInterestOnArrears:
          default: false
          description: Verzugszinsen ausweisen
          example: false
          nullable: true
          type: boolean
        IntroductoryText:
          description: Einleitender Text
          example: "Es wird Ihrer Aufmerksamkeit sicherlich entgangen sein, dass die\
            \ aufgeführten Beträge zur Zahlung fällig sind. Wir erwarten nunmehr Ihre\
            \ Überweisung. Zahlungseingänge sind berücksichtigt bis zum <ZAHLUNGSEINGANG_BIS_DATUM>."
          maxLength: 2000
          nullable: true
          type: string
        ClosingText:
          description: Abschließender Text
          example: ""
          maxLength: 2000
          nullable: true
          type: string
        Subject:
          default: Mahnung Kunde <KUNDENNUMMER>
          description: Betreff
          example: Mahnung Kunde <KUNDENNUMMER>
          maxLength: 100
          nullable: true
          type: string
        Salutation:
          description: Anrede
          example: ""
          maxLength: 100
          nullable: true
          type: string
        DebtCollection:
          default: false
          description: Inkasso
          example: false
          nullable: true
          type: boolean
      title: DunningLevelPostPut
      type: object
    DunningLevelGet:
      allOf:
      - $ref: '#/components/schemas/DunningLevelPostPut'
      - $ref: '#/components/schemas/DunningLevelGetExtendedProperties'
      description: Enthält die Daten einer Mahnstufe für GET-Befehl
      example:
        LastModifiedBy: fb
        ClosingText: ""
        MinimumNumberOfDays: 14
        IntroductoryText: "Es wird Ihrer Aufmerksamkeit sicherlich entgangen sein,\
          \ dass die aufgeführten Beträge zur Zahlung fällig sind. Wir erwarten nunmehr\
          \ Ihre Überweisung. Zahlungseingänge sind berücksichtigt bis zum <ZAHLUNGSEINGANG_BIS_DATUM>."
        DunningLevel: 1
        WithInterestOnArrears: false
        Salutation: ""
        Subject: Mahnung Kunde <KUNDENNUMMER>
        LastModified: 2000-01-23T04:56:07.000+00:00
        ArrearsFee: 0.0
        DebtCollection: false
        Id: 201.300.000.000.001
        DunningTypeId: "201200000000001"
        ReferenceDate: MaturityDate
      title: DunningLevelGet
      type: object
    DunningLevelGetExtendedProperties:
      description: Enthält zusätzliche Felder für GET-Befehl einer Mahnstufe
      properties:
        Id:
          description: Id der Mahnstufe (technischer Schlüssel)
          example: 201.300.000.000.001
          nullable: true
          type: string
        DunningTypeId:
          description: Id des Mahntyps (technischer Schlüssel)
          example: "201200000000001"
          nullable: true
          type: string
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
      title: DunningLevelGetExtendedProperties
      type: object
    TaxCode:
      description: |
        Enthält die Daten eines Steuerkennzeichens
        Besonderheit beim PUT: Nicht angegebene Properties werden nicht verändert. Es reicht zum Beispiel aus, nur Id und Bezeichnung zu senden, dann wird nur die Bezeichnung des Steuerkennzeichens verändert.
      example:
        LastModified: 2000-01-23T04:56:07.000+00:00
        InputTaxNotDeductible: false
        LastModifiedBy: fb
        Description: steuerpfl. Umsätze voller Satz
        TypeOfTax: ValueAddedTax
        TaxCodeKey: MVSS
        TaxCalculation: Amount
        Id: 2303MVSS
        TaxKeys:
        - TypeOfValueAddedTax: Max
          TaxCodeId: 2303MVSS
          LastModifiedBy: fb
          Description: steuerpfl. Umsätze 19 v.H.
          TypeOfTax: ValueAddedTax
          Percentage: 19.00
          AccountForValueAddedTaxId: "null"
          TaxCodeKey: MVSS
          DatevTaxKey: "3"
          ShortDescription: USt 19 vH
          LastModified: 2000-01-23T04:56:07.000+00:00
          UseForOss: false
          LimitedValidity: 2000-01-23
          TaxAccountId: "103100000000021"
          EffectiveFrom: 2007-01-01
          AccountForDiscountId: "102800000000017"
          Id: 1001M19
          AccountForInputTaxId: "null"
          TaxKeyKey: M19
        - TypeOfValueAddedTax: Max
          TaxCodeId: 2303MVSS
          LastModifiedBy: fb
          Description: steuerpfl. Umsätze 19 v.H.
          TypeOfTax: ValueAddedTax
          Percentage: 19.00
          AccountForValueAddedTaxId: "null"
          TaxCodeKey: MVSS
          DatevTaxKey: "3"
          ShortDescription: USt 19 vH
          LastModified: 2000-01-23T04:56:07.000+00:00
          UseForOss: false
          LimitedValidity: 2000-01-23
          TaxAccountId: "103100000000021"
          EffectiveFrom: 2007-01-01
          AccountForDiscountId: "102800000000017"
          Id: 1001M19
          AccountForInputTaxId: "null"
          TaxKeyKey: M19
      properties:
        Id:
          description: Id des Steuerkennzeichens (technischer Schlüssel)
          example: 2303MVSS
          nullable: true
          type: string
        TaxCodeKey:
          description: Ordnungsbegriff des Steuerkennzeichens
          example: MVSS
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: steuerpfl. Umsätze voller Satz
          nullable: true
          type: string
        TypeOfTax:
          description: Steuerart
          enum:
          - NoTax
          - ValueAddedTax
          - InputTax
          - TurnoverTax
          - TaxFreeEu
          - EuOtherServices
          example: ValueAddedTax
          nullable: true
          type: string
        TaxCalculation:
          description: Steuerberechnung
          enum:
          - gross
          - net
          example: Amount
          nullable: true
          type: string
        InputTaxNotDeductible:
          description: Vorsteuer ist nicht voll abzugsfähig
          example: false
          nullable: true
          type: boolean
        TaxKeys:
          description: Steuerschlüssel
          items:
            $ref: '#/components/schemas/TaxKey'
          type: array
          example: null
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
      title: TaxCode
      type: object
    TaxKey:
      description: |
        Enthält die Daten eines Steuerschlüssels
        Besonderheit beim PUT: Nicht angegebene Properties werden nicht verändert. Es reicht zum Beispiel aus, nur Id und Bezeichnung zu senden, dann wird nur die Bezeichnung des Steuerschlüssels verändert.
      example:
        TypeOfValueAddedTax: Max
        TaxCodeId: 2303MVSS
        LastModifiedBy: fb
        Description: steuerpfl. Umsätze 19 v.H.
        TypeOfTax: ValueAddedTax
        Percentage: 19.00
        AccountForValueAddedTaxId: "null"
        TaxCodeKey: MVSS
        DatevTaxKey: "3"
        ShortDescription: USt 19 vH
        LastModified: 2000-01-23T04:56:07.000+00:00
        UseForOss: false
        LimitedValidity: 2000-01-23
        TaxAccountId: "103100000000021"
        EffectiveFrom: 2007-01-01
        AccountForDiscountId: "102800000000017"
        Id: 1001M19
        AccountForInputTaxId: "null"
        TaxKeyKey: M19
      properties:
        Id:
          description: Id des Steuerschlüssels (technischer Schlüssel)
          example: 1001M19
          nullable: true
          type: string
        TaxKeyKey:
          description: Ordnungsbegriff des Steuerschlüssels
          example: M19
          nullable: true
          type: string
        TaxCodeId:
          description: Id des Steuerkennzeichens (technischer Schlüssel)
          example: 2303MVSS
          nullable: true
          type: string
        TaxCodeKey:
          description: Ordnungsbegriff des Steuerkennzeichens
          example: MVSS
          nullable: true
          type: string
        TypeOfTax:
          description: Steuerart
          enum:
          - NoTax
          - ValueAddedTax
          - InputTax
          - TurnoverTax
          - TaxFreeEu
          - EuOtherServices
          example: ValueAddedTax
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: steuerpfl. Umsätze 19 v.H.
          nullable: true
          type: string
        ShortDescription:
          description: Kurzbezeichnung
          example: USt 19 vH
          nullable: true
          type: string
        LimitedValidity:
          description: befristete Gültigkeit
          format: date
          nullable: true
          type: string
        UseForOss:
          description: für OSS-Meldungen verwenden
          example: false
          nullable: true
          type: boolean
        TypeOfValueAddedTax:
          description: Umsatzsteuertyp
          enum:
          - Reduced
          - Max
          example: Max
          nullable: true
          type: string
        DatevTaxKey:
          description: DATEV Steuerschlüssel
          example: "3"
          nullable: true
          type: string
        EffectiveFrom:
          description: gültig ab
          example: 2007-01-01
          format: date
          nullable: true
          type: string
        Percentage:
          description: Prozentsatz
          example: 19.00
          nullable: true
          type: number
        TaxAccountId:
          description: Id des Steuerkontos (technischer Schlüssel)
          example: "103100000000021"
          nullable: true
          type: string
        AccountForInputTaxId:
          description: Id des Steuerkontos für Vorsteuer (technischer Schlüssel)
          example: "null"
          nullable: true
          type: string
        AccountForValueAddedTaxId:
          description: Id des Steuerkontos für Umsatzsteuer (technischer Schlüssel)
          example: "null"
          nullable: true
          type: string
        AccountForDiscountId:
          description: Id des Ausbuchungskontos (technischer Schlüssel)
          example: "102800000000017"
          nullable: true
          type: string
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
      title: TaxKey
      type: object
    TextBlock:
      description: |
        Enthält die Daten eines Textbausteins
        Besonderheit beim PUT: Nicht angegebene Properties werden nicht verändert. Es reicht zum Beispiel aus, nur Id und Bezeichnung zu senden, dann wird nur die Bezeichnung des Textbausteins verändert.
      example:
        Description: Eingangsrechnung
        TextBlockKey: ER
      properties:
        TextBlockKey:
          description: Ordnungsbegriff des Textbausteins
          example: ER
          maxLength: 5
          minLength: 1
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: Eingangsrechnung
          maxLength: 255
          minLength: 1
          nullable: true
          type: string
      title: TextBlock
      type: object
    TextBlockAllValues:
      allOf:
      - $ref: '#/components/schemas/TextBlock'
      - $ref: '#/components/schemas/TextBlockAllValuesExtendedProperties'
      description: Enthält die Daten eines Textbausteins
      example:
        LastModified: 2000-01-23T04:56:07.000+00:00
        LastModifiedBy: fb
        Description: Eingangsrechnung
        Id: "235000000000006"
        TextBlockKey: ER
      title: TextBlockAllValues
      type: object
    TextBlockAllValuesExtendedProperties:
      description: Enthält zusätzliche Felder für GET-Befehl eines Textbausteins
      properties:
        Id:
          description: Id des Textbausteins (technischer Schlüssel)
          example: "235000000000006"
          nullable: false
          type: string
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
      title: TextBlockAllValuesExtendedProperties
      type: object
    AfaMethod:
      description: |
        Enthält die Daten einer AfA-Methode
        Besonderheit beim PUT: Nicht angegebene Properties werden nicht verändert. Es reicht zum Beispiel aus, nur Id und Bezeichnung zu senden, dann wird nur die Bezeichnung der AfA-Methode verändert.
      example:
        LastModified: 2000-01-23T04:56:07.000+00:00
        LastModifiedBy: fb
        Type: LI
        Description: Linear 10 Jahre
        UsefulLifeUnit: IJ
        Percentage: 30.0
        Transition: OP
        Id: "222600000000001"
        AfaMethodKey: L10
        FixedAmount: 400.0
        UsefulLife: 10
        ReminderValue: 1.0
      properties:
        Id:
          description: Id der AfA-Methode (technischer Schlüssel)
          example: "222600000000001"
          nullable: true
          type: string
        AfaMethodKey:
          description: Ordnungsbegriff der AfA-Methode
          example: L10
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: Linear 10 Jahre
          nullable: true
          type: string
        Type:
          description: |
            Afa-Art
             * DE - Degressiv
             * DG - Degressive Gebäude-AfA
             * DL - Übergang degressiv nach linear
             * GN - GWG (auf Nutzungsdauer)
             * GW - GWG (Sofortabschreibung)
             * KA - Keine automat. Abschreibung
             * LB - Linear mit festem Betrag
             * LI - Linear auf Nutzungsdauer
             * LP - Linear mit festem Prozentsatz
             * SP - Sammelposten
          example: LI
          nullable: true
          type: string
        Percentage:
          description: Prozentsatz
          example: 30.0
          minimum: 0
          nullable: true
          type: number
        FixedAmount:
          description: Fester Betrag
          example: 400.0
          nullable: true
          type: number
        UsefulLife:
          description: Nutzungsdauer
          example: 10
          nullable: true
          type: integer
        ReminderValue:
          description: Erinnerungswert
          example: 1.0
          nullable: true
          type: number
        Transition:
          description: |
            Uebergang
             * LN - Im letzten Nutzungsjahr
             * OP - Optimiert
          example: OP
          nullable: true
          type: string
        UsefulLifeUnit:
          description: |
            Zeiteinheit Nutzungsdauer
             * IM - In Monaten
             * IJ - In Jahren)
          example: IJ
          nullable: true
          type: string
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
      title: AfaMethod
      type: object
    StaggeredRate:
      description: |
        Enthält die Daten des Staffelsatzes einer AfA-Methode
        Besonderheit beim PUT: Nicht angegebene Properties werden nicht verändert. Es reicht zum Beispiel aus, nur Id und Bezeichnung zu senden, dann wird nur die Bezeichnung des Staffelsatzes verändert.
      example:
        LastModified: 2000-01-23T04:56:07.000+00:00
        LastModifiedBy: fb
        Years: 8
        Percentage: 5.0
        AfaMethodId: "222600000000006"
        Id: "222700000000001"
      properties:
        Id:
          description: Id des Staffelsatzes (teschnicher Schluessel)
          example: "222700000000001"
          nullable: true
          type: string
        AfaMethodId:
          description: Id der AfA-Methode zu der der Staffelsatz gehört(technischer
            Schlüssel)
          example: "222600000000006"
          nullable: true
          type: string
        Years:
          description: Jahre
          example: 8
          minimum: 0
          nullable: true
          type: integer
        Percentage:
          description: Prozentsatz
          example: 5.0
          minimum: 0
          nullable: true
          type: number
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
      title: StaggeredRate
      type: object
    Location:
      description: |
        Enthält die Daten eines Standorts
        Besonderheit beim PUT: Nicht angegebene Properties werden nicht verändert. Es reicht zum Beispiel aus, nur Id und Bezeichnung zu senden, dann wird nur die Bezeichnung des Standorts verändert.
      example:
        LastModified: 2000-01-23T04:56:07.000+00:00
        LastModifiedBy: fb
        Description: Werkstatt
        Id: "239800000000002"
        LocationKey: "024"
      properties:
        Id:
          description: Id des Standorts (technischer Schlüssel)
          example: "239800000000002"
          nullable: true
          type: string
        LocationKey:
          description: Ordnungsbegriff des Standorts
          example: "024"
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: Werkstatt
          nullable: true
          type: string
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: fb
          nullable: true
          type: string
      title: Location
      type: object
    AccountingDocument:
      description: Enthält die Daten eines Buchungsbelegs
      example:
        ExternalDocumentNumber: A5678
        PostingDate: 2024-07-23
        TypeOfDms: nscale
        DocumentId: HSDMSEXAMPLE
        DeliveryDate: 2024-07-22
        UserDefinedFields:
        - null
        - null
        DocumentNumber: 1234
        DocumentDate: 2024-07-22
        Records:
        - InventoryNumber: 120001
          CreditAccount: 8400
          GrossNetIndicator: Net
          ChargeOffAmount: 122.75
          OpenItemAddress:
            CountryId: 1013D
            Zip: "20537"
            Website: ""
            City: Hamburg
            EMail: ""
            Salutation: Herr
            Name3: ""
            StreetOrPOBox: Eiffestraße 2
            AdditionalText1: ""
            AdditionalText3: ""
            AdditionalText2: ""
            FaxNumber: ""
            Country: D
            PhoneNumber: ""
            Name1: Poldi Mayr
            Name2: ""
          Amount: 1234.56
          TextKey: SAM
          OpenItemNumber: 12345
          Quantity: 85
          AssetTransactionType: Acquisition
          Text: Sammelrechnung
          VatRegNo: DE124356789
          DebitAccount: 10001
          TaxKey: M19
          CostCenter: "100"
          OpenItemBankDetails:
            IBAN: DE89370400440532013000
            BankCode: 37040044
            BIC: COBADEFFXXX
            AccountHolder: Max Mustermann
            AccountNumber: "0532013000"
          Asset:
            DepreciationMethod: L10
            Description: Hubwagen
            SerialNumber: HUB001MG
            CostCenter: "100"
            DepreciationStartDate: 2022-03-30
            IsActive: true
            ActiveUntil: 2024-02-25
            CollectiveItemNumber: 2024
            CostUnit: "1001"
            ControlQuantity: 5
            YearOfTransition: 7
            Location: "002"
          OpenItemId: "200500000000001"
          CostUnit: "1999"
          OpenItem:
            SepaMandateReference: 10001-0001
            Discount2DueDate: 2024-08-29
            OpenItemText: Rechnung 24/127
            Discount1Amount: 112.5
            NetDueDate: 2024-09-14
            Discount2Amount: 78.32
            OpenItemExternalRecordNumber: AR/F/2010001
            TermsOfPaymentKey: S01
            ReferenceDate: 2024-07-22
            Discount1DueDate: 2024-08-13
        - InventoryNumber: 120001
          CreditAccount: 8400
          GrossNetIndicator: Net
          ChargeOffAmount: 122.75
          OpenItemAddress:
            CountryId: 1013D
            Zip: "20537"
            Website: ""
            City: Hamburg
            EMail: ""
            Salutation: Herr
            Name3: ""
            StreetOrPOBox: Eiffestraße 2
            AdditionalText1: ""
            AdditionalText3: ""
            AdditionalText2: ""
            FaxNumber: ""
            Country: D
            PhoneNumber: ""
            Name1: Poldi Mayr
            Name2: ""
          Amount: 1234.56
          TextKey: SAM
          OpenItemNumber: 12345
          Quantity: 85
          AssetTransactionType: Acquisition
          Text: Sammelrechnung
          VatRegNo: DE124356789
          DebitAccount: 10001
          TaxKey: M19
          CostCenter: "100"
          OpenItemBankDetails:
            IBAN: DE89370400440532013000
            BankCode: 37040044
            BIC: COBADEFFXXX
            AccountHolder: Max Mustermann
            AccountNumber: "0532013000"
          Asset:
            DepreciationMethod: L10
            Description: Hubwagen
            SerialNumber: HUB001MG
            CostCenter: "100"
            DepreciationStartDate: 2022-03-30
            IsActive: true
            ActiveUntil: 2024-02-25
            CollectiveItemNumber: 2024
            CostUnit: "1001"
            ControlQuantity: 5
            YearOfTransition: 7
            Location: "002"
          OpenItemId: "200500000000001"
          CostUnit: "1999"
          OpenItem:
            SepaMandateReference: 10001-0001
            Discount2DueDate: 2024-08-29
            OpenItemText: Rechnung 24/127
            Discount1Amount: 112.5
            NetDueDate: 2024-09-14
            Discount2Amount: 78.32
            OpenItemExternalRecordNumber: AR/F/2010001
            TermsOfPaymentKey: S01
            ReferenceDate: 2024-07-22
            Discount1DueDate: 2024-08-13
        FolderUuid: 2df50b7f-9004-4f8e-bcfb-e8f812d7eeea
        TransactionId: B26B6BF8-FFE8-42AD-A785-C057A15354AE
      properties:
        FolderUuid:
          description: |
            Die UUID des Belegordners, in den der Beleg übergeben werden soll. Diese UUID ist in der HS Finanzbuchhaltung bzw. im HS Finanzwesen in den Stammdaten des Belegordners zu finden.
          example: 2df50b7f-9004-4f8e-bcfb-e8f812d7eeea
          nullable: false
          type: string
        DocumentNumber:
          description: Belegnummer (erlaubt sind ganzzahlige Werte mit bis zu 12 Stellen)
          example: 1234
          maximum: 999999999999
          minimum: 1
          nullable: true
          type: number
        ExternalDocumentNumber:
          description: Fremdbelegnummer
          example: A5678
          maxLength: 40
          nullable: true
          type: string
        DocumentDate:
          description: Belegdatum
          example: 2024-07-22
          format: date
          nullable: true
          type: string
        PostingDate:
          description: |
            Buchungsdatum. Wird der Beleg über accounting-document-groups/{accountingDocumentGroupId}/accounting-documents übergeben, wird dieser Wert ignoriert. Stattdessen wird das Buchungsdatum der Erfassungsgruppe verwendet.
          example: 2024-07-23
          format: date
          nullable: true
          type: string
        DeliveryDate:
          description: Leistungsdatum
          example: 2024-07-22
          format: date
          nullable: true
          type: string
        UserDefinedFields:
          description: Benutzerdefinierte Felder
          items:
            $ref: '#/components/schemas/UserDefinedFieldRef'
          type: array
        Records:
          description: Liste der Buchungssätze
          items:
            $ref: '#/components/schemas/AccountingRecord'
          nullable: true
          type: array
        DocumentId:
          description: DMS-Dokumenten-Id
          example: HSDMSEXAMPLE
          type: string
        TransactionId:
          description: Id zur Identifizierung des Belegs in der sendenden Anwendung
          example: B26B6BF8-FFE8-42AD-A785-C057A15354AE
          type: string
        TypeOfDms:
          description: |
            DMS-Typ Muss angegeben werden, wenn eine DocumentId oder eine TransactionId übergeben wurde.
          example: nscale
          nullable: true
          type: string
      required:
      - FolderUuid
      title: AccountingDocument
      type: object
    WorkOrderId:
      description: Identifizierer eines an die API übergebenen Objekts zum Abfragen
        des Status
      example:
        WorkOrderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        WorkOrderId:
          format: uuid
          type: string
    AccountingDocumentGroup:
      description: Enthält die Daten einer Erfassungsgruppe
      example:
        PostingDate: 2024-07-23
        Is13thMonth: false
        Note: Eingangsrechnungen 23.07.2024
        FolderUuid: 2df50b7f-9004-4f8e-bcfb-e8f812d7eeea
      properties:
        FolderUuid:
          description: |
            Die UUID des Belegordners, in der die Erfassungsgruppe angelegt werden soll. Diese UUID ist in der HS Finanzbuchhaltung bzw. im HS Finanzwesen in den Stammdaten des Belegordners zu finden.
          example: 2df50b7f-9004-4f8e-bcfb-e8f812d7eeea
          nullable: false
          type: string
        PostingDate:
          description: Buchungsdatum
          example: 2024-07-23
          format: date
          nullable: false
          type: string
        Note:
          description: Notiz
          example: Eingangsrechnungen 23.07.2024
          maxLength: 2000
          nullable: true
          type: string
        Is13thMonth:
          default: false
          description: Erfassungsgruppe liegt in 13. Buchungsperiode
          example: false
          nullable: true
          type: boolean
      required:
      - FolderUuid
      - PostingDate
      title: AccountingDocumentGroup
      type: object
    AccountingDocumentFolder:
      description: Enthält die Einstellungen eines Belegordners der Erfassungsart
        "Zentrale Belegübernahme"
      example:
        PresetForEntryOfGrossOrNetAmount: Automatic
        Description: Belegimport über die API
        PresetForJournalEntryDescription: Optional
        DocumentEntryDisabled: false
        TextBlocksEnabled: false
        CreateNewGroupForEachImport: false
        FolderUuid: 2df50b7f-9004-4f8e-bcfb-e8f812d7eeea
        Name: API-Import
        ExternalDocumentNumberEnabled: false
      properties:
        Name:
          description: Bezeichnung
          example: API-Import
          nullable: false
          type: string
        Description:
          description: Beschreibung
          example: Belegimport über die API
          nullable: true
          type: string
        FolderUuid:
          description: UUID des Belegordners
          example: 2df50b7f-9004-4f8e-bcfb-e8f812d7eeea
          nullable: false
          type: string
        DocumentEntryDisabled:
          description: Belegerfassung gesperrt
          example: false
          nullable: false
          type: boolean
        ExternalDocumentNumberEnabled:
          description: Fremdbelegnummer eingeben
          example: false
          nullable: false
          type: boolean
        TextBlocksEnabled:
          description: Textbaustein verwenden
          example: false
          type: boolean
        CreateNewGroupForEachImport:
          description: Je Übergabe eine neue Erfassungsgruppe erstellen
          example: false
          nullable: false
          type: boolean
        PresetForJournalEntryDescription:
          description: |
            Voreinstellung für den Buchungstext
            - Disabled -> Keine Eingabe
            - Optional -> Kann eingegeben werden
            - Required -> Muss eingegeben werden
          enum:
          - Disabled
          - Optional
          - Required
          example: Optional
          nullable: false
          type: string
        PresetForEntryOfGrossOrNetAmount:
          description: |
            Voreinstellung für Brutto-/Nettoerfassung
            - Automatic -> Automatische Umschaltung beibehalten
            - GrossAmount -> Belege immer Brutto erfassen
            - NetAmount -> Belege immer Netto erfassen
          enum:
          - Automatic
          - GrossAmount
          - NetAmount
          example: Automatic
          nullable: false
          type: string
      title: AccountingDocumentFolder
      type: object
    User:
      description: Enthält die Daten eines Benutzers
      example:
        ProfileId: "190200000000001"
        UserName: xx
        Description: Erika Mustermann
        Id: "190100000000001"
      properties:
        Id:
          description: Id des Benutzers (technischer Schlüssel)
          example: "190100000000001"
          nullable: true
          type: string
        ProfileId:
          description: Id des Berechtigungsprofils (technischer Schlüssel)
          example: "190200000000001"
          nullable: true
          type: string
        UserName:
          description: Benutzer
          example: xx
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: Erika Mustermann
          nullable: true
          type: string
      title: User
      type: object
    UserWithPassword:
      description: Enthält die Daten eines Benutzers für die Neuanlage
      example:
        ProfileId: "190200000000001"
        PasswordForceChange: true
        UserName: xx
        Description: Erika Mustermann
        Password: xx
      properties:
        ProfileId:
          description: Id des Berechtigungsprofils (technischer Schlüssel)
          example: "190200000000001"
          nullable: true
          type: string
        UserName:
          description: Benutzer
          example: xx
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: Erika Mustermann
          nullable: true
          type: string
        Password:
          description: Kennwort
          example: xx
          nullable: true
          type: string
        PasswordForceChange:
          description: Das Kennwort muss bei der nächsten Anmeldung geändert werden
          example: true
          nullable: true
          type: boolean
      title: UserWithPassword
      type: object
    ChangeUserPassword:
      description: Enthält die Daten eines Benutzers zum Ändern des Passwortes
      example:
        NewPassword: NeuesKennwort
        OldPassword: AltesKennwort
      properties:
        OldPassword:
          description: Altes Kennwort
          example: AltesKennwort
          nullable: true
          type: string
        NewPassword:
          description: Neues Kennwort
          example: NeuesKennwort
          nullable: true
          type: string
      title: ChangeUserPassword
      type: object
    AuthorizationProfile:
      description: Enthält die Daten eines Berechtigungsprofils
      example:
        Description: Systemverwalter
        Id: "190200000000001"
        Profile: ADMIN
      properties:
        Id:
          description: Id des Berechtigungsprofils (technischer Schlüssel)
          example: "190200000000001"
          nullable: true
          type: string
        Profile:
          description: Berechtigungsprofil
          example: ADMIN
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: Systemverwalter
          nullable: true
          type: string
      title: AuthorizationProfile
      type: object
    ApiUser:
      description: Enthält die Daten eines API-Benutzers
      example:
        Role: API-Benutzer
        ProfileId: "190200000000001"
        InternalRecordId: "190100000000001"
        UserName: erika.mustermann@test.de
        FullName: Erika Mustermann
        UserTypeKey: X100
        Id: "180200000000001"
      properties:
        Id:
          description: Id des API-Benutzers (technischer Schlüssel)
          example: "180200000000001"
          nullable: true
          type: string
        UserTypeKey:
          description: Key des Typs des API-Benutzers (technischer Schlüssel)
          example: X100
          nullable: true
          type: string
        FullName:
          description: optional - nur für UserType "Allgemein"
          example: Erika Mustermann
          nullable: true
          type: string
        UserName:
          description: Benutzername
          example: erika.mustermann@test.de
          nullable: true
          type: string
        Role:
          description: "Rolle; bestimmt das API-Berechtigungsprofil, wenn nicht \"\
            API-Benutzer\""
          example: API-Benutzer
          nullable: true
          type: string
        ProfileId:
          description: "Id des API-Berechtigungsprofils (technischer Schlüssel; kann\
            \ nur angegeben werden, wenn role \"API-Benutzer\" ist"
          example: "190200000000001"
          nullable: true
          type: string
        InternalRecordId:
          description: "Id des inhaltlichen Datensatzes, wenn der API-Benutzer mit\
            \ einem verknüpft ist z.B. Stammdaten oder Benutzer für UserTyp \"Benutzer\
            \ (Anwendung)\""
          example: "190100000000001"
          nullable: true
          type: string
      title: User
      type: object
    ApiUserWithAccessCode:
      description: Enthält die Daten eines API-Benutzers für die Neuanlage
      example:
        Role: API-Benutzer
        ProfileId: "190200000000001"
        InternalRecordId: "190100000000001"
        UserName: erika.mustermann@test.de
        FullName: Erika Mustermann
        UserTypeKey: X100
        AccessCode: xx
      properties:
        UserTypeKey:
          description: Key des Typs des API-Benutzers
          example: X100
          nullable: true
          type: string
        FullName:
          description: optional - nur für UserType "Allgemein"
          example: Erika Mustermann
          nullable: true
          type: string
        UserName:
          description: Benutzername
          example: erika.mustermann@test.de
          nullable: true
          type: string
        Role:
          description: "Rolle; bestimmt das API-Berechtigungsprofil, wenn nicht \"\
            API-Benutzer\""
          example: API-Benutzer
          nullable: true
          type: string
        ProfileId:
          description: "Id des API-Berechtigungsprofils (technischer Schlüssel; kann\
            \ nur angegeben werden, wenn role \"API-Benutzer\" ist"
          example: "190200000000001"
          nullable: true
          type: string
        InternalRecordId:
          description: "Id des inhaltlichen Datensatzes, wenn der API-Benutzer mit\
            \ einem verknüpft ist z.B. Stammdaten oder Benutzer für UserTyp \"Benutzer\
            \ (Anwendung)\""
          example: "190100000000001"
          nullable: true
          type: string
        AccessCode:
          description: Zugriffscode
          example: xx
          nullable: true
          type: string
      title: ApiUserWithAccessCode
      type: object
    ApiAuthorizationProfile:
      description: Enthält die Daten eines API-Berechtigungsprofils
      example:
        Description: Systemverwalter API
        Id: "190200000000001"
        Profile: API-ADMIN
      properties:
        Id:
          description: Id des API-Berechtigungsprofils (technischer Schlüssel)
          example: "190200000000001"
          nullable: true
          type: string
        Profile:
          description: API-Berechtigungsprofil
          example: API-ADMIN
          nullable: true
          type: string
        Description:
          description: Bezeichnung
          example: Systemverwalter API
          nullable: true
          type: string
      title: ApiAuthorizationProfile
      type: object
    ApiUserType:
      description: Enthält die Daten eines Typs für ApiUser
      example:
        FriendlyName: Allgemein
        Key: X000
      properties:
        Key:
          description: Key des ApiUserTypes (technischer Schlüssel)
          example: X000
          nullable: true
          type: string
        FriendlyName:
          description: Bezeichnung
          example: Allgemein
          nullable: true
          type: string
      title: ApiUserType
      type: object
    ApiUserRole:
      description: Enthält die Daten einer Rolle für ApiUser
      example:
        FriendlyName: API-Benutzer
        Id: "180600000000001"
      properties:
        Id:
          description: Id der ApiUserRole (technischer Schlüssel)
          example: "180600000000001"
          nullable: true
          type: string
        FriendlyName:
          description: Bezeichnung
          example: API-Benutzer
          nullable: true
          type: string
      title: ApiUserRole
      type: object
    UserDefinedFieldDefinition:
      description: Definition für ein benutzerdefiniertes Feld
      example:
        LastModifiedBy: xx
        IsNegativeAllowed: false
        Name: OP-Zahlung
        DecimalPlaces: 2
        LastModified: 2000-01-23T04:56:07.000+00:00
        Area: Kunde
        Type: Alphanumeric
        DefinedDefaultValue: D
        IsRequired: false
        Number: 1
        HasAttributes: false
        Length: 6
        Id: "101700000000001"
        ShowThousandsSeparator: false
        IsOnlyAttributeAllowed: false
        HasIndex: false
        DefaultValueType: None
      properties:
        Id:
          description: Id der Definition für ein benutzerdefiniertes Feld (technischer
            Schlüssel)
          example: "101700000000001"
          nullable: true
          type: string
        Area:
          description: "Bereich, für den das benutzerdefinierte Feld definiert ist."
          example: Kunde
          nullable: true
          type: string
        Number:
          description: Nummer des benutzerdefinierten Felds. Anzeige-Reihenfolge der
            benutzerdefinierten Felder (optional).
          example: 1
          nullable: true
          type: integer
        Name:
          description: Name des benutzerdefinierten Felds
          example: OP-Zahlung
          nullable: true
          type: string
        Type:
          description: Typ des benutzerdefinierten Felds
          enum:
          - Alphanumeric
          - Numeric
          - Date
          example: Alphanumeric
          nullable: true
          type: string
        Length:
          description: Anzahl der maximal erlaubten Zeichen. Für Type=Numeric -> Vorkommastellen.
            Für Type=Date -> immer 10
          example: 6
          nullable: true
          type: integer
        DecimalPlaces:
          description: "Nachkommastellen, nur für Type=Numeric"
          example: 2
          nullable: true
          type: integer
        IsNegativeAllowed:
          description: "Negative Werte zulassen, nur für Type=Numeric"
          example: false
          nullable: true
          type: boolean
        ShowThousandsSeparator:
          description: "Tausendertrennzeichen, nur für Type=Numeric"
          example: false
          nullable: true
          type: boolean
        IsRequired:
          description: "Angabe, ob ein Wert angegeben werden muss (Pflichteingabe)"
          example: false
          nullable: true
          type: boolean
        HasAttributes:
          description: "Angabe, ob für dieses Feld vorgegebene Werte (Merkmale) zur\
            \ Auswahl stehen"
          example: false
          nullable: true
          type: boolean
        IsOnlyAttributeAllowed:
          description: "Angabe, ob für dieses Feld nur ein vorgegebener Wert (Merkmal)\
            \ ausgewählt werden kann"
          example: false
          nullable: true
          type: boolean
        HasIndex:
          description: "Feld hat Index, für einen schnelleren Zugriff"
          example: false
          nullable: true
          type: boolean
        DefaultValueType:
          description: Art der Vorbesetzung; CurrentDate nur für Type=Date
          enum:
          - None
          - DefinedValue
          - CurrentDate
          example: None
          nullable: true
          type: string
        DefinedDefaultValue:
          description: "Vorbesetzung, wenn DefaultValueType=DefinedValue"
          example: D
          nullable: true
          type: string
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: xx
          nullable: true
          type: string
      title: UserDefinedFieldDefinition
      type: object
    UserDefinedFieldAttribute:
      description: Merkmal für ein benutzerdefiniertes Feld
      example:
        LastModified: 2000-01-23T04:56:07.000+00:00
        LastModifiedBy: xx
        Description: Deutschland
        Attribute: D
        Id: "101600000000020"
        UserDefinedFieldDefinitionId: "101700000000001"
      properties:
        Id:
          description: Id eines Merkmals für ein benutzerdefiniertes Feld (technischer
            Schlüssel)
          example: "101600000000020"
          nullable: true
          type: string
        UserDefinedFieldDefinitionId:
          description: "Id der Definition des benutzerdefinierten Feldes, für das\
            \ dieses Merkmal gültig ist"
          example: "101700000000001"
          nullable: true
          type: string
        Attribute:
          description: Merkmal zur Auswahl im benutzerdefinierten Feld (kurz)
          example: D
          nullable: true
          type: string
        Description:
          description: Bezeichnung des Merkmals
          example: Deutschland
          nullable: true
          type: string
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: xx
          nullable: true
          type: string
      title: UserDefinedFieldAttribute
      type: object
    ArchiveEntry:
      description: Eintrag im Ablagesystem
      example:
        LastModified: 2021-11-18
        CreationDate: 2021-11-17
        ObjectClass: DK_Verdienstabrechnung
        ContentType: application/pdf
        Version: 1
        Attributes:
        - Value: Meyer
          Name: Name
        - Value: Meyer
          Name: Name
        Creator: Jim Knopf
        IsFolder: false
        HasNote: false
        ResourceKey: HS_DemoLA$NOTSET$207$2$NOTSET
        Name: Vertrag.pdf
      properties:
        ResourceKey:
          description: Id der Resource im Ablagesystem (technischer Schlüssel)
          example: HS_DemoLA$NOTSET$207$2$NOTSET
          nullable: true
          type: string
        Name:
          description: Name des Eintrags
          example: Vertrag.pdf
          nullable: true
          type: string
        IsFolder:
          description: "true, wenn es sich bei dem Eintrag um ein Verzeichnis handelt.\
            \ false, wenn es sich um ein Dokument handelt."
          example: false
          nullable: true
          type: boolean
        CreationDate:
          description: Erstellungsdatum
          example: 2021-11-17
          format: date
          nullable: true
          type: string
        LastModified:
          description: Letztes Änderungsdatum
          example: 2021-11-18
          format: date
          nullable: true
          type: string
        Version:
          description: Version
          example: 1
          nullable: true
          type: integer
        ObjectClass:
          description: Typ des Eintrags
          example: DK_Verdienstabrechnung
          nullable: true
          type: string
        HasNote:
          description: "true, wenn es zu dem Eintrag Notizen gibt"
          example: false
          nullable: true
          type: boolean
        ContentType:
          description: Dokumenttyp
          example: application/pdf
          nullable: true
          type: string
        Creator:
          description: Name des Erstellers
          example: Jim Knopf
          nullable: true
          type: string
        Attributes:
          description: Attribute
          items:
            $ref: '#/components/schemas/ArchiveEntryAttribute'
          type: array
          example: null
      title: ArchiveEntry
      type: object
    ArchiveEntryAttribute:
      description: Attribute eines Eintrags im Ablagesystem. Es werden nur die mit
        Werten gefüllten Attribute zurückgegeben.
      example:
        Value: Meyer
        Name: Name
      properties:
        Name:
          description: Name des Attributes
          example: Name
          nullable: true
          type: string
        Value:
          description: Wert des Attributes
          example: Meyer
          nullable: true
          type: string
      title: ArchiveEntryAttribute
      type: object
    ArchiveFolderInfo:
      description: Information zu einem Stammordner im Ablagesystem
      example:
        Description: Personalakte
        FolderType: PER
      properties:
        FolderType:
          description: Key des Stammordner im Ablagesystem
          example: PER
          nullable: true
          type: string
        Description:
          description: Bezeichnung des Stammordners im Ablagesystem
          example: Personalakte
          nullable: true
          type: string
      title: ArchiveFolderInfo
      type: object
    ImportResponse:
      description: Enthält Informationen zum Status des Datenimports.
      example:
        Errors:
        - RecordIdentifier: RecordIdentifier
          Field: Field
          RecordType: RecordType
          Message: Message
          Value: Value
          LineNumber: 1
        - RecordIdentifier: RecordIdentifier
          Field: Field
          RecordType: RecordType
          Message: Message
          Value: Value
          LineNumber: 1
        ErrorText: ErrorText
        Informations:
        - RecordIdentifier: RecordIdentifier
          Field: Field
          RecordType: RecordType
          Message: Message
          Value: Value
          LineNumber: 1
        - RecordIdentifier: RecordIdentifier
          Field: Field
          RecordType: RecordType
          Message: Message
          Value: Value
          LineNumber: 1
        CountRecordsRead: 0
        HasErrors: true
        CountRecordsWithError: 6
        Warnings:
        - RecordIdentifier: RecordIdentifier
          Field: Field
          RecordType: RecordType
          Message: Message
          Value: Value
          LineNumber: 1
        - RecordIdentifier: RecordIdentifier
          Field: Field
          RecordType: RecordType
          Message: Message
          Value: Value
          LineNumber: 1
        HasWarnings: true
      properties:
        HasErrors:
          description: Sind Fehler aufgetreten?
          type: boolean
        HasWarnings:
          description: Sind Warnungen aufgetreten?
          type: boolean
        Message:
          description: Fehler/Information als Text aufbereitet
          type: string
        CountRecordsRead:
          description: Anzahl gelesener Datensätze
          type: integer
        CountRecordsWithError:
          description: Anzahl fehlerhafter Datensätze
          type: integer
        Errors:
          description: "Liste mit Fehlern, die beim Import aufgetreten sind."
          items:
            $ref: '#/components/schemas/ImportResponseDetail'
          type: array
        Warnings:
          description: "Liste mit Warnungen, die beim Import aufgetreten sind."
          items:
            $ref: '#/components/schemas/ImportResponseDetail'
          type: array
        Informations:
          description: "Liste mit Informationen, die beim Import aufgetreten sind."
          items:
            $ref: '#/components/schemas/ImportResponseDetail'
          type: array
      required:
      - CountRecordsRead
      - CountRecordsWithError
      - Errors
      - HasErrors
      - HasWarnings
      - Informations
      - Message
      - Warnings
      title: ImportResponse
      type: object
    ImportResponseDetail:
      description: |
        Detaillierte Informationen zu Fehlern/Warnungen/Informationen, die beim
        Import aufgetreten sind.
      example:
        RecordIdentifier: RecordIdentifier
        Field: Field
        RecordType: RecordType
        Message: Message
        Value: Value
        AdditionalInfo: AdditionalInfo
        LineNumber: 1
      properties:
        LineNumber:
          description: "Zeilennummer (1-basiert), zu der diese Information zugeordnet\
            \ ist"
          type: integer
        RecordType:
          description: Satzart
          type: string
        RecordIdentifier:
          description: Datensatz-Identifikator (z.B. Ordnungsbegriff)
          type: string
        Field:
          description: Importfeld
          type: string
        Message:
          description: (Fehler-)Text
          type: string
        Value:
          description: Textstelle
          type: string
        AdditionalInfo:
          description: Zusatzangaben
          type: string
      required:
      - Field
      - LineNumber
      - Message
      - RecordIdentifier
      - RecordType
      - Value
      title: ImportResponseDetail
      type: object
    ImportData:
      description: Enthält die Import-Steuerungsdaten und die zu importierenden Daten.
      example:
        DoReportInformations: true
        DoReportWarnings: true
        FormatID: FormatID
        Lines:
        - Lines
        - Lines
      properties:
        Lines:
          description: Zu importierende Zeilen (Daten). Aufbau gemäß Importsteuerdatei.
          items:
            type: string
          type: array
        FormatID:
          description: |
            Steuerung: Importformat gemäß <ANWENDUNG>_imp.ini bzw. <ANWENDUNG>_imp_def.ini, z.B.
            BLG.
          type: string
        DoReportWarnings:
          description: |
            Steuerung: Sollen Warnungen ausgegeben werden?
          type: boolean
        DoReportInformations:
          description: |
            Steuerung: Sollen Informationen ausgegeben werden?
          type: boolean
      required:
      - DoReportInformations
      - DoReportWarnings
      - FormatID
      - Lines
      title: ImportData
      type: object
    UserDefinedFieldRef:
      $ref: '#/components/schemas/UserDefinedFieldValue'
    UserDefinedFieldValue:
      description: Wert für ein benutzerdefiniertes Feld
      properties:
        Id:
          description: Id der Definition für ein benutzerdefiniertes Feld (technischer
            Schlüssel)
          example: "101700000000001"
          nullable: true
          type: string
        Name:
          description: Name des benutzerdefinierten Felds
          example: OP-Zahlung
          nullable: true
          type: string
        Type:
          description: Typ des benutzerdefinierten Felds
          enum:
          - Alphanumeric
          - Numeric
          - Date
          nullable: true
          type: string
          example: null
        AlphanumericValue:
          description: "Wert, wenn es sich um ein alphanumerisches benutzerdefiniertes\
            \ Feld handelt"
          example: ""
          nullable: true
          type: string
        NumericValue:
          description: "Wert, wenn es sich um ein numerisches benutzerdefiniertes\
            \ Feld handelt"
          nullable: true
          type: number
          example: null
        DateValue:
          description: "Wert, wenn es sich um ein benutzerdefiniertes Feld vom Typ\
            \ Datum handelt, im Format YYYY-MM-DD.  Zum Löschen des Datums muss ein\
            \ Leerstring übermittelt werden."
          example: 2000-01-23
          nullable: true
          type: string
        Number:
          description: Nummer des benutzerdefinierten Felds. Anzeige-Reihenfolge der
            benutzerdefinierten Felder (optional). ReadOnly.
          example: 1
          nullable: true
          type: integer
      title: UserDefinedFieldValue
      type: object
      example: null
    AddressRef:
      $ref: '#/components/schemas/Address'
    Address:
      description: Enthält die Daten einer Adresse
      example:
        CountryId: 1013D
        Zip: "20537"
        LastModifiedBy: xx
        Website: ""
        City: Hamburg
        EMail: ""
        Salutation: Herr
        Name3: ""
        LastModified: 2000-01-23T04:56:07.000+00:00
        StreetOrPOBox: Eiffestraße 2
        AdditionalText1: ""
        AdditionalText3: ""
        AdditionalText2: ""
        FaxNumber: ""
        Country: D
        PhoneNumber: ""
        Name1: Poldi Mayr
        Name2: ""
      properties:
        Salutation:
          description: Anrede
          example: Herr
          nullable: true
          type: string
        Name1:
          description: Name 1
          example: Poldi Mayr
          nullable: true
          type: string
        Name2:
          description: Name 2
          example: ""
          nullable: true
          type: string
        Name3:
          description: Name 3
          example: ""
          nullable: true
          type: string
        StreetOrPOBox:
          description: Straße/Postfach
          example: Eiffestraße 2
          nullable: true
          type: string
        Country:
          description: Land (Ordnungsbegriff)
          example: D
          nullable: true
          type: string
        CountryId:
          description: Id des Landes (technischer Schlüssel)
          example: 1013D
          nullable: true
          type: string
        Zip:
          description: Postleitzahl
          example: "20537"
          nullable: true
          type: string
        City:
          description: Ort
          example: Hamburg
          nullable: true
          type: string
        AdditionalText1:
          description: Zusatz 1
          example: ""
          nullable: true
          type: string
        AdditionalText2:
          description: Zusatz 2
          example: ""
          nullable: true
          type: string
        AdditionalText3:
          description: Zusatz 3
          example: ""
          nullable: true
          type: string
        PhoneNumber:
          description: Telefonnummer
          example: ""
          nullable: true
          type: string
        FaxNumber:
          description: Telefaxnummer
          example: ""
          nullable: true
          type: string
        EMail:
          description: E-Mail-Adresse
          example: ""
          nullable: true
          type: string
        Website:
          description: URL der Homepage
          example: ""
          nullable: true
          type: string
        LastModified:
          description: Letzte Änderung am
          format: date-time
          nullable: true
          type: string
        LastModifiedBy:
          description: Letzte Änderung durch
          example: xx
          nullable: true
          type: string
      title: Address
      type: object
    AccountingRecord:
      description: Buchungssatz
      example:
        InventoryNumber: 120001
        CreditAccount: 8400
        GrossNetIndicator: Net
        ChargeOffAmount: 122.75
        OpenItemAddress:
          CountryId: 1013D
          Zip: "20537"
          Website: ""
          City: Hamburg
          EMail: ""
          Salutation: Herr
          Name3: ""
          StreetOrPOBox: Eiffestraße 2
          AdditionalText1: ""
          AdditionalText3: ""
          AdditionalText2: ""
          FaxNumber: ""
          Country: D
          PhoneNumber: ""
          Name1: Poldi Mayr
          Name2: ""
        Amount: 1234.56
        TextKey: SAM
        OpenItemNumber: 12345
        Quantity: 85
        AssetTransactionType: Acquisition
        Text: Sammelrechnung
        VatRegNo: DE124356789
        DebitAccount: 10001
        TaxKey: M19
        CostCenter: "100"
        OpenItemBankDetails:
          IBAN: DE89370400440532013000
          BankCode: 37040044
          BIC: COBADEFFXXX
          AccountHolder: Max Mustermann
          AccountNumber: "0532013000"
        Asset:
          DepreciationMethod: L10
          Description: Hubwagen
          SerialNumber: HUB001MG
          CostCenter: "100"
          DepreciationStartDate: 2022-03-30
          IsActive: true
          ActiveUntil: 2024-02-25
          CollectiveItemNumber: 2024
          CostUnit: "1001"
          ControlQuantity: 5
          YearOfTransition: 7
          Location: "002"
        OpenItemId: "200500000000001"
        CostUnit: "1999"
        OpenItem:
          SepaMandateReference: 10001-0001
          Discount2DueDate: 2024-08-29
          OpenItemText: Rechnung 24/127
          Discount1Amount: 112.5
          NetDueDate: 2024-09-14
          Discount2Amount: 78.32
          OpenItemExternalRecordNumber: AR/F/2010001
          TermsOfPaymentKey: S01
          ReferenceDate: 2024-07-22
          Discount1DueDate: 2024-08-13
      properties:
        DebitAccount:
          description: Konto Soll
          example: 10001
          nullable: true
          type: number
        CreditAccount:
          description: Konto Haben
          example: 8400
          nullable: true
          type: number
        TaxKey:
          description: Steuerschlüssel
          example: M19
          maxLength: 3
          nullable: true
          type: string
        Amount:
          description: Buchungsbetrag
          example: 1234.56
          nullable: true
          type: number
        GrossNetIndicator:
          description: |
            Brutto/Netto-Angabe zu Amount.
            Bei Personenkonten, Konten mit Steuerart "Nicht steuerbar" und Buchungen mit "Umsatzsteuer beim Leistungsempfänger" muss der Buchungsbetrag Brutto übergeben werden.
            - Gross -> Bruttobetrag
            - Net -> Nettobetrag
          enum:
          - Gross
          - Net
          example: Net
          nullable: false
          type: string
        Quantity:
          description: Menge
          example: 85
          nullable: true
          type: number
        TextKey:
          description: Schlüssel für Textbaustein
          example: SAM
          maxLength: 5
          nullable: true
          type: string
        Text:
          description: Buchungstext
          example: Sammelrechnung
          maxLength: 60
          nullable: true
          type: string
        CostCenter:
          description: Kostenstelle
          example: "100"
          maxLength: 20
          nullable: true
          type: string
        CostUnit:
          description: Kostenträger
          example: "1999"
          maxLength: 20
          nullable: true
          type: string
        OpenItemNumber:
          description: OP-Nummer (erlaubt sind ganzzahlige Werte mit bis zu 12 Stellen)
          example: 12345
          maximum: 999999999999
          minimum: 1
          nullable: true
          type: number
        OpenItemId:
          description: Id eines Offenen Postens (technischer Schlüssel)
          example: "200500000000001"
          nullable: true
          type: string
        ChargeOffAmount:
          description: Ausbuchungsbetrag
          example: 122.75
          nullable: true
          type: number
        VatRegNo:
          description: USt-IdNr.
          example: DE124356789
          maxLength: 15
          nullable: true
          type: string
        OpenItem:
          $ref: '#/components/schemas/OpenItemInAccountingRecord'
        OpenItemAddress:
          $ref: '#/components/schemas/OpenItemAddressPutPost'
        OpenItemBankDetails:
          $ref: '#/components/schemas/BankDetails'
        InventoryNumber:
          description: Inventarnummer der Anlage (erlaubt sind ganzzahlige Werte mit
            bis zu 12 Stellen)
          example: 120001
          maximum: 999999999999
          minimum: 1
          nullable: true
          type: number
        AssetTransactionType:
          description: |
            Buchungsart der Anlage
            - Acquisition -> Zugang
            - Retirement -> Abgang
            - Deduction -> Abzug
            - Transfer -> Umbuchung
            - ManualDepreciation -> manuelle Abschreibung
            - SpecialDepreciation -> Sonderabschreibung
            - WriteUp -> Zuschreibung
            - CumulativeAcquisitionValue -> kumulierter Anschaffungswert
            - CumulativeDepreciation -> kumulierte Abschreibung
            - TransferDepreciation -> Umbuchung Abschreibung
            - RetirementDepreciation -> Abgang Abschreibung
            - SubsequentAcquisition -> Teilzugang
          enum:
          - Acquisition
          - Retirement
          - Deduction
          - Transfer
          - ManualDepreciation
          - SpecialDepreciation
          - WriteUp
          - CumulativeAcquisitionValue
          - CumulativeDepreciation
          - TransferDepreciation
          - RetirementDepreciation
          - SubsequentAcquisition
          example: Acquisition
          nullable: true
          type: string
        Asset:
          $ref: '#/components/schemas/AssetInAccountingRecord'
      title: AccountingRecord
      type: object
    OpenItemInAccountingRecord:
      description: Offener Posten in Buchung
      example:
        SepaMandateReference: 10001-0001
        Discount2DueDate: 2024-08-29
        OpenItemText: Rechnung 24/127
        Discount1Amount: 112.5
        NetDueDate: 2024-09-14
        Discount2Amount: 78.32
        OpenItemExternalRecordNumber: AR/F/2010001
        TermsOfPaymentKey: S01
        ReferenceDate: 2024-07-22
        Discount1DueDate: 2024-08-13
      properties:
        OpenItemText:
          description: OP-Text
          example: Rechnung 24/127
          maxLength: 60
          nullable: true
          type: string
        OpenItemExternalRecordNumber:
          description: OP-Fremdbelegnummer
          example: AR/F/2010001
          maxLength: 40
          nullable: true
          type: string
        SepaMandateReference:
          description: SEPA-Mandatsreferenz
          example: 10001-0001
          maxLength: 35
          nullable: true
          type: string
        TermsOfPaymentKey:
          description: Zahlungsbedingung
          example: S01
          maxLength: 3
          nullable: true
          type: string
        ReferenceDate:
          description: |
            Bezugsdatum
            Die Fristen für die Fälligkeit werden von diesem Datum aus berechnet.
          example: 2024-07-22
          format: date
          nullable: true
          type: string
        NetDueDate:
          description: Fälligkeitsdatum
          example: 2024-09-14
          format: date
          nullable: true
          type: string
        Discount1DueDate:
          description: Skonto 1 Fälligkeitsdatum
          example: 2024-08-13
          format: date
          nullable: true
          type: string
        Discount1Amount:
          description: Skonto 1 Betrag
          example: 112.5
          nullable: true
          type: number
        Discount2DueDate:
          description: Skonto 2 Fälligkeitsdatum
          example: 2024-08-29
          format: date
          nullable: true
          type: string
        Discount2Amount:
          description: Skonto 2 Betrag
          example: 78.32
          nullable: true
          type: number
      title: OpenItemInAccountingRecord
      type: object
    OpenItemAddressPutPost:
      description: Enthält die Daten der Adresse eines Offenen Postens für POST- und
        PUT-Befehl
      example:
        CountryId: 1013D
        Zip: "20537"
        Website: ""
        City: Hamburg
        EMail: ""
        Salutation: Herr
        Name3: ""
        StreetOrPOBox: Eiffestraße 2
        AdditionalText1: ""
        AdditionalText3: ""
        AdditionalText2: ""
        FaxNumber: ""
        Country: D
        PhoneNumber: ""
        Name1: Poldi Mayr
        Name2: ""
      properties:
        Salutation:
          description: Anrede
          example: Herr
          maxLength: 50
          nullable: true
          type: string
        Name1:
          description: Name 1
          example: Poldi Mayr
          maxLength: 50
          nullable: true
          type: string
        Name2:
          description: Name 2
          example: ""
          maxLength: 50
          nullable: true
          type: string
        Name3:
          description: Name 3
          example: ""
          maxLength: 50
          nullable: true
          type: string
        StreetOrPOBox:
          description: Straße/Postfach
          example: Eiffestraße 2
          maxLength: 50
          nullable: true
          type: string
        Country:
          description: Land (Ordnungsbegriff)
          example: D
          nullable: true
          type: string
        CountryId:
          description: Id des Landes (technischer Schlüssel)
          example: 1013D
          nullable: true
          type: string
        Zip:
          description: Postleitzahl
          example: "20537"
          maxLength: 10
          nullable: true
          type: string
        City:
          description: Ort
          example: Hamburg
          maxLength: 50
          nullable: true
          type: string
        AdditionalText1:
          description: Zusatz 1
          example: ""
          maxLength: 50
          nullable: true
          type: string
        AdditionalText2:
          description: Zusatz 2
          example: ""
          maxLength: 50
          nullable: true
          type: string
        AdditionalText3:
          description: Zusatz 3
          example: ""
          maxLength: 50
          nullable: true
          type: string
        PhoneNumber:
          description: Telefonnummer
          example: ""
          maxLength: 60
          nullable: true
          type: string
        FaxNumber:
          description: Telefaxnummer
          example: ""
          maxLength: 60
          nullable: true
          type: string
        EMail:
          description: E-Mail-Adresse
          example: ""
          maxLength: 255
          nullable: true
          type: string
        Website:
          description: URL der Homepage
          example: ""
          maxLength: 100
          nullable: true
          type: string
      title: OpenItemAddressPutPost
      type: object
    BankDetails:
      description: Bankverbindungsdaten
      example:
        IBAN: DE89370400440532013000
        BankCode: 37040044
        BIC: COBADEFFXXX
        AccountHolder: Max Mustermann
        AccountNumber: "0532013000"
      properties:
        IBAN:
          description: IBAN
          example: DE89370400440532013000
          maxLength: 34
          nullable: true
          type: string
        BankCode:
          description: Bankleitzahl
          example: 37040044
          maximum: 99999999
          nullable: true
          type: integer
        BIC:
          description: BIC
          example: COBADEFFXXX
          maxLength: 11
          nullable: true
          type: string
        AccountNumber:
          description: Kontonummer
          example: "0532013000"
          maxLength: 12
          nullable: true
          type: string
        AccountHolder:
          description: Kontoinhaber
          example: Max Mustermann
          maxLength: 70
          nullable: true
          type: string
      title: BankDetails
      type: object
    AssetInAccountingRecord:
      description: Anlage in Buchung
      example:
        DepreciationMethod: L10
        Description: Hubwagen
        SerialNumber: HUB001MG
        CostCenter: "100"
        DepreciationStartDate: 2022-03-30
        IsActive: true
        ActiveUntil: 2024-02-25
        CollectiveItemNumber: 2024
        CostUnit: "1001"
        ControlQuantity: 5
        YearOfTransition: 7
        Location: "002"
      properties:
        Description:
          description: Bezeichnung
          example: Hubwagen
          maxLength: 60
          nullable: true
          type: string
        Location:
          description: Standort (Ordnungsbegriff)
          example: "002"
          maxLength: 3
          nullable: true
          type: string
        SerialNumber:
          description: Seriennummer
          example: HUB001MG
          maxLength: 50
          nullable: true
          type: string
        DepreciationMethod:
          description: Abschreibungsmethode (Ordnungsbegriff)
          example: L10
          maxLength: 3
          nullable: true
          type: string
        YearOfTransition:
          description: Jahr des Übergangs von degressiver zu linearer Abschreibung
          example: 7
          nullable: true
          type: integer
        DepreciationStartDate:
          description: Abschreibungsbeginn
          example: 2022-03-30
          format: date
          nullable: true
          type: string
        IsActive:
          description: Anlage ist aktiv
          example: true
          nullable: true
          type: boolean
        ActiveUntil:
          description: Aktiv bis
          example: 2024-02-25
          format: date
          nullable: true
          type: string
        CostCenter:
          description: Kostenstelle (Ordnungsbegriff)
          example: "100"
          maxLength: 20
          nullable: true
          type: string
        CostUnit:
          description: Kostenträger (Ordnungsbegriff)
          example: "1001"
          maxLength: 20
          nullable: true
          type: string
        ControlQuantity:
          description: Kontrollmenge für Sammelposten
          example: 5
          nullable: true
          type: integer
        CollectiveItemNumber:
          description: Sammelpostennummer
          example: 2024
          format: int64
          nullable: true
          type: integer
      title: AssetInAccountingRecord
      type: object
    createToken_request:
      properties:
        grant_type:
          description: |
            Art und Umfang der Angaben, die zur Vergabe eines Access-Tokens erforderlich sind.
            Bei der ersten Token-Erzeugung mit UserName und Password muss der Wert "password" sein.
            Bei erneuter Erzeugung mit RefreshToken muss der Wert "refresh_token" sein.
          enum:
          - password
          - refresh_token
          nullable: false
          type: string
        username:
          description: |
            Name des API-Benutzers, für den das Token erzeugt werden soll.
            Der Wert muss bei grant_type "password" besetzt sein.
          nullable: false
          type: string
        password:
          description: |
            Kennwort des API-Benutzers, für den das Token erzeugt werden soll.
            Der Wert muss bei grant_type "password" besetzt sein.
          nullable: false
          type: string
        scope:
          description: |
            Bereich von Requests, für die das Token gültig sein soll.
            (wird z.Zt. nicht ausgewertet, kann Leerstring sein).
            Der Wert muss bei grant_type "password" besetzt sein.
          nullable: false
          type: string
        refresh_token:
          description: |
            Refresh Token aus der zuletzt erhaltenen TokenResponse.
            Der Wert muss bei grant_type "refresh_token" besetzt sein.
          format: guid
          nullable: false
          type: string
      required:
      - grant_type
      type: object
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
    ApiKeyAuth:
      in: header
      name: X-API-KEY
      type: apiKey
    OAuth2:
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/fb-api/v1/authorize
          scopes:
            read: Grants read access
            write: Grants write access
          tokenUrl: https://example.com/fb-api/v1/token
      type: oauth2
